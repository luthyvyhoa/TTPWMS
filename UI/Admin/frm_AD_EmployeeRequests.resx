<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgDataNavigator.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v22.2" name="DevExpress.Utils.v22.2, Version=22.2.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imgDataNavigator.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v22.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxOS4xLCBWZXJzaW9uPTE5LjEu
        My4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAAAAAAACCw==
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB4AAAEACABgCAAAFgAAACgAAAAgAAAAPAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACZagAAmWoBAJlqAgCZagMAmWoEAJlrBgCaawYAmWsHAJprBwCaawgAmmsKAJprCwCabA0AmmwQAJps
        EgCbbRcAm20ZAJtuGQCccCYAnHAoAJ1yMACeczEAnnMyAJ5zMwCedDMAnnQ0AJ50NQCfdDYAn3U2AJ92
        OgCgeD4AoXg+AKJ6RQCie0YAo31KAKN9SwCkfk0ApX9QAKWAUQCmgVMAp4NXAKiFWgCohVwAqYZeAKmH
        XgCph18AqodfAKmIYACqiWEAq4liAKuKYwCrimQArIxnAK2MaACtjWoAro9sAK+PbQCvkG0Ar5BuAK+Q
        bwCwknEAsZNzALGUcwCxlHQAspV1ALKVdgCzlncAs5Z4ALOXeAC0mHoAs5h7ALSYewC0mHwAtJl7ALSZ
        fAC1mn4Atpt/ALacfwC3nIAAuJ2BALedggC4nYIAuJ6DALiehAC4n4QAuJ+FALmfhQC5oIYAuqGHALqh
        iAC6oYkAu6KIALuiiQC7o4oAu6OLALyljQC9pY4AvaaPAL6nkAC/qpQAwKqVAMGtmADCrZgAwq2ZAMOu
        mwDEr5wAxLCcAMSwnQDFsZ4AxbGfAMWyoADGsqAAxrOgAMazoQDGtKIAx7SiAMe0owDItaQAyLamAMi3
        pgDJt6YAybenAMq5qQDLuakAy7qpAMy7qwDMu6wAzr6vAM6/sADPwLIA0MGzANDBtADRwrUA0sO2ANPF
        uADUx7sA1ci8ANbJvQDWyb4A18vAANjMwQDZzcIA2c3DANnOxADaz8UA28/GANzRxwDd0skA3dPKAN7U
        zADe1cwA39XNAN/WzgDg188A4djQAOTc1QDl3dcA5d7XAObf2ADm39kA5+DZAOfg2gDo4dsA6eLcAOni
        3QDp490A6ePeAOrj3gDq5N8A6+XgAOvl4QDs5+IA7ejjAO3o5ADu6eUA7+rmAPDr6ADw7OgA8u7qAPPw
        7QD08O0A9PDuAPTx7gD08e8A9fLwAPbz8AD28/EA9vTyAPf08gD39fMA+Pb0APj29QD59/YA+fj2APr4
        9wD6+fgA+/n4APv6+AD7+vkA+/r6APz6+gD8+/oA/Pv7AP38/AD+/f0A//7+AP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMDIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEW9vksAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTyc7OyVUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALazJzc3J
        rS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADmeFAAAAAATnz0AAAAAAAAAAAAAAAAAAAAAAAAAAAAqus6Z
        AAAAAJfOuywAAAAAAAAAAAAAAAAAAAAAAAAAFq7Ozs6DAACAzs7OrxoAAAAAAAAAAAAAAAAAAAAAAABi
        o7zOzs1aVMzOzr2kZAAAAAAAAAAAAAAAAAAAAAAAbZ0AAA84SEtMSDoRAACbdAAAAAAAAAAAAAAAAAAA
        AC7GznAAAAAAnaAAAAAAas7JMwAAAAAAAAAAAAAAAAAAo87OwiUAAGvOznEAACPAzs6oAQAAAAAAAAAA
        AAAAAG/Ozs7OmgAgv87OwSIAmM7Ozs51AAAAAAAAAAAAAAAdYmaMpbjOU5POzs7OlkzOuKWMZWAeAAAA
        AAAAAAAAAIixBgAAAAlMR0pRT0pHTgkAAAADr4sAAAAAAAAAAAAkx852AAAAAa56AAAAAHiwAgAAAHLO
        yiYAAAAAAAAAAIvOzrsVAABrzr4cAAAYvM5xAAASuM7OjwAAAAAAAAAfxM7Ozn4AC7POzoEAAH/OzrYQ
        AHrOzs7IIQAAAAAAAF6+zs7OuQ5zzs7OwBsXvs7OznkFt87Ozr5hAAAAAAAAfAE1cpCnV7LOzs7OfnrO
        zs7Os1OokXQ2AXsAAAAAAETFGQAAAABBBzFGTWdcXGdORjIHQgAAAAAQwVMAAAAAjs5oAAAAAKpFAAAA
        AGRnAAAAAD6sAAAAAGPOkwAAAAG7zpsAAAA5zo4AAAAAn6IAAAAAi848AAAAms6+AwAAQ87Oww0AAIzO
        uwEAACbOzigAAAC4zo4AAAPAzs5QAACFzs7OVQAKvs7OQAAAf87OggAAN87OvwwASc7OzocAAKbOzs6G
        AGDOzs6EAACrzs6vAACBzs7OXwCDzs7OqQAIyc7OzqEAk87OzqIAJ87Ozs4pAKHOzs6SAJ3Ozs7LCz/O
        zs7OvgG9zs7OxAR4zs7Ozn0Bws7Ozr0BvM7Ozs5DAVKNtc7OXc7Ozs7OO5zOzs7OnzTOzs7OzljOzrSO
        VgIAAAAALHFsrsvOzs5uwM7Ozs7Dac7OzsuubHErAAAAAAAAAAAAAAAAAjFTdlmJlJWVlIpbd1UyAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>