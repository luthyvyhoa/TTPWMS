using Common.Controls;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using UI.Helper;
using UI.MasterSystemSetup;

namespace UI.WarehouseManagement
{
    public partial class frm_WR_OrderConfirmationIssues : frmBaseForm
    {
        public frm_WR_OrderConfirmationIssues()
        {
            InitializeComponent();
            this.dateEditFromDate.EditValue = DateTime.Now.AddDays(-14);
            this.dateEditToDate.EditValue = DateTime.Now;
            //    string fromDate = DateTime.Now.AddDays(-100).ToString("yyyy-MM-dd");
            //string toDate = DateTime.Now.ToString("yyyy-MM-dd");
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource

            string dateFrom = Convert.ToDateTime(dateEditFromDate.EditValue).Date.ToString("yyyy-MM-dd");
            string dateTo = Convert.ToDateTime(dateEditToDate.EditValue).Date.ToString("yyyy-MM-dd");
            this.grdOvertimeOrders.DataSource = DA.FileProcess.LoadTable("STOrderConfirmationIssues @FromDate='" + dateFrom + "',@ToDate='" + dateTo + "', @StoreID = " + AppSetting.StoreID);
        }
        private void rpe_OrderID_Click(object sender, EventArgs e)
        {
            string orderNo = Convert.ToString(this.grvOvertimeOrdersTableView.GetRowCellValue(this.grvOvertimeOrdersTableView.FocusedRowHandle, "OrderNumber"));
            if (string.IsNullOrEmpty(orderNo)) return;
            string orderNumber = orderNo.Substring(0, 2);
            int OrderID = Convert.ToInt32(this.grvOvertimeOrdersTableView.GetRowCellValue(this.grvOvertimeOrdersTableView.FocusedRowHandle, "OrderID").ToString());
            if (orderNumber.ToUpper().Equals("DO"))
            {
                // Display disptching order
                frm_WM_DispatchingOrders dispatchingOrder = frm_WM_DispatchingOrders.GetInstance(OrderID);
                if (dispatchingOrder.Visible)
                {
                    dispatchingOrder.ReloadData();
                }
                dispatchingOrder.Show();
                dispatchingOrder.WindowState = FormWindowState.Maximized;
                dispatchingOrder.BringToFront();
            }
            else
            {
                // Display Receiving Order
                frm_WM_ReceivingOrders receivingOrder = frm_WM_ReceivingOrders.Instance;
                receivingOrder.ReceivingOrderIDFind = OrderID;
                receivingOrder.Show();
                receivingOrder.WindowState = FormWindowState.Maximized;
                receivingOrder.BringToFront();
            }
        }

        private void btn_Refresh_Click(object sender, EventArgs e)
        {
            string dateFrom = Convert.ToDateTime(dateEditFromDate.EditValue).Date.ToString("yyyy-MM-dd");
            string dateTo = Convert.ToDateTime(dateEditToDate.EditValue).Date.ToString("yyyy-MM-dd");
            this.grdOvertimeOrders.DataSource = DA.FileProcess.LoadTable("STOvertimeOrders @FromDate='" + dateFrom + "',@ToDate='" + dateTo + "', @StoreID = " + AppSetting.StoreID);
        }

        private void rpe_CustomerID_Click(object sender, EventArgs e)
        {
            int CustomerID = Convert.ToInt32(grvOvertimeOrdersTableView.GetRowCellValue(this.grvOvertimeOrdersTableView.FocusedRowHandle, "CustomerID").ToString());
            if (CustomerID <= 0) return;
            frm_MSS_Contracts frm = frm_MSS_Contracts.GetInstance(CustomerID);
            frm.InitData(CustomerID);
            frm.Show();
        }
    }
}

