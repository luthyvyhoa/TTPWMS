using DA;
using System;
using UI;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using UI.Helper;

namespace UI.Supperviors
{
    public partial class frm_S_AO_EmployeeIncomeReview : Form
    {
        public frm_S_AO_EmployeeIncomeReview()
        {
            InitializeComponent();
            this.dateEditFromDate.EditValue = DateTime.Now.AddDays(-7);
            this.dateEditTodate.EditValue = DateTime.Now;
            //    string fromDate = DateTime.Now.AddDays(-100).ToString("yyyy-MM-dd");
            //string toDate = DateTime.Now.ToString("yyyy-MM-dd");
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource

            string dateFrom = Convert.ToDateTime(dateEditFromDate.EditValue).Date.ToString("yyyy-MM-dd");
            string dateTo = Convert.ToDateTime(dateEditTodate.EditValue).Date.ToString("yyyy-MM-dd");
            this.pvgrdEmployeeIncomeCheck.DataSource = FileProcess.LoadTable("STEmployeeIncomeCheck " + " @StoreID = " + AppSetting.StoreID + ",@FromDate='" + dateFrom + "',@ToDate='" + dateTo + "'");
            //sqlDataSourcePivotEmployeeIncome.Fill();
        }

        private void btnPreview_Click(object sender, EventArgs e)
        {
            this.pvgrdEmployeeIncomeCheck.ShowPrintPreview();
        }

        private void btnRefresh_Click(object sender, EventArgs e)
        {
            Common.Process.Wait.Start(this);
            string dateFrom = Convert.ToDateTime(dateEditFromDate.EditValue).Date.ToString("yyyy-MM-dd");
            string dateTo = Convert.ToDateTime(dateEditTodate.EditValue).Date.ToString("yyyy-MM-dd");
            this.pvgrdEmployeeIncomeCheck.DataSource = FileProcess.LoadTable("STEmployeeIncomeCheck " + " @StoreID = " + AppSetting.StoreID + ",@FromDate='" + dateFrom + "',@ToDate='" + dateTo + "'");
            Common.Process.Wait.Close();
        }

        private void pvgrdEmployeeIncomeCheck_CellClick(object sender, DevExpress.XtraPivotGrid.PivotCellEventArgs e)
        {
            Form form = new Form();
            form.Text = "Records";
            // Place a DataGrid control on the form.
            DataGridView grid = new DataGridView();
            grid.Parent = form;
            grid.Dock = DockStyle.Fill;
            // Get the recrd set associated with the current cell and bind it to the grid.
            grid.DataSource = e.CreateDrillDownDataSource();
            form.Bounds = new Rectangle(100, 100, 1000, 400);
            // Display the form.
            form.ShowDialog();
            form.Dispose();
        }

        private void simpleButtonExport_Click(object sender, EventArgs e)
        {
            var pivotExportOptions = new DevExpress.XtraPivotGrid.PivotXlsxExportOptions();
            pivotExportOptions.ExportType = DevExpress.Export.ExportType.DataAware;
            SaveFileDialog sfd = new SaveFileDialog();
            //sfd.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);

            sfd.Filter = "Excel 97-2003 (*.xls)|*.xls|Excel 07-2010 (*.xlsx)|*.xlsx";

            DialogResult dr = sfd.ShowDialog();
            if (dr == DialogResult.OK)
            {
                pvgrdEmployeeIncomeCheck.ExportToXlsx(sfd.FileName, pivotExportOptions);
                try
                {
                    System.Diagnostics.Process.Start("Excel", sfd.FileName);
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
            sfd.Dispose();
        }

        private void pvgrdEmployeeIncomeCheck_Click(object sender, EventArgs e)
        {

        }

        private void rpi_hle_EmployeeID_Click(object sender, EventArgs e)
        {
            //if (e.DataField.FieldName.Equals("BillingComments") ||
            //    e.DataField.FieldName.Equals("BillingCalculated"))
            //{
            //    if (e.RowIndex >= this.dataSource.Rows.Count) return;
            //    int stockOnHandDetailPalletID = Convert.ToInt32(this.dataSource.Rows[e.RowIndex]["StockOnHandDetailPalletID"]);
            //    string comments = Convert.ToString(this.dataSource.Rows[e.RowIndex]["BillingComments"]);
            //    bool isBilled = Convert.ToBoolean(this.dataSource.Rows[e.RowIndex]["BillingCalculated"]);
            //    frm_BR_OnHandDailyDetailPalletsEdit frmEditForm = new frm_BR_OnHandDailyDetailPalletsEdit(stockOnHandDetailPalletID, comments, isBilled);
            //    frmEditForm.ShowDialog();
            //    this.btn_Refresh_Click(sender, e);
            //}
            //else
            //{

            //}




            Int32 varEmployeeID = Convert.ToInt32(this.pvgrdEmployeeIncomeCheck.GetCellValue(1, 1).ToString());
            this.grcEmployeeInOut.DataSource = FileProcess.LoadTable("");
        }

        private void textEmployeeID_EditValueChanged(object sender, EventArgs e)
        {
            string varEmployeeID = this.textEmployeeID.EditValue.ToString();
            string rptDate = Convert.ToDateTime(txtReportDate.EditValue).Date.ToString("yyyy-MM-dd");
            this.textEmployeeNAme.Text = "";
            this.grcEmployeeeWorkingOrders.DataSource = FileProcess.LoadTable("STEmployeeWorkingDailyPerformanceOrders '" + rptDate + "', " + varEmployeeID);
            this.grcEmployeeInOut.DataSource = FileProcess.LoadTable("SELECT * FROM Gate_EmployeeInOut WHERE TimeIn > Getdate()-60 AND EmployeeID = " + varEmployeeID );
            this.grcEmployeeScanningActivities.DataSource = FileProcess.LoadTable("STEmployeeWorkingDailyPerformanceDetails '" + rptDate + "'," + varEmployeeID);


        }
    }
}
