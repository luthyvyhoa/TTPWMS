//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class SwireDBEntities : DbContext
    {
        public SwireDBEntities()
            : base("name=SwireDBEntities")
        {
            Configuration.LazyLoadingEnabled = false;
            Configuration.ProxyCreationEnabled = false;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
        public virtual DbSet<WorkTypeDefinition> WorkTypeDefinitions { get; set; }
        public virtual DbSet<CustomerLocationBooking> CustomerLocationBooking { get; set; }
        public virtual DbSet<Discounts> Discounts { get; set; }
        public virtual DbSet<BillingConfirmDiscount> BillingConfirmDiscount { get; set; }
        public virtual DbSet<DiscountCooperations> DiscountCooperations { get; set; }
        public virtual DbSet<CustomerBookingDetails> CustomerBookingDetails { get; set; }
        public virtual DbSet<ExCustomerClientRule> ExCustomerClientRules { get; set; }
        public virtual DbSet<ProductMeasure> ProductMeasure { get; set; }
        public virtual DbSet<DVTQuyCach> DVTQuyCach { get; set; }
        public virtual DbSet<QCMaster> QCMaster { get; set; }
        public virtual DbSet<QCSP> QCSP { get; set; }
        public virtual DbSet<ErrorLogs> ErrorLogs { get; set; }
        public virtual DbSet<ContractCommitments> ContractCommitments { get; set; }
        public virtual DbSet<Aisles> Aisles { get; set; }
        public virtual DbSet<AssignmentEmployees> AssignmentEmployees { get; set; }
        public virtual DbSet<Attachments> Attachments { get; set; }
        public virtual DbSet<BillingDetails> BillingDetails { get; set; }
        public virtual DbSet<Billings> Billings { get; set; }
        public virtual DbSet<BillingSummary> BillingSummary { get; set; }
        public virtual DbSet<BillingSummaryDetails> BillingSummaryDetails { get; set; }
        public virtual DbSet<BlastFreezerDetails> BlastFreezerDetails { get; set; }
        public virtual DbSet<BlastFreezers> BlastFreezers { get; set; }
        public virtual DbSet<EmployeeKPITarget> EmployeeKPITargets { get; set; }
        public virtual DbSet<EmployeeKPIRecord> EmployeeKPIRecords { get; set; }
        public virtual DbSet<BusinessTripPrices> BusinessTripPrices { get; set; }
        public virtual DbSet<BusinessTrips> BusinessTrips { get; set; }
        public virtual DbSet<TripDetailStatu> TripDetailStatus { get; set; }
        public virtual DbSet<TransportTripOutsourceDetail> TransportTripOutsourceDetails { get; set; }
        public virtual DbSet<TransportTrip> TransportTrips { get; set; }
        public virtual DbSet<MonthlyPayRollSummary> MonthlyPayRollSummaries { get; set; }
        public virtual DbSet<ClosedPeriods> ClosedPeriods { get; set; }
        public virtual DbSet<ContractDetails> ContractDetails { get; set; }
        public virtual DbSet<ContractEmployeeServices> ContractEmployeeServices { get; set; }
        public virtual DbSet<Contracts> Contracts { get; set; }
        public virtual DbSet<ContractAccountingStatu> ContractAccountingStatus { get; set; }
        public virtual DbSet<CRM_OpportunityDetails> CRM_OpportunityDetails { get; set; }
        public virtual DbSet<CRM_OpportunityServices> CRM_OpportunityServices { get; set; }
        public virtual DbSet<CustomerBookings> CustomerBookings { get; set; }
        public virtual DbSet<CustomerCategories> CustomerCategories { get; set; }
        public virtual DbSet<CustomerClients> CustomerClients { get; set; }
        public virtual DbSet<CustomerComplainDetails> CustomerComplainDetails { get; set; }
        public virtual DbSet<CustomerContacts> CustomerContacts { get; set; }
        public virtual DbSet<CustomerDispatchMethod> CustomerDispatchMethod { get; set; }
        public virtual DbSet<CustomerEvents> CustomerEvents { get; set; }
        public virtual DbSet<CustomerProductGroups> CustomerProductGroups { get; set; }
        public virtual DbSet<CustomerProperties> CustomerProperties { get; set; }
        public virtual DbSet<CustomerRequirements> CustomerRequirements { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<CustomerInquiryDetail> CustomerInquiryDetails { get; set; }
        public virtual DbSet<CustomerForecastDetail> CustomerForecastDetails { get; set; }
        public virtual DbSet<CustomerForecast> CustomerForecasts { get; set; }
        public virtual DbSet<LoadingReportDetail> LoadingReportDetails { get; set; }
        public virtual DbSet<CustomerInquiry> CustomerInquiries { get; set; }
        public virtual DbSet<CustomerInquiryService> CustomerInquiryServices { get; set; }
        public virtual DbSet<CustomerInquiryProductDefinition> CustomerInquiryProductDefinitions { get; set; }
        public virtual DbSet<EmployeeChangeHistory> EmployeeChangeHistories { get; set; }
        public virtual DbSet<EmployeeEducation> EmployeeEducations { get; set; }
        public virtual DbSet<CustomerInquiryProduct> CustomerInquiryProducts { get; set; }
        public virtual DbSet<CustomerInquiryServiceDefinition> CustomerInquiryServiceDefinitions { get; set; }
        public virtual DbSet<CustomerSalesContractDetails> CustomerSalesContractDetails { get; set; }
        public virtual DbSet<CustomerSalesContracts> CustomerSalesContracts { get; set; }
        public virtual DbSet<CustomerSalesInvoiceDetails> CustomerSalesInvoiceDetails { get; set; }
        public virtual DbSet<CustomerSalesInvoicePallets> CustomerSalesInvoicePallets { get; set; }
        public virtual DbSet<CustomerSalesInvoices> CustomerSalesInvoices { get; set; }
        public virtual DbSet<CustomerSalesPromotionDetails> CustomerSalesPromotionDetails { get; set; }
        public virtual DbSet<CustomerSalesPromotionProducts> CustomerSalesPromotionProducts { get; set; }
        public virtual DbSet<CustomerSalesPromotions> CustomerSalesPromotions { get; set; }
        public virtual DbSet<CustomerServiceCosting> CustomerServiceCosting { get; set; }
        public virtual DbSet<CustomerServiceCostingDetails> CustomerServiceCostingDetails { get; set; }
        public virtual DbSet<DailyCheckDetails> DailyCheckDetails { get; set; }
        public virtual DbSet<DailyChecks> DailyChecks { get; set; }
        public virtual DbSet<DailyTask> DailyTask { get; set; }
        public virtual DbSet<Departments> Departments { get; set; }
        public virtual DbSet<DispatchingLocations> DispatchingLocations { get; set; }
        public virtual DbSet<DispatchingOrderDetails> DispatchingOrderDetails { get; set; }
        public virtual DbSet<DispatchingOrders> DispatchingOrders { get; set; }
        public virtual DbSet<DispatchingProducts> DispatchingProducts { get; set; }
        public virtual DbSet<DeliveryOrderDetail> DeliveryOrderDetails { get; set; }
        public virtual DbSet<DeliveryOrder> DeliveryOrders { get; set; }
        public virtual DbSet<EDI_DetailBreakdowns> EDI_DetailBreakdowns { get; set; }
        public virtual DbSet<EDI_OrderDetails> EDI_OrderDetails { get; set; }
        public virtual DbSet<EDI_Orders> EDI_Orders { get; set; }
        public virtual DbSet<ElectricityConsumption> ElectricityConsumption { get; set; }
        public virtual DbSet<EmployeeAnnualHistories> EmployeeAnnualHistories { get; set; }
        public virtual DbSet<EmployeeAreaResponsibities> EmployeeAreaResponsibities { get; set; }
        public virtual DbSet<EmployeeAreas> EmployeeAreas { get; set; }
        public virtual DbSet<EmployeeHistory> EmployeeHistory { get; set; }
        public virtual DbSet<EmployeeOTLeaveRemainDaytmp> EmployeeOTLeaveRemainDaytmp { get; set; }
        public virtual DbSet<EmployeeOTSupervisors> EmployeeOTSupervisors { get; set; }
        public virtual DbSet<EmployeeReminders> EmployeeReminders { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<EmployeeWorkings> EmployeeWorkings { get; set; }
        public virtual DbSet<Gate_Companies> Gate_Companies { get; set; }
        public virtual DbSet<Gate_EmployeeInOut> Gate_EmployeeInOut { get; set; }
        public virtual DbSet<Gate_Properties> Gate_Properties { get; set; }
        public virtual DbSet<Gate_PropertyMovements> Gate_PropertyMovements { get; set; }
        public virtual DbSet<Gate_TruckInOut> Gate_TruckInOut { get; set; }
        public virtual DbSet<Gate_WorkerLaborSafetyTraining> Gate_WorkerLaborSafetyTraining { get; set; }
        public virtual DbSet<Gate_WorkerRegularInOut> Gate_WorkerRegularInOut { get; set; }
        public virtual DbSet<Gate_Workers> Gate_Workers { get; set; }
        public virtual DbSet<InternalAuditDetails> InternalAuditDetails { get; set; }
        public virtual DbSet<InternalAuditEmployees> InternalAuditEmployees { get; set; }
        public virtual DbSet<InternalAudits> InternalAudits { get; set; }
        public virtual DbSet<KPIDefinitions> KPIDefinitions { get; set; }
        public virtual DbSet<KPIRecordings> KPIRecordings { get; set; }
        public virtual DbSet<LoadingReports> LoadingReports { get; set; }
        public virtual DbSet<Locations> Locations { get; set; }
        public virtual DbSet<LocationsHome> LocationsHome { get; set; }
        public virtual DbSet<LunchPlaces> LunchPlaces { get; set; }
        public virtual DbSet<MHLWorkDefinitions> MHLWorkDefinitions { get; set; }
        public virtual DbSet<MHLWorkDetails> MHLWorkDetails { get; set; }
        public virtual DbSet<MHLWorks> MHLWorks { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<NoteDetails> NoteDetails { get; set; }
        public virtual DbSet<Notes> Notes { get; set; }
        public virtual DbSet<OperatingCostDefinitions> OperatingCostDefinitions { get; set; }
        public virtual DbSet<OperatingCostDetailByCustomers> OperatingCostDetailByCustomers { get; set; }
        public virtual DbSet<OperatingCostElectricityDetails> OperatingCostElectricityDetails { get; set; }
        public virtual DbSet<OperatingCostElectricty> OperatingCostElectricty { get; set; }
        public virtual DbSet<OperatingCostLabourDetails> OperatingCostLabourDetails { get; set; }
        public virtual DbSet<OperatingCostLabours> OperatingCostLabours { get; set; }
        public virtual DbSet<OperatingCostMonthlyDetails> OperatingCostMonthlyDetails { get; set; }
        public virtual DbSet<OperatingCostMonths> OperatingCostMonths { get; set; }
        public virtual DbSet<OperatingCostNonlistedRates> OperatingCostNonlistedRates { get; set; }
        public virtual DbSet<OperationCostMonthlyParameters> OperationCostMonthlyParameters { get; set; }
        public virtual DbSet<OrderCategories> OrderCategories { get; set; }
        public virtual DbSet<OtherJobDefinitions> OtherJobDefinitions { get; set; }
        public virtual DbSet<OtherJobs> OtherJobs { get; set; }
        public virtual DbSet<OtherService> OtherService { get; set; }
        public virtual DbSet<OtherServiceDetails> OtherServiceDetails { get; set; }
        public virtual DbSet<PalletCartons> PalletCartons { get; set; }
        public virtual DbSet<PalletHoldings> PalletHoldings { get; set; }
        public virtual DbSet<Pallets> Pallets { get; set; }
        public virtual DbSet<PalletStatu> PalletStatus { get; set; }
        public virtual DbSet<PayRollDetails> PayRollDetails { get; set; }
        public virtual DbSet<PayRollEmployeeInvalid> PayRollEmployeeInvalid { get; set; }
        public virtual DbSet<PayRollGradedPayments> PayRollGradedPayments { get; set; }
        public virtual DbSet<PayrollMonth> PayrollMonth { get; set; }
        public virtual DbSet<PayrollMonthlyDetails> PayrollMonthlyDetails { get; set; }
        public virtual DbSet<PayRollYear> PayRollYear { get; set; }
        public virtual DbSet<Positions> Positions { get; set; }
        public virtual DbSet<PositionTrainingRequirements> PositionTrainingRequirements { get; set; }
        public virtual DbSet<ProblemCategories> ProblemCategories { get; set; }
        public virtual DbSet<Product824> Product824 { get; set; }
        public virtual DbSet<ProductCategories> ProductCategories { get; set; }
        public virtual DbSet<ProductChanging> ProductChanging { get; set; }
        public virtual DbSet<ProductDamages> ProductDamages { get; set; }
        public virtual DbSet<ProductTransformation> ProductTransformations { get; set; }
        public virtual DbSet<ProductTransRecordDetail> ProductTransRecordDetails { get; set; }
        public virtual DbSet<ProductTransRecord> ProductTransRecords { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Products_HN> Products_HN { get; set; }
        public virtual DbSet<Profiles> Profiles { get; set; }
        public virtual DbSet<Projects> Projects { get; set; }
        public virtual DbSet<PropertyDamages> PropertyDamages { get; set; }
        public virtual DbSet<QAReport> QAReport { get; set; }
        public virtual DbSet<QAReportDetails> QAReportDetails { get; set; }
        public virtual DbSet<QHSE> QHSE { get; set; }
        public virtual DbSet<QualityCheckingDetails> QualityCheckingDetails { get; set; }
        public virtual DbSet<QualityCheckings> QualityCheckings { get; set; }
        public virtual DbSet<QuarantineDetails> QuarantineDetails { get; set; }
        public virtual DbSet<Quarantines> Quarantines { get; set; }
        public virtual DbSet<ReceivingCartons> ReceivingCartons { get; set; }
        public virtual DbSet<ReceivingOrderDetails> ReceivingOrderDetails { get; set; }
        public virtual DbSet<ReceivingOrders> ReceivingOrders { get; set; }
        public virtual DbSet<ReceivingUnits> ReceivingUnits { get; set; }
        public virtual DbSet<ReleaseDetails> ReleaseDetails { get; set; }
        public virtual DbSet<Releases> Releases { get; set; }
        public virtual DbSet<Replenishments> Replenishments { get; set; }
        public virtual DbSet<Reports> Reports { get; set; }
        public virtual DbSet<ReportToCustomer> ReportToCustomer { get; set; }
        public virtual DbSet<RoomNumbers> RoomNumbers { get; set; }
        public virtual DbSet<Rooms> Rooms { get; set; }
        public virtual DbSet<Rooms_Locations> Rooms_Locations { get; set; }
        public virtual DbSet<SafetyStockReasonDefinitions> SafetyStockReasonDefinitions { get; set; }
        public virtual DbSet<SafetyStockReasons> SafetyStockReasons { get; set; }
        public virtual DbSet<SafetyStocks> SafetyStocks { get; set; }
        public virtual DbSet<Schedules> Schedules { get; set; }
        public virtual DbSet<ServicesDefinition> ServicesDefinition { get; set; }
        public virtual DbSet<ServicesDefinitionMeasures> ServicesDefinitionMeasures { get; set; }
        public virtual DbSet<Shifts> Shifts { get; set; }
        public virtual DbSet<StockMovementDetails> StockMovementDetails { get; set; }
        public virtual DbSet<StockMovementMass> StockMovementMass { get; set; }
        public virtual DbSet<StockMovements> StockMovements { get; set; }
        public virtual DbSet<StoredProcedureExecuteHistories> StoredProcedureExecuteHistories { get; set; }
        public virtual DbSet<Stores> Stores { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TaskHistories> TaskHistories { get; set; }
        public virtual DbSet<Tasks> Tasks { get; set; }
        public virtual DbSet<tblagjenda> tblagjenda { get; set; }
        public virtual DbSet<Test> Test { get; set; }
        public virtual DbSet<TruckOnRoadData> TruckOnRoadDatas { get; set; }
        public virtual DbSet<Truck> Trucks { get; set; }
        public virtual DbSet<Test2> Test2 { get; set; }
        public virtual DbSet<tmpAisles> tmpAisles { get; set; }
        public virtual DbSet<tmpBillingByOvertime> tmpBillingByOvertime { get; set; }
        public virtual DbSet<tmpBillingByProducts> tmpBillingByProducts { get; set; }
        public virtual DbSet<tmpBillingCombined> tmpBillingCombined { get; set; }
        public virtual DbSet<tmpBillingCustomerJoined> tmpBillingCustomerJoined { get; set; }
        public virtual DbSet<tmpBillingCustomers> tmpBillingCustomers { get; set; }
        public virtual DbSet<tmpBillingCustomersContracts> tmpBillingCustomersContracts { get; set; }
        public virtual DbSet<tmpBillingReport> tmpBillingReport { get; set; }
        public virtual DbSet<tmpBillingRunByDispatchingOrders> tmpBillingRunByDispatchingOrders { get; set; }
        public virtual DbSet<tmpBillingRunByReceivingOrders> tmpBillingRunByReceivingOrders { get; set; }
        public virtual DbSet<tmpConsumables> tmpConsumables { get; set; }
        public virtual DbSet<tmpContainerChecking> tmpContainerChecking { get; set; }
        public virtual DbSet<tmpContainerChecking2016_01_26> tmpContainerChecking2016_01_26 { get; set; }
        public virtual DbSet<tmpCustomerSalesInvoiceReprt> tmpCustomerSalesInvoiceReprt { get; set; }
        public virtual DbSet<tmpDispatchingLocationBreak_bk2016_09_05> tmpDispatchingLocationBreak_bk2016_09_05 { get; set; }
        public virtual DbSet<tmpDispatchingOrderDetailsBreak> tmpDispatchingOrderDetailsBreak { get; set; }
        public virtual DbSet<tmpDispatchingOrders> tmpDispatchingOrders { get; set; }
        public virtual DbSet<tmpDispatchingProductExport> tmpDispatchingProductExport { get; set; }
        public virtual DbSet<tmpDispatchingProducts> tmpDispatchingProducts { get; set; }
        public virtual DbSet<tmpEmployeeInOutFinger> tmpEmployeeInOutFinger { get; set; }
        public virtual DbSet<tmpEmployeeLunch> tmpEmployeeLunch { get; set; }
        public virtual DbSet<tmpEmployeeOTSupervisors> tmpEmployeeOTSupervisors { get; set; }
        public virtual DbSet<tmpEmployeeWorkingDetailCheck_TotalPerday> tmpEmployeeWorkingDetailCheck_TotalPerday { get; set; }
        public virtual DbSet<tmpEmployeeWorkingDetailCheck2011> tmpEmployeeWorkingDetailCheck2011 { get; set; }
        public virtual DbSet<tmpEmployeeWorkingDetails> tmpEmployeeWorkingDetails { get; set; }
        public virtual DbSet<tmpEmployeeWorkingPercentage> tmpEmployeeWorkingPercentage { get; set; }
        public virtual DbSet<tmpEmployeeWorkings> tmpEmployeeWorkings { get; set; }
        public virtual DbSet<tmpFonterraBigC> tmpFonterraBigC { get; set; }
        public virtual DbSet<tmpFreeLocations> tmpFreeLocations { get; set; }
        public virtual DbSet<tmpLocationCodes> tmpLocationCodes { get; set; }
        public virtual DbSet<tmpLocations> tmpLocations { get; set; }
        public virtual DbSet<tmpLocForStockTake> tmpLocForStockTake { get; set; }
        public virtual DbSet<tmpMETRORandomWeight> tmpMETRORandomWeight { get; set; }
        public virtual DbSet<tmpMovementHistory> tmpMovementHistory { get; set; }
        public virtual DbSet<tmpNoteDispatchingOder> tmpNoteDispatchingOder { get; set; }
        public virtual DbSet<tmpNoteDispatchingOderDetail> tmpNoteDispatchingOderDetail { get; set; }
        public virtual DbSet<tmpOrders> tmpOrders { get; set; }
        public virtual DbSet<tmpPayRollAnnual> tmpPayRollAnnual { get; set; }
        public virtual DbSet<tmpPayrollMonthlyDetails> tmpPayrollMonthlyDetails { get; set; }
        public virtual DbSet<tmpPerformanceCheck> tmpPerformanceCheck { get; set; }
        public virtual DbSet<tmpProductRemains> tmpProductRemains { get; set; }
        public virtual DbSet<tmpProducts> tmpProducts { get; set; }
        public virtual DbSet<tmpProductsSQL> tmpProductsSQL { get; set; }
        public virtual DbSet<tmpPropertyI> tmpPropertyI { get; set; }
        public virtual DbSet<tmpPropertyID> tmpPropertyID { get; set; }
        public virtual DbSet<tmpPropertyMonthly> tmpPropertyMonthly { get; set; }
        public virtual DbSet<tmpPropertyU> tmpPropertyU { get; set; }
        public virtual DbSet<tmpReceivingOrderDetails> tmpReceivingOrderDetails { get; set; }
        public virtual DbSet<tmpReceivingOrders> tmpReceivingOrders { get; set; }
        public virtual DbSet<tmpReleaseSummary> tmpReleaseSummary { get; set; }
        public virtual DbSet<tmpReportingServerMultiAttach> tmpReportingServerMultiAttach { get; set; }
        public virtual DbSet<tmpResults> tmpResults { get; set; }
        public virtual DbSet<tmpRoomOccupancies> tmpRoomOccupancies { get; set; }
        public virtual DbSet<tmpRooms> tmpRooms { get; set; }
        public virtual DbSet<tmpScheduled_JobWeeks> tmpScheduled_JobWeeks { get; set; }
        public virtual DbSet<tmpStockCorrectionProducts> tmpStockCorrectionProducts { get; set; }
        public virtual DbSet<tmpStockOnHandByDate> tmpStockOnHandByDate { get; set; }
        public virtual DbSet<tmpStockOnHandTop25Customers> tmpStockOnHandTop25Customers { get; set; }
        public virtual DbSet<TrainingDefinitions> TrainingDefinitions { get; set; }
        public virtual DbSet<Trainings> Trainings { get; set; }
        public virtual DbSet<Transaction> Transaction { get; set; }
        public virtual DbSet<TripDetails> TripDetails { get; set; }
        public virtual DbSet<Trips> Trips { get; set; }
        public virtual DbSet<UserAccount> UserAccounts { get; set; }
        public virtual DbSet<UserApplicationDefinition> UserApplicationDefinitions { get; set; }
        public virtual DbSet<UserApplication> UserApplications { get; set; }
        public virtual DbSet<UserGroupDefinition> UserGroupDefinitions { get; set; }
        public virtual DbSet<UserGroups> UserGroups { get; set; }
        public virtual DbSet<UserManagers> UserManagers { get; set; }
        public virtual DbSet<UserSupervisors> UserSupervisors { get; set; }
        public virtual DbSet<VietnameseStringError> VietnameseStringError { get; set; }
        public virtual DbSet<Warehouses> Warehouses { get; set; }
        public virtual DbSet<Warnings> Warnings { get; set; }
        public virtual DbSet<WavePickingDetails> WavePickingDetails { get; set; }
        public virtual DbSet<WavePickings> WavePickings { get; set; }
        public virtual DbSet<WebUsers> WebUsers { get; set; }
        public virtual DbSet<WMS_Applications> WMS_Applications { get; set; }
        public virtual DbSet<WMS_Departments> WMS_Departments { get; set; }
        public virtual DbSet<WMS_Roles> WMS_Roles { get; set; }
        public virtual DbSet<WMS_UserApplicationRoles> WMS_UserApplicationRoles { get; set; }
        public virtual DbSet<WMS_UserApplications> WMS_UserApplications { get; set; }
        public virtual DbSet<WMS_Users> WMS_Users { get; set; }
        public virtual DbSet<WMSVersions> WMSVersions { get; set; }
        public virtual DbSet<CRM_Opportunities> CRM_Opportunities { get; set; }
        public virtual DbSet<ReportDates> ReportDates { get; set; }
        public virtual DbSet<SafetyContacts> SafetyContacts { get; set; }
        public virtual DbSet<tmpAccounting_BillingContractNull> tmpAccounting_BillingContractNull { get; set; }
        public virtual DbSet<tmpAccounting_Revenues> tmpAccounting_Revenues { get; set; }
        public virtual DbSet<tmpCustomerPallets> tmpCustomerPallets { get; set; }
        public virtual DbSet<tmpCustomerSalesOrderUnitStandards> tmpCustomerSalesOrderUnitStandards { get; set; }
        public virtual DbSet<tmpChart> tmpChart { get; set; }
        public virtual DbSet<tmpEDIDispatchingProducts> tmpEDIDispatchingProducts { get; set; }
        public virtual DbSet<tmpElectrictyCost> tmpElectrictyCost { get; set; }
        public virtual DbSet<tmpEmployeeWorkingInvalid> tmpEmployeeWorkingInvalid { get; set; }
        public virtual DbSet<tmpLabels> tmpLabels { get; set; }
        public virtual DbSet<tmpMETRORandomWeight2> tmpMETRORandomWeight2 { get; set; }
        public virtual DbSet<tmpPayrollAnnualLeaveAll> tmpPayrollAnnualLeaveAll { get; set; }
        public virtual DbSet<tmpReceivingAdvices> tmpReceivingAdvices { get; set; }
        public virtual DbSet<tmpRepeatRows> tmpRepeatRows { get; set; }
        public virtual DbSet<tmpStockOnHandDailyLocationMoreThan1Customer> tmpStockOnHandDailyLocationMoreThan1Customer { get; set; }
        public virtual DbSet<tmpStockOnHandWeekly> tmpStockOnHandWeekly { get; set; }
        public virtual DbSet<tmpTaskBackUp> tmpTaskBackUp { get; set; }
        public virtual DbSet<tmpTop40Customers> tmpTop40Customers { get; set; }
        public virtual DbSet<BillingDetailBreakDown> BillingDetailBreakDown { get; set; }
        public virtual DbSet<OperatingCostStockOnHandAvgByRoom> OperatingCostStockOnHandAvgByRoom { get; set; }
        public virtual DbSet<OperatingCostVehicleInOutRunningTime> OperatingCostVehicleInOutRunningTime { get; set; }
        public virtual DbSet<OperationCostBlastFreezing> OperationCostBlastFreezing { get; set; }
        public virtual DbSet<OperationCostNominalRates> OperationCostNominalRates { get; set; }
        public virtual DbSet<Properties> Properties { get; set; }
        public virtual DbSet<SOLOMON_ContractDetails> SOLOMON_ContractDetails { get; set; }
        public virtual DbSet<SOLOMON_ServicesDefinition> SOLOMON_ServicesDefinition { get; set; }
        public virtual DbSet<StockOnHandDaily> StockOnHandDaily { get; set; }
        public virtual DbSet<StockOnHandDailyDetailPallets> StockOnHandDailyDetailPallets { get; set; }
        public virtual DbSet<StockOnHandDailyDetails> StockOnHandDailyDetails { get; set; }
        public virtual DbSet<StockOnHandDailyDetailsByRoom> StockOnHandDailyDetailsByRoom { get; set; }
        public virtual DbSet<StockOnHandDailyInOut> StockOnHandDailyInOut { get; set; }
        public virtual DbSet<StockOnHandWeekly> StockOnHandWeekly { get; set; }
        public virtual DbSet<StockOnHandWeeklyDetails> StockOnHandWeeklyDetails { get; set; }
        public virtual DbSet<ViewAllCustomersInout> ViewAllCustomersInout { get; set; }
        public virtual DbSet<ViewAnnualLeaveByEmployee> ViewAnnualLeaveByEmployee { get; set; }
        public virtual DbSet<ViewBarcodeScanDOnotDone> ViewBarcodeScanDOnotDone { get; set; }
        public virtual DbSet<ViewConfirmationAll> ViewConfirmationAll { get; set; }
        public virtual DbSet<ViewConfirmationAllUnion> ViewConfirmationAllUnion { get; set; }
        public virtual DbSet<ViewContractsAllCustomers> ViewContractsAllCustomers { get; set; }
        public virtual DbSet<ViewCustomerSalesInvoices> ViewCustomerSalesInvoices { get; set; }
        public virtual DbSet<ViewCustomerSalesInvoices3PL> ViewCustomerSalesInvoices3PL { get; set; }
        public virtual DbSet<ViewCustomerSalesInvoices3PL_Details> ViewCustomerSalesInvoices3PL_Details { get; set; }
        public virtual DbSet<ViewDHLMcDonaldDispatchingPlan> ViewDHLMcDonaldDispatchingPlan { get; set; }
        public virtual DbSet<ViewDispatchingProduct> ViewDispatchingProduct { get; set; }
        public virtual DbSet<ViewDispatchingProductsDelete> ViewDispatchingProductsDelete { get; set; }
        public virtual DbSet<ViewDispatchingQtyAverage30days> ViewDispatchingQtyAverage30days { get; set; }
        public virtual DbSet<ViewEmployeeEventLast30days> ViewEmployeeEventLast30days { get; set; }
        public virtual DbSet<ViewEmployeeInOutRemain> ViewEmployeeInOutRemain { get; set; }
        public virtual DbSet<ViewEmployees> ViewEmployees { get; set; }
        public virtual DbSet<ViewEmployeeTrainingManagement> ViewEmployeeTrainingManagement { get; set; }
        public virtual DbSet<ViewEmployeeWorkingLast45days> ViewEmployeeWorkingLast45days { get; set; }
        public virtual DbSet<ViewEmployeeWorkingSupervisor> ViewEmployeeWorkingSupervisor { get; set; }
        public virtual DbSet<ViewEmployeeWorkingTotal> ViewEmployeeWorkingTotal { get; set; }
        public virtual DbSet<ViewEmployeeWorkingTotalPercentage> ViewEmployeeWorkingTotalPercentage { get; set; }
        public virtual DbSet<ViewFonterraBigCDispatchingDetailsUsedByDate> ViewFonterraBigCDispatchingDetailsUsedByDate { get; set; }
        public virtual DbSet<ViewFonterraCustomerClients> ViewFonterraCustomerClients { get; set; }
        public virtual DbSet<ViewFonterraDispatchingOrdersToday> ViewFonterraDispatchingOrdersToday { get; set; }
        public virtual DbSet<ViewFonterraQA> ViewFonterraQA { get; set; }
        public virtual DbSet<ViewFonterraSales60days> ViewFonterraSales60days { get; set; }
        public virtual DbSet<ViewFonterraSalesContractDetails> ViewFonterraSalesContractDetails { get; set; }
        public virtual DbSet<ViewFonterraStockOnHandOnHold> ViewFonterraStockOnHandOnHold { get; set; }
        public virtual DbSet<ViewFreeLocations> ViewFreeLocations { get; set; }
        public virtual DbSet<ViewFreeLocationsFloor> ViewFreeLocationsFloor { get; set; }
        public virtual DbSet<ViewfrmFreeLocations> ViewfrmFreeLocations { get; set; }
        public virtual DbSet<ViewGate_WorkerLaborSafetyTraining> ViewGate_WorkerLaborSafetyTraining { get; set; }
        public virtual DbSet<ViewHaiNamProductList> ViewHaiNamProductList { get; set; }
        public virtual DbSet<ViewHandlingOvertimeCheck> ViewHandlingOvertimeCheck { get; set; }
        public virtual DbSet<ViewHomeLocationByRoom> ViewHomeLocationByRoom { get; set; }
        public virtual DbSet<ViewInternalAudit> ViewInternalAudit { get; set; }
        public virtual DbSet<ViewLocationBarcode> ViewLocationBarcode { get; set; }
        public virtual DbSet<ViewMETPalletConsolidationOtherCustomers> ViewMETPalletConsolidationOtherCustomers { get; set; }
        public virtual DbSet<ViewMETROCalculateWeightAnnimalControl> ViewMETROCalculateWeightAnnimalControl { get; set; }
        public virtual DbSet<ViewMETRODispatchingCartons> ViewMETRODispatchingCartons { get; set; }
        public virtual DbSet<ViewMETROLabelDispatchingOrders> ViewMETROLabelDispatchingOrders { get; set; }
        public virtual DbSet<ViewMETROOrderConfirmTime> ViewMETROOrderConfirmTime { get; set; }
        public virtual DbSet<ViewMETROPalletConsolidation> ViewMETROPalletConsolidation { get; set; }
        public virtual DbSet<ViewMETROPalletConsolidationOtherCustomers> ViewMETROPalletConsolidationOtherCustomers { get; set; }
        public virtual DbSet<ViewMETROPalletOnHandDaily> ViewMETROPalletOnHandDaily { get; set; }
        public virtual DbSet<ViewMETROPalletOnHandDailyBilling> ViewMETROPalletOnHandDailyBilling { get; set; }
        public virtual DbSet<ViewMetroStockByLocationOnHand> ViewMetroStockByLocationOnHand { get; set; }
        public virtual DbSet<ViewMETROStockOnHandForQA> ViewMETROStockOnHandForQA { get; set; }
        public virtual DbSet<ViewMinhPhuCheckingOverTime> ViewMinhPhuCheckingOverTime { get; set; }
        public virtual DbSet<ViewOutsourcedJob60days> ViewOutsourcedJob60days { get; set; }
        public virtual DbSet<ViewPallet_DoulicateTest> ViewPallet_DoulicateTest { get; set; }
        public virtual DbSet<ViewPalletAllocationFree> ViewPalletAllocationFree { get; set; }
        public virtual DbSet<ViewPalletRemainWeightInners> ViewPalletRemainWeightInners { get; set; }
        public virtual DbSet<ViewPayrollMonthlyDetails> ViewPayrollMonthlyDetails { get; set; }
        public virtual DbSet<ViewPayrollMonthlyReview> ViewPayrollMonthlyReview { get; set; }
        public virtual DbSet<ViewPizzaHutDispatchingLabel> ViewPizzaHutDispatchingLabel { get; set; }
        public virtual DbSet<ViewProductMain> ViewProductMain { get; set; }
        public virtual DbSet<ViewProductMainGroup> ViewProductMainGroup { get; set; }
        public virtual DbSet<ViewPropertyMovements> ViewPropertyMovements { get; set; }
        public virtual DbSet<ViewQHSELatestComment> ViewQHSELatestComment { get; set; }
        public virtual DbSet<ViewqryComboCustomerID> ViewqryComboCustomerID { get; set; }
        public virtual DbSet<ViewRandomWeightPallets> ViewRandomWeightPallets { get; set; }
        public virtual DbSet<ViewSafetyStockReason> ViewSafetyStockReason { get; set; }
        public virtual DbSet<ViewStockOnHandByLotAllCustomers> ViewStockOnHandByLotAllCustomers { get; set; }
        public virtual DbSet<ViewStockOnHandByWarehouse> ViewStockOnHandByWarehouse { get; set; }
        public virtual DbSet<ViewStockOnHandInPalletUnitWeight> ViewStockOnHandInPalletUnitWeight { get; set; }
        public virtual DbSet<ViewTotalByLocation> ViewTotalByLocation { get; set; }
        public virtual DbSet<ViewTotalDispatchingLocations> ViewTotalDispatchingLocations { get; set; }
        public virtual DbSet<ViewTotalDispatchingOrderDetails> ViewTotalDispatchingOrderDetails { get; set; }
        public virtual DbSet<ViewTotalDispatchingOrders> ViewTotalDispatchingOrders { get; set; }
        public virtual DbSet<ViewTotalDispatchingProducts> ViewTotalDispatchingProducts { get; set; }
        public virtual DbSet<ViewTotalPallets> ViewTotalPallets { get; set; }
        public virtual DbSet<ViewTotalReceivingOrderDetails> ViewTotalReceivingOrderDetails { get; set; }
        public virtual DbSet<ViewTotalReceivingOrders> ViewTotalReceivingOrders { get; set; }
        public virtual DbSet<ViewTotalStockRemain> ViewTotalStockRemain { get; set; }
        public virtual DbSet<ViewTotalUnit_Out> ViewTotalUnit_Out { get; set; }
        public virtual DbSet<ViewTuPhuongNumberOfReceivedLocations> ViewTuPhuongNumberOfReceivedLocations { get; set; }
        public virtual DbSet<ViewTuPhuongNumboerOfLocations> ViewTuPhuongNumboerOfLocations { get; set; }
        public virtual DbSet<ViewTuPhuongReceivingPallets> ViewTuPhuongReceivingPallets { get; set; }
        public virtual DbSet<ViewTripDispatchingPlan> ViewTripDispatchingPlan { get; set; }
        public virtual DbSet<ViewUnileverDailyLabellingPlan> ViewUnileverDailyLabellingPlan { get; set; }
        public virtual DbSet<ViewUnileverOrderstoBigC> ViewUnileverOrderstoBigC { get; set; }
        public virtual DbSet<ViewVinmartDispatchingOrdersToday> ViewVinmartDispatchingOrdersToday { get; set; }
        public virtual DbSet<ViewVinmartInout> ViewVinmartInout { get; set; }
        public virtual DbSet<ViewWallPickingList> ViewWallPickingList { get; set; }
        public virtual DbSet<UserRoleDefinition> UserRoleDefinitions { get; set; }
        public virtual DbSet<UserFunctionDefinition> UserFunctionDefinitions { get; set; }
        public virtual DbSet<UserActionDefinition> UserActionDefinitions { get; set; }

        [DbFunction("SwireDBEntities", "Admin_FixMissingStockOnHandDaily_2")]

        public virtual int Accounting_MissingContracts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Accounting_MissingContracts");
        }


        public virtual int Accounting_RevenueCreation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Accounting_RevenueCreation");
        }

        public virtual int Admin_Crosstab(string dBFetch, string dBWhere, string dBPivot, string dBField, string pCField, string pCBuild, string pCAdmin, Nullable<int> dBAdmin, string dBTable, string dBWrite, Nullable<bool> dBUltra)
        {
            var dBFetchParameter = dBFetch != null ?
                new ObjectParameter("DBFetch", dBFetch) :
                new ObjectParameter("DBFetch", typeof(string));

            var dBWhereParameter = dBWhere != null ?
                new ObjectParameter("DBWhere", dBWhere) :
                new ObjectParameter("DBWhere", typeof(string));

            var dBPivotParameter = dBPivot != null ?
                new ObjectParameter("DBPivot", dBPivot) :
                new ObjectParameter("DBPivot", typeof(string));

            var dBFieldParameter = dBField != null ?
                new ObjectParameter("DBField", dBField) :
                new ObjectParameter("DBField", typeof(string));

            var pCFieldParameter = pCField != null ?
                new ObjectParameter("PCField", pCField) :
                new ObjectParameter("PCField", typeof(string));

            var pCBuildParameter = pCBuild != null ?
                new ObjectParameter("PCBuild", pCBuild) :
                new ObjectParameter("PCBuild", typeof(string));

            var pCAdminParameter = pCAdmin != null ?
                new ObjectParameter("PCAdmin", pCAdmin) :
                new ObjectParameter("PCAdmin", typeof(string));

            var dBAdminParameter = dBAdmin.HasValue ?
                new ObjectParameter("DBAdmin", dBAdmin) :
                new ObjectParameter("DBAdmin", typeof(int));

            var dBTableParameter = dBTable != null ?
                new ObjectParameter("DBTable", dBTable) :
                new ObjectParameter("DBTable", typeof(string));

            var dBWriteParameter = dBWrite != null ?
                new ObjectParameter("DBWrite", dBWrite) :
                new ObjectParameter("DBWrite", typeof(string));

            var dBUltraParameter = dBUltra.HasValue ?
                new ObjectParameter("DBUltra", dBUltra) :
                new ObjectParameter("DBUltra", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Crosstab", dBFetchParameter, dBWhereParameter, dBPivotParameter, dBFieldParameter, pCFieldParameter, pCBuildParameter, pCAdminParameter, dBAdminParameter, dBTableParameter, dBWriteParameter, dBUltraParameter);
        }

        public virtual int Admin_FindDuplicate_DeleteRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_FindDuplicate_DeleteRecords");
        }

        public virtual ObjectResult<Nullable<int>> Admin_FindDuplicate_DispatchingLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Admin_FindDuplicate_DispatchingLocations");
        }

        public virtual ObjectResult<Nullable<int>> Admin_FindDuplicate_DispatchingOrderDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Admin_FindDuplicate_DispatchingOrderDetails");
        }

        public virtual ObjectResult<Nullable<int>> Admin_FindDuplicate_TotalPallets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Admin_FindDuplicate_TotalPallets");
        }

        public virtual int Admin_FindStringInSystemObjects(string searchString, Nullable<int> backSpan, Nullable<int> forwardSpan)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));

            var backSpanParameter = backSpan.HasValue ?
                new ObjectParameter("BackSpan", backSpan) :
                new ObjectParameter("BackSpan", typeof(int));

            var forwardSpanParameter = forwardSpan.HasValue ?
                new ObjectParameter("ForwardSpan", forwardSpan) :
                new ObjectParameter("ForwardSpan", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_FindStringInSystemObjects", searchStringParameter, backSpanParameter, forwardSpanParameter);
        }

        public virtual int Admin_History_FindOldRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_History_FindOldRecords");
        }

        public virtual int Admin_History_MoveOldRecords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_History_MoveOldRecords");
        }

        public virtual int Admin_ViewProcessDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_ViewProcessDetails");
        }

        public virtual int Backup_STSafetyClothesMovementReport(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Backup_STSafetyClothesMovementReport", fromdateParameter, todateParameter);
        }

        public virtual int NEW_NOTYETUSE_ReceivingOrderDetailHoldAll_Update(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NEW_NOTYETUSE_ReceivingOrderDetailHoldAll_Update", receivingOrderIDParameter);
        }

        public virtual int NEW_NOTYETUSE_STDailyScheduledJob()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NEW_NOTYETUSE_STDailyScheduledJob");
        }

        public virtual int NEW_NOTYETUSE_STDispatchingOrderWeightInnerUpdate(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NEW_NOTYETUSE_STDispatchingOrderWeightInnerUpdate", dispatchingOrderIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> NEW_NOTYETUSE_STPayRollDetailDifferenceCheck(Nullable<int> varPayRollMonthID)
        {
            var varPayRollMonthIDParameter = varPayRollMonthID.HasValue ?
                new ObjectParameter("varPayRollMonthID", varPayRollMonthID) :
                new ObjectParameter("varPayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NEW_NOTYETUSE_STPayRollDetailDifferenceCheck", varPayRollMonthIDParameter);
        }

        public virtual int NEW_NOTYETUSE_STReceivingOrderWeightInnerUpdate(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NEW_NOTYETUSE_STReceivingOrderWeightInnerUpdate", receivingOrderIDParameter);
        }

        public virtual int OperatingCostDetailByCustomer_UpdateDriverRate(Nullable<int> operatingCostDetailByCustomerID, Nullable<decimal> newDriverRate)
        {
            var operatingCostDetailByCustomerIDParameter = operatingCostDetailByCustomerID.HasValue ?
                new ObjectParameter("OperatingCostDetailByCustomerID", operatingCostDetailByCustomerID) :
                new ObjectParameter("OperatingCostDetailByCustomerID", typeof(int));

            var newDriverRateParameter = newDriverRate.HasValue ?
                new ObjectParameter("NewDriverRate", newDriverRate) :
                new ObjectParameter("NewDriverRate", typeof(decimal));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostDetailByCustomer_UpdateDriverRate", operatingCostDetailByCustomerIDParameter, newDriverRateParameter);
        }

        public virtual ObjectResult<Nullable<int>> OperatingCostElectricityViewAllCustomer(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("OperatingCostElectricityViewAllCustomer", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostExpenses_CreateData(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostExpenses_CreateData", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostExpenses_CreateData_2(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostExpenses_CreateData_2", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostExpenses_UpdateData(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostExpenses_UpdateData", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostExpenses_UpdateDataInsurance(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostExpenses_UpdateDataInsurance", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostLabour_CreateUpdateDetails(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostLabour_CreateUpdateDetails", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostLabour_UpdateEmployeeDriverRate(Nullable<int> operatingCostLabourDetailID, Nullable<decimal> newDriverRate)
        {
            var operatingCostLabourDetailIDParameter = operatingCostLabourDetailID.HasValue ?
                new ObjectParameter("OperatingCostLabourDetailID", operatingCostLabourDetailID) :
                new ObjectParameter("OperatingCostLabourDetailID", typeof(int));

            var newDriverRateParameter = newDriverRate.HasValue ?
                new ObjectParameter("NewDriverRate", newDriverRate) :
                new ObjectParameter("NewDriverRate", typeof(decimal));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostLabour_UpdateEmployeeDriverRate", operatingCostLabourDetailIDParameter, newDriverRateParameter);
        }

        public virtual int OperatingCostLabourViewAllCustomer(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostLabourViewAllCustomer", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostMonthly_CreateParameters(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostMonthly_CreateParameters", operatingCostMonthlyIDParameter);
        }

        public virtual int OperatingCostMonthly_UpdateParametersIndex(Nullable<int> operatingCostMonthlyID)
        {
            var operatingCostMonthlyIDParameter = operatingCostMonthlyID.HasValue ?
                new ObjectParameter("OperatingCostMonthlyID", operatingCostMonthlyID) :
                new ObjectParameter("OperatingCostMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OperatingCostMonthly_UpdateParametersIndex", operatingCostMonthlyIDParameter);
        }

        public virtual int ST_tmpNoteDispatchingOder_Edit(Nullable<int> flag, Nullable<int> dispatchingOderID, string note, string noteBy)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            var dispatchingOderIDParameter = dispatchingOderID.HasValue ?
                new ObjectParameter("DispatchingOderID", dispatchingOderID) :
                new ObjectParameter("DispatchingOderID", typeof(int));

            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));

            var noteByParameter = noteBy != null ?
                new ObjectParameter("NoteBy", noteBy) :
                new ObjectParameter("NoteBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_tmpNoteDispatchingOder_Edit", flagParameter, dispatchingOderIDParameter, noteParameter, noteByParameter);
        }

        public virtual int ST_tmpNoteDispatchingOder_SelectByDO(Nullable<int> dispatchingOderID)
        {
            var dispatchingOderIDParameter = dispatchingOderID.HasValue ?
                new ObjectParameter("DispatchingOderID", dispatchingOderID) :
                new ObjectParameter("DispatchingOderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_tmpNoteDispatchingOder_SelectByDO", dispatchingOderIDParameter);
        }

        public virtual int ST_tmpNoteDispatchingOderDetail_Edit(Nullable<int> flag, Nullable<int> dispatchingOderID, string linkImg, string type, string uploadBy)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            var dispatchingOderIDParameter = dispatchingOderID.HasValue ?
                new ObjectParameter("DispatchingOderID", dispatchingOderID) :
                new ObjectParameter("DispatchingOderID", typeof(int));

            var linkImgParameter = linkImg != null ?
                new ObjectParameter("LinkImg", linkImg) :
                new ObjectParameter("LinkImg", typeof(string));

            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));

            var uploadByParameter = uploadBy != null ?
                new ObjectParameter("UploadBy", uploadBy) :
                new ObjectParameter("UploadBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_tmpNoteDispatchingOderDetail_Edit", flagParameter, dispatchingOderIDParameter, linkImgParameter, typeParameter, uploadByParameter);
        }

        public virtual ObjectResult<Nullable<int>> STAddtotmpProducts(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("STAddtotmpProducts", varCustomerIDParameter);
        }

        public virtual int STAisleSetup(string room, Nullable<short> aisle, Nullable<short> fromBay, Nullable<short> toBay, Nullable<short> fromHigh, Nullable<short> tohigh, Nullable<short> fromDeep, Nullable<short> todeep)
        {
            var roomParameter = room != null ?
                new ObjectParameter("Room", room) :
                new ObjectParameter("Room", typeof(string));

            var aisleParameter = aisle.HasValue ?
                new ObjectParameter("Aisle", aisle) :
                new ObjectParameter("Aisle", typeof(short));

            var fromBayParameter = fromBay.HasValue ?
                new ObjectParameter("FromBay", fromBay) :
                new ObjectParameter("FromBay", typeof(short));

            var toBayParameter = toBay.HasValue ?
                new ObjectParameter("toBay", toBay) :
                new ObjectParameter("toBay", typeof(short));

            var fromHighParameter = fromHigh.HasValue ?
                new ObjectParameter("FromHigh", fromHigh) :
                new ObjectParameter("FromHigh", typeof(short));

            var tohighParameter = tohigh.HasValue ?
                new ObjectParameter("Tohigh", tohigh) :
                new ObjectParameter("Tohigh", typeof(short));

            var fromDeepParameter = fromDeep.HasValue ?
                new ObjectParameter("FromDeep", fromDeep) :
                new ObjectParameter("FromDeep", typeof(short));

            var todeepParameter = todeep.HasValue ?
                new ObjectParameter("Todeep", todeep) :
                new ObjectParameter("Todeep", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAisleSetup", roomParameter, aisleParameter, fromBayParameter, toBayParameter, fromHighParameter, tohighParameter, fromDeepParameter, todeepParameter);
        }

        public virtual ObjectResult<STAndroid_StockMovement_Result> STAndroid_StockMovement(string locationBarcode, string userName)
        {
            var locationBarcodeParameter = locationBarcode != null ?
                new ObjectParameter("LocationBarcode", locationBarcode) :
                new ObjectParameter("LocationBarcode", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAndroid_StockMovement_Result>("STAndroid_StockMovement", locationBarcodeParameter, userNameParameter);
        }

        public virtual ObjectResult<STAndroid_StockOnHand_Result> STAndroid_StockOnHand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAndroid_StockOnHand_Result>("STAndroid_StockOnHand");
        }

        public virtual ObjectResult<STAndroid_StockOnHandByCustomer_Result> STAndroid_StockOnHandByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAndroid_StockOnHandByCustomer_Result>("STAndroid_StockOnHandByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STAndroid_StockOnHandDetails_Result> STAndroid_StockOnHandDetails(Nullable<int> customerID, Nullable<int> productID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAndroid_StockOnHandDetails_Result>("STAndroid_StockOnHandDetails", customerIDParameter, productIDParameter);
        }

        public virtual ObjectResult<STAndroid_UserManagement_Result> STAndroid_UserManagement(Nullable<short> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAndroid_UserManagement_Result>("STAndroid_UserManagement", flagParameter);
        }

        public virtual ObjectResult<STAndroid_WHCVersion_Result> STAndroid_WHCVersion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAndroid_WHCVersion_Result>("STAndroid_WHCVersion");
        }

        public virtual ObjectResult<string> STAndroid_WorkingSchedules(string userName, Nullable<System.DateTime> reportDate, Nullable<bool> flag)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("STAndroid_WorkingSchedules", userNameParameter, reportDateParameter, flagParameter);
        }

        public virtual int STAssignmentReminder(string loginName, ObjectParameter qtyOfAssignment, ObjectParameter qtyOfTransaction, ObjectParameter qtyOfProblem, ObjectParameter qtyOfProblem_Manager, ObjectParameter qtyOfTrainning, ObjectParameter qtyOfCalibrationExpire, ObjectParameter qtyOfCalibrationExpireEquipment, ObjectParameter qtyOfContract)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAssignmentReminder", loginNameParameter, qtyOfAssignment, qtyOfTransaction, qtyOfProblem, qtyOfProblem_Manager, qtyOfTrainning, qtyOfCalibrationExpire, qtyOfCalibrationExpireEquipment, qtyOfContract);
        }

        public virtual int STAssignmentScheduleDelete(Nullable<int> assignmentID, Nullable<byte> frequency, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var assignmentIDParameter = assignmentID.HasValue ?
                new ObjectParameter("AssignmentID", assignmentID) :
                new ObjectParameter("AssignmentID", typeof(int));

            var frequencyParameter = frequency.HasValue ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(byte));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAssignmentScheduleDelete", assignmentIDParameter, frequencyParameter, fromDateParameter, toDateParameter);
        }

        public virtual int STAssignmentScheduleGenerate(Nullable<int> assignmentID, Nullable<byte> frequency, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string currentUser)
        {
            var assignmentIDParameter = assignmentID.HasValue ?
                new ObjectParameter("AssignmentID", assignmentID) :
                new ObjectParameter("AssignmentID", typeof(int));

            var frequencyParameter = frequency.HasValue ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(byte));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAssignmentScheduleGenerate", assignmentIDParameter, frequencyParameter, fromDateParameter, toDateParameter, currentUserParameter);
        }

        public virtual int STAttachmentConfidentialUpdate(Nullable<int> attachmentID, Nullable<int> confidentialLevel, Nullable<byte> printStatus)
        {
            var attachmentIDParameter = attachmentID.HasValue ?
                new ObjectParameter("AttachmentID", attachmentID) :
                new ObjectParameter("AttachmentID", typeof(int));

            var confidentialLevelParameter = confidentialLevel.HasValue ?
                new ObjectParameter("ConfidentialLevel", confidentialLevel) :
                new ObjectParameter("ConfidentialLevel", typeof(int));

            var printStatusParameter = printStatus.HasValue ?
                new ObjectParameter("PrintStatus", printStatus) :
                new ObjectParameter("PrintStatus", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAttachmentConfidentialUpdate", attachmentIDParameter, confidentialLevelParameter, printStatusParameter);
        }

        public virtual int STAttachmentUpdate(Nullable<int> attachmentID, string orderNumber, string attachmentDescription, string attachmentFile, Nullable<System.DateTime> attachmentDate, string attachmentUser, Nullable<short> flag, Nullable<int> attachmentFileSize, Nullable<int> confidentialLevel, string originalFileName)
        {
            var attachmentIDParameter = attachmentID.HasValue ?
                new ObjectParameter("AttachmentID", attachmentID) :
                new ObjectParameter("AttachmentID", typeof(int));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var attachmentDescriptionParameter = attachmentDescription != null ?
                new ObjectParameter("AttachmentDescription", attachmentDescription) :
                new ObjectParameter("AttachmentDescription", typeof(string));

            var attachmentFileParameter = attachmentFile != null ?
                new ObjectParameter("AttachmentFile", attachmentFile) :
                new ObjectParameter("AttachmentFile", typeof(string));

            var attachmentDateParameter = attachmentDate.HasValue ?
                new ObjectParameter("AttachmentDate", attachmentDate) :
                new ObjectParameter("AttachmentDate", typeof(System.DateTime));

            var attachmentUserParameter = attachmentUser != null ?
                new ObjectParameter("AttachmentUser", attachmentUser) :
                new ObjectParameter("AttachmentUser", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(short));

            var attachmentFileSizeParameter = attachmentFileSize.HasValue ?
                new ObjectParameter("AttachmentFileSize", attachmentFileSize) :
                new ObjectParameter("AttachmentFileSize", typeof(int));

            var confidentialLevelParameter = confidentialLevel.HasValue ?
                new ObjectParameter("ConfidentialLevel", confidentialLevel) :
                new ObjectParameter("ConfidentialLevel", typeof(int));

            var originalFileNameParameter = originalFileName != null ?
                new ObjectParameter("OriginalFileName", originalFileName) :
                new ObjectParameter("OriginalFileName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAttachmentUpdate", attachmentIDParameter, orderNumberParameter, attachmentDescriptionParameter, attachmentFileParameter, attachmentDateParameter, attachmentUserParameter, flagParameter, attachmentFileSizeParameter, confidentialLevelParameter, originalFileNameParameter);
        }

        public virtual ObjectResult<STAttachmentView_Result> STAttachmentView(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STAttachmentView_Result>("STAttachmentView", orderNumberParameter);
        }

        public virtual int STBackupSwireDB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBackupSwireDB");
        }

        public virtual int STBarcodeScan(string barcodeDataScanned, string orderNumber, string result, string scannedBy)
        {
            var barcodeDataScannedParameter = barcodeDataScanned != null ?
                new ObjectParameter("BarcodeDataScanned", barcodeDataScanned) :
                new ObjectParameter("BarcodeDataScanned", typeof(string));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));

            var scannedByParameter = scannedBy != null ?
                new ObjectParameter("ScannedBy", scannedBy) :
                new ObjectParameter("ScannedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBarcodeScan", barcodeDataScannedParameter, orderNumberParameter, resultParameter, scannedByParameter);
        }

        public virtual int STBarcodeScan_CheckingPalletID(Nullable<int> palletID, string orderNumber, string orderType, ObjectParameter orderNumberQty)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBarcodeScan_CheckingPalletID", palletIDParameter, orderNumberParameter, orderTypeParameter, orderNumberQty);
        }

        public virtual ObjectResult<STBarcodeScan_Label1DO_Test_Result> STBarcodeScan_Label1DO_Test(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBarcodeScan_Label1DO_Test_Result>("STBarcodeScan_Label1DO_Test", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STBarcodeScan_Order_Results_Result> STBarcodeScan_Order_Results(Nullable<int> dispatchingOrderID, string orderType)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBarcodeScan_Order_Results_Result>("STBarcodeScan_Order_Results", dispatchingOrderIDParameter, orderTypeParameter);
        }

        public virtual int STBarcodeScan_OrderDetailInsert(Nullable<int> palletID, string orderNumber, string userID, ObjectParameter barcodeScanDetailID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBarcodeScan_OrderDetailInsert", palletIDParameter, orderNumberParameter, userIDParameter, barcodeScanDetailID);
        }

        public virtual ObjectResult<STBarcodeScan_OrderDetails_Result> STBarcodeScan_OrderDetails(string orderNumber, string orderType)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBarcodeScan_OrderDetails_Result>("STBarcodeScan_OrderDetails", orderNumberParameter, orderTypeParameter);
        }

        public virtual int STBarcodeScan_OrderDetailUpdate(Nullable<int> barcodeScanDetailID, string newRemark)
        {
            var barcodeScanDetailIDParameter = barcodeScanDetailID.HasValue ?
                new ObjectParameter("BarcodeScanDetailID", barcodeScanDetailID) :
                new ObjectParameter("BarcodeScanDetailID", typeof(int));

            var newRemarkParameter = newRemark != null ?
                new ObjectParameter("newRemark", newRemark) :
                new ObjectParameter("newRemark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBarcodeScan_OrderDetailUpdate", barcodeScanDetailIDParameter, newRemarkParameter);
        }

        public virtual ObjectResult<STBarcodeScan_Orders_Result> STBarcodeScan_Orders(string orderNumber, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string orderType)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBarcodeScan_Orders_Result>("STBarcodeScan_Orders", orderNumberParameter, fromDateParameter, toDateParameter, orderTypeParameter);
        }

        public virtual int STBillingByOvertimeDetailDelete(Nullable<int> otherServiceDetailID)
        {
            var otherServiceDetailIDParameter = otherServiceDetailID.HasValue ?
                new ObjectParameter("OtherServiceDetailID", otherServiceDetailID) :
                new ObjectParameter("OtherServiceDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingByOvertimeDetailDelete", otherServiceDetailIDParameter);
        }

        public virtual ObjectResult<STBillingByOvertimeDetailReport_Result> STBillingByOvertimeDetailReport(Nullable<int> otherServiceID)
        {
            var otherServiceIDParameter = otherServiceID.HasValue ?
                new ObjectParameter("OtherServiceID", otherServiceID) :
                new ObjectParameter("OtherServiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingByOvertimeDetailReport_Result>("STBillingByOvertimeDetailReport", otherServiceIDParameter);
        }

        public virtual int STBillingByOvertimeOtherServiceAdd(Nullable<int> customerID, Nullable<System.DateTime> serviceDate, Nullable<int> employeeID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingByOvertimeOtherServiceAdd", customerIDParameter, serviceDateParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STBillingByOvertimeReport_Result> STBillingByOvertimeReport(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingByOvertimeReport_Result>("STBillingByOvertimeReport", customerIDParameter, fromDateParameter, toDateParameter, flagParameter);
        }

        public virtual ObjectResult<STBillingChecking_Result> STBillingChecking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingChecking_Result>("STBillingChecking");
        }

        public virtual int STBillingConfirmationAdd(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<bool> hasAdjustment, string currentUser, Nullable<int> varBillingCustomerID, Nullable<int> varEmployeeID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var hasAdjustmentParameter = hasAdjustment.HasValue ?
                new ObjectParameter("HasAdjustment", hasAdjustment) :
                new ObjectParameter("HasAdjustment", typeof(bool));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var varBillingCustomerIDParameter = varBillingCustomerID.HasValue ?
                new ObjectParameter("varBillingCustomerID", varBillingCustomerID) :
                new ObjectParameter("varBillingCustomerID", typeof(int));

            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingConfirmationAdd", varFromDateParameter, varTodateParameter, varCustomerIDParameter, hasAdjustmentParameter, currentUserParameter, varBillingCustomerIDParameter, varEmployeeIDParameter);
        }

        public virtual int STBillingConfirmationChanges(Nullable<byte> flag, Nullable<int> billingID, Nullable<int> otherServiceDetailID, string oldServiceNumber, Nullable<int> newServiceID, Nullable<double> newServiceQuantity, string currentUser, Nullable<int> billingDetailID)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var billingIDParameter = billingID.HasValue ?
                new ObjectParameter("BillingID", billingID) :
                new ObjectParameter("BillingID", typeof(int));

            var otherServiceDetailIDParameter = otherServiceDetailID.HasValue ?
                new ObjectParameter("OtherServiceDetailID", otherServiceDetailID) :
                new ObjectParameter("OtherServiceDetailID", typeof(int));

            var oldServiceNumberParameter = oldServiceNumber != null ?
                new ObjectParameter("OldServiceNumber", oldServiceNumber) :
                new ObjectParameter("OldServiceNumber", typeof(string));

            var newServiceIDParameter = newServiceID.HasValue ?
                new ObjectParameter("NewServiceID", newServiceID) :
                new ObjectParameter("NewServiceID", typeof(int));

            var newServiceQuantityParameter = newServiceQuantity.HasValue ?
                new ObjectParameter("newServiceQuantity", newServiceQuantity) :
                new ObjectParameter("newServiceQuantity", typeof(double));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var billingDetailIDParameter = billingDetailID.HasValue ?
                new ObjectParameter("BillingDetailID", billingDetailID) :
                new ObjectParameter("BillingDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingConfirmationChanges", flagParameter, billingIDParameter, otherServiceDetailIDParameter, oldServiceNumberParameter, newServiceIDParameter, newServiceQuantityParameter, currentUserParameter, billingDetailIDParameter);
        }

        public virtual ObjectResult<STBillingConfirmationCombinedBiilingNo_Result> STBillingConfirmationCombinedBiilingNo(Nullable<int> customerMainID, string userID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingConfirmationCombinedBiilingNo_Result>("STBillingConfirmationCombinedBiilingNo", customerMainIDParameter, userIDParameter);
        }

        public virtual ObjectResult<STBillingConfirmationCombinedDetailReport_Result> STBillingConfirmationCombinedDetailReport(Nullable<int> customerMainID, string userID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingConfirmationCombinedDetailReport_Result>("STBillingConfirmationCombinedDetailReport", customerMainIDParameter, userIDParameter);
        }

        public virtual int STBillingConfirmationCombinedInsert(Nullable<int> customerMainID, string userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> checkCombined)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var checkCombinedParameter = checkCombined.HasValue ?
                new ObjectParameter("CheckCombined", checkCombined) :
                new ObjectParameter("CheckCombined", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingConfirmationCombinedInsert", customerMainIDParameter, userIDParameter, fromDateParameter, toDateParameter, checkCombinedParameter);
        }

        public virtual ObjectResult<STBillingConfirmationCombinedReport_Result> STBillingConfirmationCombinedReport(Nullable<int> customerMainID, string userID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingConfirmationCombinedReport_Result>("STBillingConfirmationCombinedReport", customerMainIDParameter, userIDParameter);
        }

        public virtual int STBillingConfirmationDelete(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerID, Nullable<int> varBillingID, string user, string reason)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var varBillingIDParameter = varBillingID.HasValue ?
                new ObjectParameter("varBillingID", varBillingID) :
                new ObjectParameter("varBillingID", typeof(int));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingConfirmationDelete", fromDateParameter, toDateParameter, customerIDParameter, varBillingIDParameter, userParameter, reasonParameter);
        }

        public virtual int STBillingConfirmationUpdate(Nullable<int> billingID, Nullable<double> beginPallet, Nullable<double> inPallet, Nullable<double> outPallet, string currentUser)
        {
            var billingIDParameter = billingID.HasValue ?
                new ObjectParameter("BillingID", billingID) :
                new ObjectParameter("BillingID", typeof(int));

            var beginPalletParameter = beginPallet.HasValue ?
                new ObjectParameter("BeginPallet", beginPallet) :
                new ObjectParameter("BeginPallet", typeof(double));

            var inPalletParameter = inPallet.HasValue ?
                new ObjectParameter("InPallet", inPallet) :
                new ObjectParameter("InPallet", typeof(double));

            var outPalletParameter = outPallet.HasValue ?
                new ObjectParameter("OutPallet", outPallet) :
                new ObjectParameter("OutPallet", typeof(double));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingConfirmationUpdate", billingIDParameter, beginPalletParameter, inPalletParameter, outPalletParameter, currentUserParameter);
        }

        public virtual int STBillingDetailBreakdownRemarkUpdate(Nullable<int> billingDetailBreakdownID, string remark)
        {
            var billingDetailBreakdownIDParameter = billingDetailBreakdownID.HasValue ?
                new ObjectParameter("BillingDetailBreakdownID", billingDetailBreakdownID) :
                new ObjectParameter("BillingDetailBreakdownID", typeof(int));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingDetailBreakdownRemarkUpdate", billingDetailBreakdownIDParameter, remarkParameter);
        }

        public virtual ObjectResult<STBillingDetailBreakDownSendEmail_Result> STBillingDetailBreakDownSendEmail(Nullable<int> billingID)
        {
            var billingIDParameter = billingID.HasValue ?
                new ObjectParameter("BillingID", billingID) :
                new ObjectParameter("BillingID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingDetailBreakDownSendEmail_Result>("STBillingDetailBreakDownSendEmail", billingIDParameter);
        }

        public virtual ObjectResult<STBillingDetailLastMonth_Result> STBillingDetailLastMonth(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingDetailLastMonth_Result>("STBillingDetailLastMonth", customerIDParameter);
        }

        public virtual ObjectResult<STBillingDetailNoFee_Result> STBillingDetailNoFee(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingDetailNoFee_Result>("STBillingDetailNoFee", customerIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual int STBillingDetailsDeleteTmp(Nullable<int> employeeID, Nullable<int> customerID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingDetailsDeleteTmp", employeeIDParameter, customerIDParameter);
        }

        public virtual ObjectResult<STBillingDetailsPowerForRefContainers_Result> STBillingDetailsPowerForRefContainers(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingDetailsPowerForRefContainers_Result>("STBillingDetailsPowerForRefContainers", fromDateParameter, todateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STBillingLessThan3days_Result> STBillingLessThan3days(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingLessThan3days_Result>("STBillingLessThan3days", fromDateParameter, todateParameter, customerIDParameter);
        }

        public virtual int STBillingRun1Customer(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<int> employeeID, Nullable<int> defaultPalletQuantity)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var defaultPalletQuantityParameter = defaultPalletQuantity.HasValue ?
                new ObjectParameter("DefaultPalletQuantity", defaultPalletQuantity) :
                new ObjectParameter("DefaultPalletQuantity", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRun1Customer", varFromDateParameter, varTodateParameter, varCustomerIDParameter, employeeIDParameter, defaultPalletQuantityParameter);
        }

        public virtual int STBillingRun1Customer2008_bk20150708(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<int> employeeID, Nullable<int> defaultPalletQuantity)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var defaultPalletQuantityParameter = defaultPalletQuantity.HasValue ?
                new ObjectParameter("DefaultPalletQuantity", defaultPalletQuantity) :
                new ObjectParameter("DefaultPalletQuantity", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRun1Customer2008_bk20150708", varFromDateParameter, varTodateParameter, varCustomerIDParameter, employeeIDParameter, defaultPalletQuantityParameter);
        }

        public virtual int STBillingRun1CustomerPallets(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<int> employeeID, Nullable<bool> randomWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var randomWeightParameter = randomWeight.HasValue ?
                new ObjectParameter("RandomWeight", randomWeight) :
                new ObjectParameter("RandomWeight", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRun1CustomerPallets", varFromDateParameter, varTodateParameter, varCustomerIDParameter, employeeIDParameter, randomWeightParameter);
        }

        public virtual int STBillingRun1CustomerRandomWeight(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<int> employeeID, Nullable<int> defaultPalletQuantity)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var defaultPalletQuantityParameter = defaultPalletQuantity.HasValue ?
                new ObjectParameter("DefaultPalletQuantity", defaultPalletQuantity) :
                new ObjectParameter("DefaultPalletQuantity", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRun1CustomerRandomWeight", varFromDateParameter, varTodateParameter, varCustomerIDParameter, employeeIDParameter, defaultPalletQuantityParameter);
        }

        public virtual int STBillingRunByCustomer(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCustomerString, Nullable<byte> byPallet, Nullable<int> defaultPalletQuantity, Nullable<int> employeeID, Nullable<bool> randomWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerStringParameter = varCustomerString != null ?
                new ObjectParameter("varCustomerString", varCustomerString) :
                new ObjectParameter("varCustomerString", typeof(string));

            var byPalletParameter = byPallet.HasValue ?
                new ObjectParameter("ByPallet", byPallet) :
                new ObjectParameter("ByPallet", typeof(byte));

            var defaultPalletQuantityParameter = defaultPalletQuantity.HasValue ?
                new ObjectParameter("DefaultPalletQuantity", defaultPalletQuantity) :
                new ObjectParameter("DefaultPalletQuantity", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var randomWeightParameter = randomWeight.HasValue ?
                new ObjectParameter("RandomWeight", randomWeight) :
                new ObjectParameter("RandomWeight", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByCustomer", varFromDateParameter, varTodateParameter, varCustomerStringParameter, byPalletParameter, defaultPalletQuantityParameter, employeeIDParameter, randomWeightParameter);
        }

        public virtual int STBillingRunByCustomerContracts(Nullable<int> employeeID, Nullable<int> varCustomerID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByCustomerContracts", employeeIDParameter, varCustomerIDParameter);
        }

        public virtual int STBillingRunByDispatchingOrders(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByDispatchingOrders", varConditionParameter);
        }

        public virtual ObjectResult<STBillingRunByDispatchingOrdersDOList_Result> STBillingRunByDispatchingOrdersDOList(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingRunByDispatchingOrdersDOList_Result>("STBillingRunByDispatchingOrdersDOList", fromDateParameter, todateParameter, customerIDParameter);
        }

        public virtual int STBillingRunByProductByRO(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition, Nullable<int> employeeID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByProductByRO", varFromDateParameter, varTodateParameter, varConditionParameter, employeeIDParameter);
        }

        public virtual int STBillingRunByProducts(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition, Nullable<int> employeeID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByProducts", varFromDateParameter, varTodateParameter, varConditionParameter, employeeIDParameter);
        }

        public virtual int STBillingRunByReceivingOrders(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByReceivingOrders", varConditionParameter);
        }

        public virtual ObjectResult<STBillingRunByReceivingOrdersROList_Result> STBillingRunByReceivingOrdersROList(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingRunByReceivingOrdersROList_Result>("STBillingRunByReceivingOrdersROList", fromDateParameter, todateParameter, customerIDParameter);
        }

        public virtual int STBillingRunByRO_New(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunByRO_New", varConditionParameter);
        }

        public virtual ObjectResult<STBillingRunCustomerList_Result> STBillingRunCustomerList(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<byte> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingRunCustomerList_Result>("STBillingRunCustomerList", fromDateParameter, todateParameter, flagParameter);
        }

        public virtual int STBillingRunCustomerListSummary(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunCustomerListSummary", fromDateParameter, todateParameter);
        }

        public virtual int STBillingRunfrmBillingDetailJoinedCustomers(Nullable<System.DateTime> reportDate, Nullable<int> employeeID, string varCustomerString)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var varCustomerStringParameter = varCustomerString != null ?
                new ObjectParameter("varCustomerString", varCustomerString) :
                new ObjectParameter("varCustomerString", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunfrmBillingDetailJoinedCustomers", reportDateParameter, employeeIDParameter, varCustomerStringParameter);
        }

        public virtual ObjectResult<STBillingRunfrmBillingDetails_Result> STBillingRunfrmBillingDetails(Nullable<System.DateTime> reportDate, Nullable<int> employeeID, Nullable<int> customerID)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingRunfrmBillingDetails_Result>("STBillingRunfrmBillingDetails", reportDateParameter, employeeIDParameter, customerIDParameter);
        }

        public virtual int STBillingRunOtherServiceAdd(Nullable<int> customerID, Nullable<System.DateTime> serviceDate, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID, Nullable<int> billingCustomerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var billingCustomerIDParameter = billingCustomerID.HasValue ?
                new ObjectParameter("BillingCustomerID", billingCustomerID) :
                new ObjectParameter("BillingCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunOtherServiceAdd", customerIDParameter, serviceDateParameter, fromDateParameter, toDateParameter, employeeIDParameter, billingCustomerIDParameter);
        }

        public virtual int STBillingRunOtherServiceAdjust(Nullable<int> billingCustomerID, Nullable<double> beginPallet, Nullable<double> inPallet, Nullable<double> checkingQuantity2, Nullable<double> outPallet)
        {
            var billingCustomerIDParameter = billingCustomerID.HasValue ?
                new ObjectParameter("BillingCustomerID", billingCustomerID) :
                new ObjectParameter("BillingCustomerID", typeof(int));

            var beginPalletParameter = beginPallet.HasValue ?
                new ObjectParameter("BeginPallet", beginPallet) :
                new ObjectParameter("BeginPallet", typeof(double));

            var inPalletParameter = inPallet.HasValue ?
                new ObjectParameter("InPallet", inPallet) :
                new ObjectParameter("InPallet", typeof(double));

            var checkingQuantity2Parameter = checkingQuantity2.HasValue ?
                new ObjectParameter("CheckingQuantity2", checkingQuantity2) :
                new ObjectParameter("CheckingQuantity2", typeof(double));

            var outPalletParameter = outPallet.HasValue ?
                new ObjectParameter("OutPallet", outPallet) :
                new ObjectParameter("OutPallet", typeof(double));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingRunOtherServiceAdjust", billingCustomerIDParameter, beginPalletParameter, inPalletParameter, checkingQuantity2Parameter, outPalletParameter);
        }

        public virtual ObjectResult<STBillingSummaryByServiceBefore_Result> STBillingSummaryByServiceBefore(Nullable<int> varCustomerID, Nullable<int> billingCustomerID, Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var billingCustomerIDParameter = billingCustomerID.HasValue ?
                new ObjectParameter("BillingCustomerID", billingCustomerID) :
                new ObjectParameter("BillingCustomerID", typeof(int));

            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingSummaryByServiceBefore_Result>("STBillingSummaryByServiceBefore", varCustomerIDParameter, billingCustomerIDParameter, varFromDateParameter, varTodateParameter);
        }

        public virtual int STBillingSummaryDelete(Nullable<int> billingSummaryID)
        {
            var billingSummaryIDParameter = billingSummaryID.HasValue ?
                new ObjectParameter("BillingSummaryID", billingSummaryID) :
                new ObjectParameter("BillingSummaryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingSummaryDelete", billingSummaryIDParameter);
        }

        public virtual int STBillingSummaryInsert(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string period, string userName)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STBillingSummaryInsert", fromDateParameter, todateParameter, periodParameter, userNameParameter);
        }

        public virtual ObjectResult<STBusinessTripReport_Result> STBusinessTripReport(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varToDate, Nullable<int> varDepartmentID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varToDateParameter = varToDate.HasValue ?
                new ObjectParameter("varToDate", varToDate) :
                new ObjectParameter("varToDate", typeof(System.DateTime));

            var varDepartmentIDParameter = varDepartmentID.HasValue ?
                new ObjectParameter("varDepartmentID", varDepartmentID) :
                new ObjectParameter("varDepartmentID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBusinessTripReport_Result>("STBusinessTripReport", varFromDateParameter, varToDateParameter, varDepartmentIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadWorkDefinitionWithCustomer_Result> ST_WMS_LoadWorkDefinitionWithCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWorkDefinitionWithCustomer_Result>("ST_WMS_LoadWorkDefinitionWithCustomer");
        }

        public virtual int STCheckInOutInsert(Nullable<System.DateTime> timeInOut, Nullable<int> employeeID, string machineNameNo)
        {
            var timeInOutParameter = timeInOut.HasValue ?
                new ObjectParameter("TimeInOut", timeInOut) :
                new ObjectParameter("TimeInOut", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var machineNameNoParameter = machineNameNo != null ?
                new ObjectParameter("MachineNameNo", machineNameNo) :
                new ObjectParameter("MachineNameNo", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCheckInOutInsert", timeInOutParameter, employeeIDParameter, machineNameNoParameter);
        }

        public virtual int STCloseStock(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCloseStock", varFromDateParameter, varTodateParameter);
        }

        public virtual int STCloseStockWeeklyScheduled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCloseStockWeeklyScheduled");
        }

        public virtual ObjectResult<STcomboCustomerID_Result> STcomboCustomerID(Nullable<int> varStoreID)
        {
            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboCustomerID_Result>("STcomboCustomerID", varStoreIDParameter);
        }

        public virtual ObjectResult<STcomboCustomerID_Main_Result> STcomboCustomerID_Main(Nullable<int> customerMainID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboCustomerID_Main_Result>("STcomboCustomerID_Main", customerMainIDParameter);
        }

        public virtual ObjectResult<STcomboCustomerIDMetro_Result> STcomboCustomerIDMetro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboCustomerIDMetro_Result>("STcomboCustomerIDMetro");
        }

        public virtual ObjectResult<STcomboCustomerIDNoChangeHome_Result> STcomboCustomerIDNoChangeHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboCustomerIDNoChangeHome_Result>("STcomboCustomerIDNoChangeHome");
        }

        public virtual ObjectResult<STcomboCustomerIDProperties_Result> STcomboCustomerIDProperties()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboCustomerIDProperties_Result>("STcomboCustomerIDProperties");
        }

        public virtual ObjectResult<STcomboCustomerMainID_Result> STcomboCustomerMainID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboCustomerMainID_Result>("STcomboCustomerMainID");
        }

        public virtual ObjectResult<STcomboDepartmentID_Result> STcomboDepartmentID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboDepartmentID_Result>("STcomboDepartmentID");
        }

        public virtual ObjectResult<STcomboEmployeeID_Result> STcomboEmployeeID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboEmployeeID_Result>("STcomboEmployeeID");
        }

        public virtual ObjectResult<STcomboEmployeeOT_Result> STcomboEmployeeOT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboEmployeeOT_Result>("STcomboEmployeeOT");
        }

        public virtual ObjectResult<STComboLocationID_Result> STComboLocationID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationID_Result>("STComboLocationID");
        }

        public virtual ObjectResult<STComboLocationIDDOProductsLO_Result> STComboLocationIDDOProductsLO(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationIDDOProductsLO_Result>("STComboLocationIDDOProductsLO", productIDParameter);
        }

        public virtual ObjectResult<STComboLocationIDDOProductsRO_Result> STComboLocationIDDOProductsRO(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationIDDOProductsRO_Result>("STComboLocationIDDOProductsRO", productIDParameter);
        }

        public virtual ObjectResult<STComboLocationIDFree_Result> STComboLocationIDFree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationIDFree_Result>("STComboLocationIDFree");
        }

        public virtual ObjectResult<STComboLocationIDFreeFloor_Result> STComboLocationIDFreeFloor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationIDFreeFloor_Result>("STComboLocationIDFreeFloor");
        }

        public virtual ObjectResult<STComboLocationIDHome_Result> STComboLocationIDHome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationIDHome_Result>("STComboLocationIDHome");
        }

        public virtual ObjectResult<STComboLocationIDPicking_Result> STComboLocationIDPicking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboLocationIDPicking_Result>("STComboLocationIDPicking");
        }

        public virtual ObjectResult<STComboOrderCategories_Result> STComboOrderCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboOrderCategories_Result>("STComboOrderCategories");
        }

        public virtual ObjectResult<STComboOrderCategory_Result> STComboOrderCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboOrderCategory_Result>("STComboOrderCategory");
        }

        public virtual ObjectResult<STComboPositionID_Result> STComboPositionID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboPositionID_Result>("STComboPositionID");
        }

        public virtual ObjectResult<STComboProductID_Result> STComboProductID(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboProductID_Result>("STComboProductID", customerIDParameter);
        }

        public virtual ObjectResult<STComboProductIDDO_Result> STComboProductIDDO(Nullable<int> customerID, Nullable<byte> sortProduct)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var sortProductParameter = sortProduct.HasValue ?
                new ObjectParameter("SortProduct", sortProduct) :
                new ObjectParameter("SortProduct", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboProductIDDO_Result>("STComboProductIDDO", customerIDParameter, sortProductParameter);
        }

        public virtual ObjectResult<STComboProductIDList_Result> STComboProductIDList(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboProductIDList_Result>("STComboProductIDList", customerIDParameter);
        }

        public virtual ObjectResult<STcomboProductIDRO_Result> STcomboProductIDRO(Nullable<int> customerID, Nullable<byte> flag, string filterCriteria, Nullable<byte> filterProduct)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var filterCriteriaParameter = filterCriteria != null ?
                new ObjectParameter("FilterCriteria", filterCriteria) :
                new ObjectParameter("FilterCriteria", typeof(string));

            var filterProductParameter = filterProduct.HasValue ?
                new ObjectParameter("FilterProduct", filterProduct) :
                new ObjectParameter("FilterProduct", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboProductIDRO_Result>("STcomboProductIDRO", customerIDParameter, flagParameter, filterCriteriaParameter, filterProductParameter);
        }

        public virtual ObjectResult<STcomboProductIDROSearch_Result> STcomboProductIDROSearch(Nullable<int> customerID, Nullable<byte> flag, string productName, string productNumber, string customerRef)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));

            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));

            var customerRefParameter = customerRef != null ?
                new ObjectParameter("CustomerRef", customerRef) :
                new ObjectParameter("CustomerRef", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboProductIDROSearch_Result>("STcomboProductIDROSearch", customerIDParameter, flagParameter, productNameParameter, productNumberParameter, customerRefParameter);
        }

        public virtual ObjectResult<STComboProductIDSameWeight_Result> STComboProductIDSameWeight(Nullable<int> customerID, Nullable<int> productID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboProductIDSameWeight_Result>("STComboProductIDSameWeight", customerIDParameter, productIDParameter);
        }

        public virtual int STComboRODOID(Nullable<System.DateTime> orderDate)
        {
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STComboRODOID", orderDateParameter);
        }

        public virtual ObjectResult<STComboServiceContractDetails_Result> STComboServiceContractDetails(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboServiceContractDetails_Result>("STComboServiceContractDetails", customerIDParameter);
        }

        public virtual ObjectResult<STComboServiceOvertime_Result> STComboServiceOvertime(Nullable<int> customerID, string serviceName)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboServiceOvertime_Result>("STComboServiceOvertime", customerIDParameter, serviceNameParameter);
        }

        public virtual ObjectResult<Nullable<byte>> STcomboShiftID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("STcomboShiftID");
        }

        public virtual ObjectResult<STcomboStoreID_Result> STcomboStoreID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STcomboStoreID_Result>("STcomboStoreID");
        }

        public virtual ObjectResult<STComboTrainingRequirements_Result> STComboTrainingRequirements(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboTrainingRequirements_Result>("STComboTrainingRequirements", employeeIDParameter);
        }

        public virtual ObjectResult<STCompareDetails_Result> STCompareDetails(Nullable<int> orderID, Nullable<bool> orderType)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));

            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCompareDetails_Result>("STCompareDetails", orderIDParameter, orderTypeParameter);
        }

        public virtual int STCompareRODOSummary(string rO, string dO)
        {
            var rOParameter = rO != null ?
                new ObjectParameter("RO", rO) :
                new ObjectParameter("RO", typeof(string));

            var dOParameter = dO != null ?
                new ObjectParameter("DO", dO) :
                new ObjectParameter("DO", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCompareRODOSummary", rOParameter, dOParameter);
        }

        public virtual int STConfirmAll(Nullable<int> varOrderID, Nullable<bool> varTransactionType, string varUser)
        {
            var varOrderIDParameter = varOrderID.HasValue ?
                new ObjectParameter("varOrderID", varOrderID) :
                new ObjectParameter("varOrderID", typeof(int));

            var varTransactionTypeParameter = varTransactionType.HasValue ?
                new ObjectParameter("varTransactionType", varTransactionType) :
                new ObjectParameter("varTransactionType", typeof(bool));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STConfirmAll", varOrderIDParameter, varTransactionTypeParameter, varUserParameter);
        }

        public virtual ObjectResult<STConfirmationAll_Result> STConfirmationAll(string loginName, Nullable<byte> warehouseID)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STConfirmationAll_Result>("STConfirmationAll", loginNameParameter, warehouseIDParameter);
        }

        public virtual ObjectResult<STConfirmationByUser_Result> STConfirmationByUser(string varUserName)
        {
            var varUserNameParameter = varUserName != null ?
                new ObjectParameter("varUserName", varUserName) :
                new ObjectParameter("varUserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STConfirmationByUser_Result>("STConfirmationByUser", varUserNameParameter);
        }

        public virtual int STConfirmOne(Nullable<int> varTransactionID, Nullable<byte> varTransactionType, string varUser)
        {
            var varTransactionIDParameter = varTransactionID.HasValue ?
                new ObjectParameter("varTransactionID", varTransactionID) :
                new ObjectParameter("varTransactionID", typeof(int));

            var varTransactionTypeParameter = varTransactionType.HasValue ?
                new ObjectParameter("varTransactionType", varTransactionType) :
                new ObjectParameter("varTransactionType", typeof(byte));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STConfirmOne", varTransactionIDParameter, varTransactionTypeParameter, varUserParameter);
        }

        public virtual int STConfirmOneDOPriority(Nullable<int> varTransactionID, string varUser)
        {
            var varTransactionIDParameter = varTransactionID.HasValue ?
                new ObjectParameter("varTransactionID", varTransactionID) :
                new ObjectParameter("varTransactionID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STConfirmOneDOPriority", varTransactionIDParameter, varUserParameter);
        }

        public virtual ObjectResult<STContainerCheckingHistories_Result> STContainerCheckingHistories(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STContainerCheckingHistories_Result>("STContainerCheckingHistories", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STContainerCheckingReport_Result> STContainerCheckingReport(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STContainerCheckingReport_Result>("STContainerCheckingReport", loginNameParameter);
        }

        public virtual ObjectResult<STContainerCheckingView_Result> STContainerCheckingView(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STContainerCheckingView_Result>("STContainerCheckingView", orderNumberParameter);
        }

        public virtual int STCustomerBillingByOvertime(Nullable<int> customerID, ObjectParameter serviceQty)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBillingByOvertime", customerIDParameter, serviceQty);
        }

        public virtual ObjectResult<STCustomerBookingByTimeSlot_Result> STCustomerBookingByTimeSlot(Nullable<System.DateTime> bookingDate, Nullable<byte> warehouseID, string orderType)
        {
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookingByTimeSlot_Result>("STCustomerBookingByTimeSlot", bookingDateParameter, warehouseIDParameter, orderTypeParameter);
        }

        public virtual ObjectResult<STCustomerBookingByTimeSlotChart_Result> STCustomerBookingByTimeSlotChart(Nullable<System.DateTime> bookingDate, Nullable<byte> warehouseID)
        {
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookingByTimeSlotChart_Result>("STCustomerBookingByTimeSlotChart", bookingDateParameter, warehouseIDParameter);
        }

        public virtual ObjectResult<STCustomerBookingCalendarWeek_Result> STCustomerBookingCalendarWeek()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookingCalendarWeek_Result>("STCustomerBookingCalendarWeek");
        }

        public virtual int STCustomerBookingDelete(Nullable<System.Guid> bookingID)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingDelete", bookingIDParameter);
        }

        public virtual ObjectResult<STCustomerBookingDetails_Result> STCustomerBookingDetails(Nullable<System.DateTime> bookingDate, Nullable<int> timeSlotID, Nullable<int> customerMainID, string userName, string status, Nullable<byte> warehouseID)
        {
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));

            var timeSlotIDParameter = timeSlotID.HasValue ?
                new ObjectParameter("TimeSlotID", timeSlotID) :
                new ObjectParameter("TimeSlotID", typeof(int));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookingDetails_Result>("STCustomerBookingDetails", bookingDateParameter, timeSlotIDParameter, customerMainIDParameter, userNameParameter, statusParameter, warehouseIDParameter);
        }

        public virtual int STCustomerBookingImportToOrder(string bookingNumber, Nullable<int> customerID, string customerNumber, Nullable<System.DateTime> orderDate, string owner, string specialRequirement, string orderType, ObjectParameter orderID)
        {
            var bookingNumberParameter = bookingNumber != null ?
                new ObjectParameter("BookingNumber", bookingNumber) :
                new ObjectParameter("BookingNumber", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("CustomerNumber", customerNumber) :
                new ObjectParameter("CustomerNumber", typeof(string));

            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));

            var specialRequirementParameter = specialRequirement != null ?
                new ObjectParameter("SpecialRequirement", specialRequirement) :
                new ObjectParameter("SpecialRequirement", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingImportToOrder", bookingNumberParameter, customerIDParameter, customerNumberParameter, orderDateParameter, ownerParameter, specialRequirementParameter, orderTypeParameter, orderID);
        }

        public virtual int STCustomerBookingInsert(Nullable<int> customerID, string createdBy, string requestDescription, Nullable<System.DateTime> startTime, Nullable<int> cartons, Nullable<double> weights, Nullable<int> pallets, string vehicleType)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var requestDescriptionParameter = requestDescription != null ?
                new ObjectParameter("RequestDescription", requestDescription) :
                new ObjectParameter("RequestDescription", typeof(string));

            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));

            var cartonsParameter = cartons.HasValue ?
                new ObjectParameter("Cartons", cartons) :
                new ObjectParameter("Cartons", typeof(int));

            var weightsParameter = weights.HasValue ?
                new ObjectParameter("Weights", weights) :
                new ObjectParameter("Weights", typeof(double));

            var palletsParameter = pallets.HasValue ?
                new ObjectParameter("Pallets", pallets) :
                new ObjectParameter("Pallets", typeof(int));

            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingInsert", customerIDParameter, createdByParameter, requestDescriptionParameter, startTimeParameter, cartonsParameter, weightsParameter, palletsParameter, vehicleTypeParameter);
        }

        public virtual int STCustomerBookingInsertFromTrip(string orderNumber, string createdBy)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingInsertFromTrip", orderNumberParameter, createdByParameter);
        }

        public virtual int STCustomerBookingNumberDelete(string bookingNumber)
        {
            var bookingNumberParameter = bookingNumber != null ?
                new ObjectParameter("BookingNumber", bookingNumber) :
                new ObjectParameter("BookingNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingNumberDelete", bookingNumberParameter);
        }

        public virtual ObjectResult<STCustomerBookings_Result> STCustomerBookings(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookings_Result>("STCustomerBookings", customerIDParameter);
        }

        public virtual ObjectResult<STCustomerBookingTimeSlots_Result> STCustomerBookingTimeSlots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookingTimeSlots_Result>("STCustomerBookingTimeSlots");
        }

        public virtual int STCustomerBookingUpdate(Nullable<System.Guid> bookingID, string requestDescription, Nullable<System.DateTime> startTime, Nullable<int> cartons, Nullable<double> weights, Nullable<int> pallets, string vehicleType)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(System.Guid));

            var requestDescriptionParameter = requestDescription != null ?
                new ObjectParameter("RequestDescription", requestDescription) :
                new ObjectParameter("RequestDescription", typeof(string));

            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));

            var cartonsParameter = cartons.HasValue ?
                new ObjectParameter("Cartons", cartons) :
                new ObjectParameter("Cartons", typeof(int));

            var weightsParameter = weights.HasValue ?
                new ObjectParameter("Weights", weights) :
                new ObjectParameter("Weights", typeof(double));

            var palletsParameter = pallets.HasValue ?
                new ObjectParameter("Pallets", pallets) :
                new ObjectParameter("Pallets", typeof(int));

            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingUpdate", bookingIDParameter, requestDescriptionParameter, startTimeParameter, cartonsParameter, weightsParameter, palletsParameter, vehicleTypeParameter);
        }

        public virtual int STCustomerBookingUpdateTimeSlot(string bookingNumber, Nullable<int> newTimeSlotID)
        {
            var bookingNumberParameter = bookingNumber != null ?
                new ObjectParameter("BookingNumber", bookingNumber) :
                new ObjectParameter("BookingNumber", typeof(string));

            var newTimeSlotIDParameter = newTimeSlotID.HasValue ?
                new ObjectParameter("NewTimeSlotID", newTimeSlotID) :
                new ObjectParameter("NewTimeSlotID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerBookingUpdateTimeSlot", bookingNumberParameter, newTimeSlotIDParameter);
        }

        public virtual ObjectResult<STCustomerBookingViewByDate_Result> STCustomerBookingViewByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> warehouseID, string orderType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerBookingViewByDate_Result>("STCustomerBookingViewByDate", fromDateParameter, toDateParameter, warehouseIDParameter, orderTypeParameter);
        }

        public virtual int STCustomerByOvertimeCheckingTime(string orderNumber, Nullable<int> customerID, ObjectParameter hW_OT_CatID)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerByOvertimeCheckingTime", orderNumberParameter, customerIDParameter, hW_OT_CatID);
        }

        public virtual ObjectResult<STCustomerClients_Result> STCustomerClients(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerClients_Result>("STCustomerClients", customerIDParameter);
        }

        public virtual int STCustomerClientsInsert(Nullable<int> customerID, string customerClientCode, string customerClientName, string customerClientAddress, string createdBy, ObjectParameter newCustomerClientID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var customerClientCodeParameter = customerClientCode != null ?
                new ObjectParameter("CustomerClientCode", customerClientCode) :
                new ObjectParameter("CustomerClientCode", typeof(string));

            var customerClientNameParameter = customerClientName != null ?
                new ObjectParameter("CustomerClientName", customerClientName) :
                new ObjectParameter("CustomerClientName", typeof(string));

            var customerClientAddressParameter = customerClientAddress != null ?
                new ObjectParameter("CustomerClientAddress", customerClientAddress) :
                new ObjectParameter("CustomerClientAddress", typeof(string));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerClientsInsert", customerIDParameter, customerClientCodeParameter, customerClientNameParameter, customerClientAddressParameter, createdByParameter, newCustomerClientID);
        }

        public virtual ObjectResult<STCustomerComplainReport_Result> STCustomerComplainReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerComplainReport_Result>("STCustomerComplainReport", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STCustomerEvaluationAndAnalyzing_Result> STCustomerEvaluationAndAnalyzing(Nullable<int> customerMainID, Nullable<System.DateTime> varFromdate, Nullable<System.DateTime> varTodate)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var varFromdateParameter = varFromdate.HasValue ?
                new ObjectParameter("varFromdate", varFromdate) :
                new ObjectParameter("varFromdate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerEvaluationAndAnalyzing_Result>("STCustomerEvaluationAndAnalyzing", customerMainIDParameter, varFromdateParameter, varTodateParameter);
        }

        public virtual ObjectResult<STCustomerEvaluationAndAnalyzingABA_Result> STCustomerEvaluationAndAnalyzingABA(Nullable<int> customerMainID, Nullable<System.DateTime> varFromdate, Nullable<System.DateTime> varTodate)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var varFromdateParameter = varFromdate.HasValue ?
                new ObjectParameter("varFromdate", varFromdate) :
                new ObjectParameter("varFromdate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerEvaluationAndAnalyzingABA_Result>("STCustomerEvaluationAndAnalyzingABA", customerMainIDParameter, varFromdateParameter, varTodateParameter);
        }

        public virtual ObjectResult<STCustomerEvaluationAndAnalyzingOS_Result> STCustomerEvaluationAndAnalyzingOS(Nullable<System.DateTime> varFromdate, Nullable<System.DateTime> varTodate)
        {
            var varFromdateParameter = varFromdate.HasValue ?
                new ObjectParameter("varFromdate", varFromdate) :
                new ObjectParameter("varFromdate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerEvaluationAndAnalyzingOS_Result>("STCustomerEvaluationAndAnalyzingOS", varFromdateParameter, varTodateParameter);
        }

        public virtual ObjectResult<STCustomerEvaluationAndAnalyzingSummary_Result> STCustomerEvaluationAndAnalyzingSummary(Nullable<int> customerMainID, Nullable<System.DateTime> fD, Nullable<System.DateTime> tD)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var fDParameter = fD.HasValue ?
                new ObjectParameter("FD", fD) :
                new ObjectParameter("FD", typeof(System.DateTime));

            var tDParameter = tD.HasValue ?
                new ObjectParameter("TD", tD) :
                new ObjectParameter("TD", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerEvaluationAndAnalyzingSummary_Result>("STCustomerEvaluationAndAnalyzingSummary", customerMainIDParameter, fDParameter, tDParameter);
        }

        public virtual ObjectResult<STCustomerEventReport_New_Result> STCustomerEventReport_New()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerEventReport_New_Result>("STCustomerEventReport_New");
        }

        public virtual int STCustomerHoldUpdate(Nullable<int> customerID, Nullable<bool> hold, string holdMessage, string currentUser)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var holdParameter = hold.HasValue ?
                new ObjectParameter("Hold", hold) :
                new ObjectParameter("Hold", typeof(bool));

            var holdMessageParameter = holdMessage != null ?
                new ObjectParameter("HoldMessage", holdMessage) :
                new ObjectParameter("HoldMessage", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerHoldUpdate", customerIDParameter, holdParameter, holdMessageParameter, currentUserParameter);
        }

        public virtual int STCustomerInfoUpdate(Nullable<int> customerID, Nullable<int> customerMainID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerInfoUpdate", customerIDParameter, customerMainIDParameter);
        }

        public virtual int STCustomerInitialUpdate(Nullable<byte> flag, Nullable<int> customerID)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(byte));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerInitialUpdate", flagParameter, customerIDParameter);
        }

        public virtual int STCustomerProductGroupInsertNew(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerProductGroupInsertNew", customerIDParameter);
        }

        public virtual ObjectResult<STCustomerRequirementPrint_Result> STCustomerRequirementPrint(Nullable<int> customerMainID, Nullable<byte> flag, Nullable<int> receivingOrderID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerRequirementPrint_Result>("STCustomerRequirementPrint", customerMainIDParameter, flagParameter, receivingOrderIDParameter);
        }

        public virtual int STCustomerRequirementRemind(Nullable<int> customerMainID, string loginName, string orderType, ObjectParameter @return)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerRequirementRemind", customerMainIDParameter, loginNameParameter, orderTypeParameter, @return);
        }

        public virtual int STCustomerRequirementRemindInsert(Nullable<int> customerMainID, string loginName, string orderType)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerRequirementRemindInsert", customerMainIDParameter, loginNameParameter, orderTypeParameter);
        }

        public virtual ObjectResult<STCustomerRequirements_Result> STCustomerRequirements(Nullable<int> customerMainID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerRequirements_Result>("STCustomerRequirements", customerMainIDParameter);
        }

        public virtual ObjectResult<STCustomersActive_Result> STCustomersActive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomersActive_Result>("STCustomersActive");
        }

        public virtual int STCustomerServiceCostingInsert(string customerNumber, string serviceNumber, Nullable<System.DateTime> serviceProvidedDate, Nullable<System.DateTime> costingDate, string createdBy, Nullable<bool> approved, Nullable<float> totalServiceQuantity, Nullable<float> proposedOverheadMargin, string customerServiceCostingRemark, string serviceDetailDescription)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("CustomerNumber", customerNumber) :
                new ObjectParameter("CustomerNumber", typeof(string));

            var serviceNumberParameter = serviceNumber != null ?
                new ObjectParameter("ServiceNumber", serviceNumber) :
                new ObjectParameter("ServiceNumber", typeof(string));

            var serviceProvidedDateParameter = serviceProvidedDate.HasValue ?
                new ObjectParameter("ServiceProvidedDate", serviceProvidedDate) :
                new ObjectParameter("ServiceProvidedDate", typeof(System.DateTime));

            var costingDateParameter = costingDate.HasValue ?
                new ObjectParameter("CostingDate", costingDate) :
                new ObjectParameter("CostingDate", typeof(System.DateTime));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));

            var totalServiceQuantityParameter = totalServiceQuantity.HasValue ?
                new ObjectParameter("TotalServiceQuantity", totalServiceQuantity) :
                new ObjectParameter("TotalServiceQuantity", typeof(float));

            var proposedOverheadMarginParameter = proposedOverheadMargin.HasValue ?
                new ObjectParameter("ProposedOverheadMargin", proposedOverheadMargin) :
                new ObjectParameter("ProposedOverheadMargin", typeof(float));

            var customerServiceCostingRemarkParameter = customerServiceCostingRemark != null ?
                new ObjectParameter("CustomerServiceCostingRemark", customerServiceCostingRemark) :
                new ObjectParameter("CustomerServiceCostingRemark", typeof(string));

            var serviceDetailDescriptionParameter = serviceDetailDescription != null ?
                new ObjectParameter("ServiceDetailDescription", serviceDetailDescription) :
                new ObjectParameter("ServiceDetailDescription", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STCustomerServiceCostingInsert", customerNumberParameter, serviceNumberParameter, serviceProvidedDateParameter, costingDateParameter, createdByParameter, approvedParameter, totalServiceQuantityParameter, proposedOverheadMarginParameter, customerServiceCostingRemarkParameter, serviceDetailDescriptionParameter);
        }

        public virtual int STDailyDispatchingOrdersProgressPercentageUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyDispatchingOrdersProgressPercentageUpdate");
        }

        public virtual int STDailyElectricityConsumptionToOtherService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyElectricityConsumptionToOtherService");
        }

        public virtual int STDailyEmployeeInOutFinger_FixError()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyEmployeeInOutFinger_FixError");
        }

        public virtual int STDailyEmployeeWorkingCheckInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyEmployeeWorkingCheckInsert");
        }

        public virtual int STDailyEmployeeWorkingInsert(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyEmployeeWorkingInsert", fromDateParameter, toDateParameter);
        }

        public virtual int STDailyOtherJobUnacceptAutoDelete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyOtherJobUnacceptAutoDelete");
        }

        public virtual int STDailyPlantDBMaintenanceJobDeadlineUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyPlantDBMaintenanceJobDeadlineUpdate");
        }

        public virtual int STDailyPrintedLunchInsert(Nullable<System.DateTime> printedDate, Nullable<byte> shift)
        {
            var printedDateParameter = printedDate.HasValue ?
                new ObjectParameter("PrintedDate", printedDate) :
                new ObjectParameter("PrintedDate", typeof(System.DateTime));

            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyPrintedLunchInsert", printedDateParameter, shiftParameter);
        }

        public virtual int STDailyScheduledJob()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDailyScheduledJob");
        }

        public virtual ObjectResult<STDailyScheduledJob_NoteDetails_bk20161025_Result> STDailyScheduledJob_NoteDetails_bk20161025(Nullable<bool> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDailyScheduledJob_NoteDetails_bk20161025_Result>("STDailyScheduledJob_NoteDetails_bk20161025", flagParameter);
        }

        public virtual int STDelete_CompactDatabase(Nullable<System.DateTime> varReportDate)
        {
            var varReportDateParameter = varReportDate.HasValue ?
                new ObjectParameter("varReportDate", varReportDate) :
                new ObjectParameter("varReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDelete_CompactDatabase", varReportDateParameter);
        }

        public virtual int STDelete_Cont_Truck_InOut_Insert(Nullable<int> contInOutID, string iPAddressDeleted, Nullable<bool> flag)
        {
            var contInOutIDParameter = contInOutID.HasValue ?
                new ObjectParameter("ContInOutID", contInOutID) :
                new ObjectParameter("ContInOutID", typeof(int));

            var iPAddressDeletedParameter = iPAddressDeleted != null ?
                new ObjectParameter("IPAddressDeleted", iPAddressDeleted) :
                new ObjectParameter("IPAddressDeleted", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDelete_Cont_Truck_InOut_Insert", contInOutIDParameter, iPAddressDeletedParameter, flagParameter);
        }

        public virtual int STDelete_Cont_Truck_InOut_Restore_Insert(Nullable<int> id, string vehicleType)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDelete_Cont_Truck_InOut_Restore_Insert", idParameter, vehicleTypeParameter);
        }

        public virtual int STDelete_CustomerToHistoryTable(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDelete_CustomerToHistoryTable", varCustomerIDParameter);
        }

        public virtual int STDelete_ProductToHistoryTable(Nullable<int> productID, string deletedBy)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDelete_ProductToHistoryTable", productIDParameter, deletedByParameter);
        }

        public virtual ObjectResult<STDeletedOrderView_Result> STDeletedOrderView(Nullable<byte> flag, Nullable<int> customerID)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDeletedOrderView_Result>("STDeletedOrderView", flagParameter, customerIDParameter);
        }

        public virtual ObjectResult<STDestinationPorts_Result> STDestinationPorts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDestinationPorts_Result>("STDestinationPorts");
        }

        public virtual ObjectResult<STDifferenceCheck_CurrentQtyByPalletID_Result> STDifferenceCheck_CurrentQtyByPalletID(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDifferenceCheck_CurrentQtyByPalletID_Result>("STDifferenceCheck_CurrentQtyByPalletID", productIDParameter);
        }

        public virtual int STDifferenceCheck_PalletUpdate(Nullable<int> palletID, Nullable<short> newCurrentQuantity)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var newCurrentQuantityParameter = newCurrentQuantity.HasValue ?
                new ObjectParameter("newCurrentQuantity", newCurrentQuantity) :
                new ObjectParameter("newCurrentQuantity", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDifferenceCheck_PalletUpdate", palletIDParameter, newCurrentQuantityParameter);
        }

        public virtual ObjectResult<STDifferenceCheck2_Result> STDifferenceCheck2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDifferenceCheck2_Result>("STDifferenceCheck2");
        }

        public virtual int STDifferenceCheck2_SendEmail(Nullable<int> zzz, ObjectParameter isProblem)
        {
            var zzzParameter = zzz.HasValue ?
                new ObjectParameter("zzz", zzz) :
                new ObjectParameter("zzz", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDifferenceCheck2_SendEmail", zzzParameter, isProblem);
        }

        public virtual ObjectResult<Nullable<int>> STDifferenceCheckOrphanPallet_SendEmail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("STDifferenceCheckOrphanPallet_SendEmail");
        }

        public virtual int STDispatchingCartonCheckUpdate(Nullable<int> dispatchingProductID, Nullable<bool> checkDelete, Nullable<byte> flag)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            var checkDeleteParameter = checkDelete.HasValue ?
                new ObjectParameter("CheckDelete", checkDelete) :
                new ObjectParameter("CheckDelete", typeof(bool));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingCartonCheckUpdate", dispatchingProductIDParameter, checkDeleteParameter, flagParameter);
        }

        public virtual ObjectResult<STDispatchingCartons_Result> STDispatchingCartons(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingCartons_Result>("STDispatchingCartons", dispatchingProductIDParameter);
        }

        public virtual int STDispatchingCartonScanCheck(Nullable<int> dispatchingOrderID, Nullable<int> transactionID, ObjectParameter hasDifference)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingCartonScanCheck", dispatchingOrderIDParameter, transactionIDParameter, hasDifference);
        }

        public virtual int STDispatchingCartonUpdate(Nullable<int> receivingCartonID, Nullable<int> dispatchingProductID, string cartonNumber, Nullable<int> dataRangeFrom, Nullable<int> dataRangeTo, Nullable<System.DateTime> productionDate, string cartonDescription)
        {
            var receivingCartonIDParameter = receivingCartonID.HasValue ?
                new ObjectParameter("ReceivingCartonID", receivingCartonID) :
                new ObjectParameter("ReceivingCartonID", typeof(int));

            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            var cartonNumberParameter = cartonNumber != null ?
                new ObjectParameter("CartonNumber", cartonNumber) :
                new ObjectParameter("CartonNumber", typeof(string));

            var dataRangeFromParameter = dataRangeFrom.HasValue ?
                new ObjectParameter("DataRangeFrom", dataRangeFrom) :
                new ObjectParameter("DataRangeFrom", typeof(int));

            var dataRangeToParameter = dataRangeTo.HasValue ?
                new ObjectParameter("DataRangeTo", dataRangeTo) :
                new ObjectParameter("DataRangeTo", typeof(int));

            var productionDateParameter = productionDate.HasValue ?
                new ObjectParameter("ProductionDate", productionDate) :
                new ObjectParameter("ProductionDate", typeof(System.DateTime));

            var cartonDescriptionParameter = cartonDescription != null ?
                new ObjectParameter("CartonDescription", cartonDescription) :
                new ObjectParameter("CartonDescription", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingCartonUpdate", receivingCartonIDParameter, dispatchingProductIDParameter, cartonNumberParameter, dataRangeFromParameter, dataRangeToParameter, productionDateParameter, cartonDescriptionParameter);
        }

        public virtual int STDispatchingCartonWeightInsert(Nullable<int> dispatchingProductID, string createdBy)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingCartonWeightInsert", dispatchingProductIDParameter, createdByParameter);
        }

        public virtual int STDispatchingCartonWeightUpdate(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingCartonWeightUpdate", dispatchingProductIDParameter);
        }

        public virtual int STDispatchingDetailUpdateWeightInners(Nullable<int> dispatchingOrderDetailID)
        {
            var dispatchingOrderDetailIDParameter = dispatchingOrderDetailID.HasValue ?
                new ObjectParameter("DispatchingOrderDetailID", dispatchingOrderDetailID) :
                new ObjectParameter("DispatchingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingDetailUpdateWeightInners", dispatchingOrderDetailIDParameter);
        }

        public virtual ObjectResult<STDispatchingLocationAtDispatch_Result> STDispatchingLocationAtDispatch(Nullable<int> dispatchingLocationID, Nullable<int> palletID)
        {
            var dispatchingLocationIDParameter = dispatchingLocationID.HasValue ?
                new ObjectParameter("DispatchingLocationID", dispatchingLocationID) :
                new ObjectParameter("DispatchingLocationID", typeof(int));

            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingLocationAtDispatch_Result>("STDispatchingLocationAtDispatch", dispatchingLocationIDParameter, palletIDParameter);
        }

        public virtual int STDispatchingLocationBreak_bk2016_09_05(Nullable<int> dispatchingProductID, string currentUser)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingLocationBreak_bk2016_09_05", dispatchingProductIDParameter, currentUserParameter);
        }

        public virtual int STDispatchingLocationDelete(Nullable<int> varDispatchingLocationID)
        {
            var varDispatchingLocationIDParameter = varDispatchingLocationID.HasValue ?
                new ObjectParameter("varDispatchingLocationID", varDispatchingLocationID) :
                new ObjectParameter("varDispatchingLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingLocationDelete", varDispatchingLocationIDParameter);
        }

        public virtual int STDispatchingLocationUpdate(Nullable<int> varDispatchingLocationID, Nullable<int> varDispatchingProductID, Nullable<int> varLocationID, Nullable<int> varProductID)
        {
            var varDispatchingLocationIDParameter = varDispatchingLocationID.HasValue ?
                new ObjectParameter("varDispatchingLocationID", varDispatchingLocationID) :
                new ObjectParameter("varDispatchingLocationID", typeof(int));

            var varDispatchingProductIDParameter = varDispatchingProductID.HasValue ?
                new ObjectParameter("varDispatchingProductID", varDispatchingProductID) :
                new ObjectParameter("varDispatchingProductID", typeof(int));

            var varLocationIDParameter = varLocationID.HasValue ?
                new ObjectParameter("varLocationID", varLocationID) :
                new ObjectParameter("varLocationID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingLocationUpdate", varDispatchingLocationIDParameter, varDispatchingProductIDParameter, varLocationIDParameter, varProductIDParameter);
        }

        public virtual int STDispatchingLocationUpdateWeightInners(Nullable<int> varDispatchingLocationID, Nullable<int> varDispatchingProductID, Nullable<int> varLocationID, Nullable<int> varProductID)
        {
            var varDispatchingLocationIDParameter = varDispatchingLocationID.HasValue ?
                new ObjectParameter("varDispatchingLocationID", varDispatchingLocationID) :
                new ObjectParameter("varDispatchingLocationID", typeof(int));

            var varDispatchingProductIDParameter = varDispatchingProductID.HasValue ?
                new ObjectParameter("varDispatchingProductID", varDispatchingProductID) :
                new ObjectParameter("varDispatchingProductID", typeof(int));

            var varLocationIDParameter = varLocationID.HasValue ?
                new ObjectParameter("varLocationID", varLocationID) :
                new ObjectParameter("varLocationID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingLocationUpdateWeightInners", varDispatchingLocationIDParameter, varDispatchingProductIDParameter, varLocationIDParameter, varProductIDParameter);
        }

        public virtual ObjectResult<STDispatchingNote_Result> STDispatchingNote(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingNote_Result>("STDispatchingNote", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STDispatchingNote_Client_Result> STDispatchingNote_Client(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingNote_Client_Result>("STDispatchingNote_Client", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STDispatchingNote_Client_Trip_Result> STDispatchingNote_Client_Trip(Nullable<int> tripID, Nullable<byte> pcs)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var pcsParameter = pcs.HasValue ?
                new ObjectParameter("pcs", pcs) :
                new ObjectParameter("pcs", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingNote_Client_Trip_Result>("STDispatchingNote_Client_Trip", tripIDParameter, pcsParameter);
        }

        public virtual ObjectResult<STDispatchingNote_OldDetails_Result> STDispatchingNote_OldDetails(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingNote_OldDetails_Result>("STDispatchingNote_OldDetails", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STDispatchingNote_Pcs_Result> STDispatchingNote_Pcs(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingNote_Pcs_Result>("STDispatchingNote_Pcs", varDispatchingOrderIDParameter);
        }

        public virtual int STDispatchingOrderBreak(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderBreak", dispatchingOrderIDParameter);
        }

        public virtual ObjectResult<Nullable<short>> STDispatchingOrderBreak_New(Nullable<int> dispatchingOrderID, string createdBy)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("STDispatchingOrderBreak_New", dispatchingOrderIDParameter, createdByParameter);
        }

        public virtual int STDispatchingOrderCartonWeightUpdate(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderCartonWeightUpdate", dispatchingOrderIDParameter);
        }

        public virtual int STDispatchingOrderDetailBreak(Nullable<int> dispatchingOrderID, string currentUser)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailBreak", dispatchingOrderIDParameter, currentUserParameter);
        }

        public virtual int STDispatchingOrderDetailBreakCheckAll(Nullable<int> dispatchingLocationID, Nullable<bool> checkBreak)
        {
            var dispatchingLocationIDParameter = dispatchingLocationID.HasValue ?
                new ObjectParameter("DispatchingLocationID", dispatchingLocationID) :
                new ObjectParameter("DispatchingLocationID", typeof(int));

            var checkBreakParameter = checkBreak.HasValue ?
                new ObjectParameter("CheckBreak", checkBreak) :
                new ObjectParameter("CheckBreak", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailBreakCheckAll", dispatchingLocationIDParameter, checkBreakParameter);
        }

        public virtual int STDispatchingOrderDetailBreakLine(Nullable<int> dispatchingOrderDetailID, Nullable<short> newQuantityOfPackages, string currentUser, Nullable<decimal> weightPerPackage, Nullable<short> inners)
        {
            var dispatchingOrderDetailIDParameter = dispatchingOrderDetailID.HasValue ?
                new ObjectParameter("DispatchingOrderDetailID", dispatchingOrderDetailID) :
                new ObjectParameter("DispatchingOrderDetailID", typeof(int));

            var newQuantityOfPackagesParameter = newQuantityOfPackages.HasValue ?
                new ObjectParameter("NewQuantityOfPackages", newQuantityOfPackages) :
                new ObjectParameter("NewQuantityOfPackages", typeof(short));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var weightPerPackageParameter = weightPerPackage.HasValue ?
                new ObjectParameter("WeightPerPackage", weightPerPackage) :
                new ObjectParameter("WeightPerPackage", typeof(decimal));

            var innersParameter = inners.HasValue ?
                new ObjectParameter("Inners", inners) :
                new ObjectParameter("Inners", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailBreakLine", dispatchingOrderDetailIDParameter, newQuantityOfPackagesParameter, currentUserParameter, weightPerPackageParameter, innersParameter);
        }

        public virtual int STDispatchingOrderDetailBreakMakeDO(Nullable<int> dispatchingOrderID, string currentUser, ObjectParameter returnDispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailBreakMakeDO", dispatchingOrderIDParameter, currentUserParameter, returnDispatchingOrderID);
        }

        public virtual int STDispatchingOrderDetailChangePallet(Nullable<int> varDispatchingOrderDetailID, Nullable<int> varOldPalletID, Nullable<short> varOldDispatchingQuantity, Nullable<int> varNewPalletID, string varReceivingOrderNumber)
        {
            var varDispatchingOrderDetailIDParameter = varDispatchingOrderDetailID.HasValue ?
                new ObjectParameter("varDispatchingOrderDetailID", varDispatchingOrderDetailID) :
                new ObjectParameter("varDispatchingOrderDetailID", typeof(int));

            var varOldPalletIDParameter = varOldPalletID.HasValue ?
                new ObjectParameter("varOldPalletID", varOldPalletID) :
                new ObjectParameter("varOldPalletID", typeof(int));

            var varOldDispatchingQuantityParameter = varOldDispatchingQuantity.HasValue ?
                new ObjectParameter("varOldDispatchingQuantity", varOldDispatchingQuantity) :
                new ObjectParameter("varOldDispatchingQuantity", typeof(short));

            var varNewPalletIDParameter = varNewPalletID.HasValue ?
                new ObjectParameter("varNewPalletID", varNewPalletID) :
                new ObjectParameter("varNewPalletID", typeof(int));

            var varReceivingOrderNumberParameter = varReceivingOrderNumber != null ?
                new ObjectParameter("varReceivingOrderNumber", varReceivingOrderNumber) :
                new ObjectParameter("varReceivingOrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailChangePallet", varDispatchingOrderDetailIDParameter, varOldPalletIDParameter, varOldDispatchingQuantityParameter, varNewPalletIDParameter, varReceivingOrderNumberParameter);
        }

        public virtual int STDispatchingOrderDetailDelete(Nullable<int> varDispatchingOrderDetailID, Nullable<short> varDispatchingQuantity)
        {
            var varDispatchingOrderDetailIDParameter = varDispatchingOrderDetailID.HasValue ?
                new ObjectParameter("varDispatchingOrderDetailID", varDispatchingOrderDetailID) :
                new ObjectParameter("varDispatchingOrderDetailID", typeof(int));

            var varDispatchingQuantityParameter = varDispatchingQuantity.HasValue ?
                new ObjectParameter("varDispatchingQuantity", varDispatchingQuantity) :
                new ObjectParameter("varDispatchingQuantity", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailDelete", varDispatchingOrderDetailIDParameter, varDispatchingQuantityParameter);
        }

        public virtual int STDispatchingOrderDetailInsert(Nullable<int> varDispatchingOrderDetailID, Nullable<int> varPalletID, string varReceivingOrderNumber, Nullable<short> varDispatchingQuantity, Nullable<int> varDispatchingLocationID)
        {
            var varDispatchingOrderDetailIDParameter = varDispatchingOrderDetailID.HasValue ?
                new ObjectParameter("varDispatchingOrderDetailID", varDispatchingOrderDetailID) :
                new ObjectParameter("varDispatchingOrderDetailID", typeof(int));

            var varPalletIDParameter = varPalletID.HasValue ?
                new ObjectParameter("varPalletID", varPalletID) :
                new ObjectParameter("varPalletID", typeof(int));

            var varReceivingOrderNumberParameter = varReceivingOrderNumber != null ?
                new ObjectParameter("varReceivingOrderNumber", varReceivingOrderNumber) :
                new ObjectParameter("varReceivingOrderNumber", typeof(string));

            var varDispatchingQuantityParameter = varDispatchingQuantity.HasValue ?
                new ObjectParameter("varDispatchingQuantity", varDispatchingQuantity) :
                new ObjectParameter("varDispatchingQuantity", typeof(short));

            var varDispatchingLocationIDParameter = varDispatchingLocationID.HasValue ?
                new ObjectParameter("varDispatchingLocationID", varDispatchingLocationID) :
                new ObjectParameter("varDispatchingLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailInsert", varDispatchingOrderDetailIDParameter, varPalletIDParameter, varReceivingOrderNumberParameter, varDispatchingQuantityParameter, varDispatchingLocationIDParameter);
        }

        public virtual int STDispatchingOrderDetailUpdateQty(Nullable<int> varDispatchingOrderDetailID, Nullable<short> varDispatchingQuantity)
        {
            var varDispatchingOrderDetailIDParameter = varDispatchingOrderDetailID.HasValue ?
                new ObjectParameter("varDispatchingOrderDetailID", varDispatchingOrderDetailID) :
                new ObjectParameter("varDispatchingOrderDetailID", typeof(int));

            var varDispatchingQuantityParameter = varDispatchingQuantity.HasValue ?
                new ObjectParameter("varDispatchingQuantity", varDispatchingQuantity) :
                new ObjectParameter("varDispatchingQuantity", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderDetailUpdateQty", varDispatchingOrderDetailIDParameter, varDispatchingQuantityParameter);
        }

        public virtual int STDispatchingOrderExportCreateTemp(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderExportCreateTemp", dispatchingOrderIDParameter);
        }

        public virtual int STDispatchingOrderExportDelete(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderExportDelete", dispatchingOrderIDParameter);
        }

        public virtual int STDispatchingOrderExportProcess(Nullable<int> varDispatchingOrderID, string dispatchingOrderRemark, string varUser, Nullable<byte> palletAllocation, Nullable<int> customerID, Nullable<int> existReceivingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var dispatchingOrderRemarkParameter = dispatchingOrderRemark != null ?
                new ObjectParameter("DispatchingOrderRemark", dispatchingOrderRemark) :
                new ObjectParameter("DispatchingOrderRemark", typeof(string));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            var palletAllocationParameter = palletAllocation.HasValue ?
                new ObjectParameter("PalletAllocation", palletAllocation) :
                new ObjectParameter("PalletAllocation", typeof(byte));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var existReceivingOrderIDParameter = existReceivingOrderID.HasValue ?
                new ObjectParameter("existReceivingOrderID", existReceivingOrderID) :
                new ObjectParameter("existReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderExportProcess", varDispatchingOrderIDParameter, dispatchingOrderRemarkParameter, varUserParameter, palletAllocationParameter, customerIDParameter, existReceivingOrderIDParameter);
        }

        public virtual int STDispatchingOrderExportToRO(Nullable<int> varDispatchingOrderID, string dispatchingOrderRemark, string varUser)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var dispatchingOrderRemarkParameter = dispatchingOrderRemark != null ?
                new ObjectParameter("DispatchingOrderRemark", dispatchingOrderRemark) :
                new ObjectParameter("DispatchingOrderRemark", typeof(string));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderExportToRO", varDispatchingOrderIDParameter, dispatchingOrderRemarkParameter, varUserParameter);
        }

        public virtual int STDispatchingOrderUpdateDockNumber(Nullable<int> dispatchingOrderID, string dockNumber)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var dockNumberParameter = dockNumber != null ?
                new ObjectParameter("DockNumber", dockNumber) :
                new ObjectParameter("DockNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingOrderUpdateDockNumber", dispatchingOrderIDParameter, dockNumberParameter);
        }

        public virtual int STDispatchingPalletInsert(string orderNumber, string createdBy, Nullable<short> actualWeight)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var actualWeightParameter = actualWeight.HasValue ?
                new ObjectParameter("ActualWeight", actualWeight) :
                new ObjectParameter("ActualWeight", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingPalletInsert", orderNumberParameter, createdByParameter, actualWeightParameter);
        }

        public virtual ObjectResult<STDispatchingPlanAisleList_Result> STDispatchingPlanAisleList(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingPlanAisleList_Result>("STDispatchingPlanAisleList", dispatchingOrderIDParameter);
        }

        public virtual int STDispatchingPlanManyOrderAddNew(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingPlanManyOrderAddNew", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STDispatchingPlanManyOrderReport_Result> STDispatchingPlanManyOrderReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingPlanManyOrderReport_Result>("STDispatchingPlanManyOrderReport");
        }

        public virtual int STDispatchingPlanManyOrders(string p_str)
        {
            var p_strParameter = p_str != null ?
                new ObjectParameter("p_str", p_str) :
                new ObjectParameter("p_str", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingPlanManyOrders", p_strParameter);
        }

        public virtual ObjectResult<STDispatchingPlanReport_Result> STDispatchingPlanReport(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingPlanReport_Result>("STDispatchingPlanReport", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STDispatchingPlanReportNew_Result> STDispatchingPlanReportNew(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingPlanReportNew_Result>("STDispatchingPlanReportNew", varDispatchingOrderIDParameter);
        }

        public virtual int STDispatchingPlanReportNew_Trip(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingPlanReportNew_Trip", tripIDParameter);
        }

        public virtual ObjectResult<STDispatchingPlanRoomList_Result> STDispatchingPlanRoomList(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingPlanRoomList_Result>("STDispatchingPlanRoomList", dispatchingOrderIDParameter);
        }

        public virtual int STDispatchingProductBreak_bk20160907(Nullable<int> dispatchingProductID, Nullable<short> newTotalPackages, Nullable<short> newPlts, Nullable<decimal> newTotalWeight, Nullable<int> newTotalUnits, string currentUser)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            var newTotalPackagesParameter = newTotalPackages.HasValue ?
                new ObjectParameter("newTotalPackages", newTotalPackages) :
                new ObjectParameter("newTotalPackages", typeof(short));

            var newPltsParameter = newPlts.HasValue ?
                new ObjectParameter("newPlts", newPlts) :
                new ObjectParameter("newPlts", typeof(short));

            var newTotalWeightParameter = newTotalWeight.HasValue ?
                new ObjectParameter("newTotalWeight", newTotalWeight) :
                new ObjectParameter("newTotalWeight", typeof(decimal));

            var newTotalUnitsParameter = newTotalUnits.HasValue ?
                new ObjectParameter("newTotalUnits", newTotalUnits) :
                new ObjectParameter("newTotalUnits", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductBreak_bk20160907", dispatchingProductIDParameter, newTotalPackagesParameter, newPltsParameter, newTotalWeightParameter, newTotalUnitsParameter, currentUserParameter);
        }

        public virtual int STDispatchingProductBreakdown(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductBreakdown", dispatchingProductIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductByStatus_Result> STDispatchingProductByStatus(Nullable<int> customerMainID, Nullable<System.DateTime> orderDate)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductByStatus_Result>("STDispatchingProductByStatus", customerMainIDParameter, orderDateParameter);
        }

        public virtual int STDispatchingProductCheckWeightInners(Nullable<int> dispatchingProductID, ObjectParameter varCountWrong, ObjectParameter varLocationNumber)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductCheckWeightInners", dispatchingProductIDParameter, varCountWrong, varLocationNumber);
        }

        public virtual int STDispatchingProductCombine(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductCombine", dispatchingProductIDParameter);
        }

        public virtual int STDispatchingProductCreateWeightInners(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductCreateWeightInners", dispatchingProductIDParameter);
        }

        public virtual int STDispatchingProductDelete(Nullable<int> varDispatchingProductID, string varUser)
        {
            var varDispatchingProductIDParameter = varDispatchingProductID.HasValue ?
                new ObjectParameter("varDispatchingProductID", varDispatchingProductID) :
                new ObjectParameter("varDispatchingProductID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductDelete", varDispatchingProductIDParameter, varUserParameter);
        }

        public virtual int STDispatchingProductInsert(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethodParameter = dispatchingMethod != null ?
                new ObjectParameter("DispatchingMethod", dispatchingMethod) :
                new ObjectParameter("DispatchingMethod", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsert", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethodParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsert_New(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethodParameter = dispatchingMethod != null ?
                new ObjectParameter("DispatchingMethod", dispatchingMethod) :
                new ObjectParameter("DispatchingMethod", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsert_New", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethodParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsert1RODetails(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, Nullable<int> varReceivingOrderDetailID, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsert1RODetails", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varReceivingOrderDetailIDParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertByLocation(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<short> varPickingQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varPickingQuantityParameter = varPickingQuantity.HasValue ?
                new ObjectParameter("varPickingQuantity", varPickingQuantity) :
                new ObjectParameter("varPickingQuantity", typeof(short));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertByLocation", varDispatchingOrderIDParameter, varProductIDParameter, varPickingQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertByLocation_New(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<short> varPickingQuantity, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varPickingQuantityParameter = varPickingQuantity.HasValue ?
                new ObjectParameter("varPickingQuantity", varPickingQuantity) :
                new ObjectParameter("varPickingQuantity", typeof(short));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertByLocation_New", varDispatchingOrderIDParameter, varProductIDParameter, varPickingQuantityParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertByLocation_Transaction(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<short> varPickingQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varPickingQuantityParameter = varPickingQuantity.HasValue ?
                new ObjectParameter("varPickingQuantity", varPickingQuantity) :
                new ObjectParameter("varPickingQuantity", typeof(short));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertByLocation_Transaction", varDispatchingOrderIDParameter, varProductIDParameter, varPickingQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertByLocationRandomWeight(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<short> varPickingQuantity, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varPickingQuantityParameter = varPickingQuantity.HasValue ?
                new ObjectParameter("varPickingQuantity", varPickingQuantity) :
                new ObjectParameter("varPickingQuantity", typeof(short));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertByLocationRandomWeight", varDispatchingOrderIDParameter, varProductIDParameter, varPickingQuantityParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertByLocationWeightInners(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<short> varPickingQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varPickingQuantityParameter = varPickingQuantity.HasValue ?
                new ObjectParameter("varPickingQuantity", varPickingQuantity) :
                new ObjectParameter("varPickingQuantity", typeof(short));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertByLocationWeightInners", varDispatchingOrderIDParameter, varProductIDParameter, varPickingQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertEDI(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethodParameter = dispatchingMethod != null ?
                new ObjectParameter("DispatchingMethod", dispatchingMethod) :
                new ObjectParameter("DispatchingMethod", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertEDI", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethodParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertPicking(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<short> varTotalQuantity, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(short));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertPicking", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertRandomWeight(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethodParameter = dispatchingMethod != null ?
                new ObjectParameter("DispatchingMethod", dispatchingMethod) :
                new ObjectParameter("DispatchingMethod", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertRandomWeight", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethodParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual int STDispatchingProductInsertReplenishment(Nullable<int> productID, Nullable<int> dispatchingOrderID, ObjectParameter replenishmentQuantity)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertReplenishment", productIDParameter, dispatchingOrderIDParameter, replenishmentQuantity);
        }

        public virtual int STDispatchingProductInsertWeightInners(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethodParameter = dispatchingMethod != null ?
                new ObjectParameter("DispatchingMethod", dispatchingMethod) :
                new ObjectParameter("DispatchingMethod", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductInsertWeightInners", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethodParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductNewAllFilter_Result> STDispatchingProductNewAllFilter(Nullable<int> varCustomerID, string filterCriteria)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var filterCriteriaParameter = filterCriteria != null ?
                new ObjectParameter("FilterCriteria", filterCriteria) :
                new ObjectParameter("FilterCriteria", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductNewAllFilter_Result>("STDispatchingProductNewAllFilter", varCustomerIDParameter, filterCriteriaParameter);
        }

        public virtual ObjectResult<STDispatchingProductNewAllListProducts_Result> STDispatchingProductNewAllListProducts(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductNewAllListProducts_Result>("STDispatchingProductNewAllListProducts", varCustomerIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductNewFilter_Result> STDispatchingProductNewFilter(Nullable<int> customerID, Nullable<byte> flag, string filterCriteria)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var filterCriteriaParameter = filterCriteria != null ?
                new ObjectParameter("FilterCriteria", filterCriteria) :
                new ObjectParameter("FilterCriteria", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductNewFilter_Result>("STDispatchingProductNewFilter", customerIDParameter, flagParameter, filterCriteriaParameter);
        }

        public virtual ObjectResult<STDispatchingProductNewListRO_Result> STDispatchingProductNewListRO(Nullable<bool> flag, Nullable<int> varProductID, Nullable<byte> flagSort)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var flagSortParameter = flagSort.HasValue ?
                new ObjectParameter("FlagSort", flagSort) :
                new ObjectParameter("FlagSort", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductNewListRO_Result>("STDispatchingProductNewListRO", flagParameter, varProductIDParameter, flagSortParameter);
        }

        public virtual int STDispatchingProductsDelete(Nullable<int> varDispatchingProductID, string varUser)
        {
            var varDispatchingProductIDParameter = varDispatchingProductID.HasValue ?
                new ObjectParameter("varDispatchingProductID", varDispatchingProductID) :
                new ObjectParameter("varDispatchingProductID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductsDelete", varDispatchingProductIDParameter, varUserParameter);
        }

        public virtual ObjectResult<STDispatchingProductSelectLocation_ExpDate_Result> STDispatchingProductSelectLocation_ExpDate(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductSelectLocation_ExpDate_Result>("STDispatchingProductSelectLocation_ExpDate", productIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductSelectLocation_Filter_Result> STDispatchingProductSelectLocation_Filter(Nullable<int> productID, Nullable<byte> flag, string filter)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductSelectLocation_Filter_Result>("STDispatchingProductSelectLocation_Filter", productIDParameter, flagParameter, filterParameter);
        }

        public virtual ObjectResult<STDispatchingProductSelectLocation_Location_Result> STDispatchingProductSelectLocation_Location(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductSelectLocation_Location_Result>("STDispatchingProductSelectLocation_Location", productIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductSelectLocation_Order_Result> STDispatchingProductSelectLocation_Order(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductSelectLocation_Order_Result>("STDispatchingProductSelectLocation_Order", productIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductSelectLocation_Pallet_Result> STDispatchingProductSelectLocation_Pallet(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductSelectLocation_Pallet_Result>("STDispatchingProductSelectLocation_Pallet", productIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductSelectLocation_ProDate_Result> STDispatchingProductSelectLocation_ProDate(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductSelectLocation_ProDate_Result>("STDispatchingProductSelectLocation_ProDate", productIDParameter);
        }

        public virtual int STDispatchingProductUpdate(Nullable<int> varDispatchingProductID)
        {
            var varDispatchingProductIDParameter = varDispatchingProductID.HasValue ?
                new ObjectParameter("varDispatchingProductID", varDispatchingProductID) :
                new ObjectParameter("varDispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductUpdate", varDispatchingProductIDParameter);
        }

        public virtual int STDispatchingProductUpdateRemark(Nullable<int> dispatchingProductID, Nullable<bool> flag)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductUpdateRemark", dispatchingProductIDParameter, flagParameter);
        }

        public virtual int STDispatchingProductUpdateWeightInners(Nullable<int> varDispatchingProductID)
        {
            var varDispatchingProductIDParameter = varDispatchingProductID.HasValue ?
                new ObjectParameter("varDispatchingProductID", varDispatchingProductID) :
                new ObjectParameter("varDispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDispatchingProductUpdateWeightInners", varDispatchingProductIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductViewWeightInners_Result> STDispatchingProductViewWeightInners(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductViewWeightInners_Result>("STDispatchingProductViewWeightInners", dispatchingProductIDParameter);
        }

        public virtual ObjectResult<STDoorDetailsFind_Result> STDoorDetailsFind(string dockNumber, Nullable<System.DateTime> dockTime)
        {
            var dockNumberParameter = dockNumber != null ?
                new ObjectParameter("DockNumber", dockNumber) :
                new ObjectParameter("DockNumber", typeof(string));

            var dockTimeParameter = dockTime.HasValue ?
                new ObjectParameter("DockTime", dockTime) :
                new ObjectParameter("DockTime", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDoorDetailsFind_Result>("STDoorDetailsFind", dockNumberParameter, dockTimeParameter);
        }

        public virtual ObjectResult<STEDI_comboCustomerMainID_Result> STEDI_comboCustomerMainID(Nullable<bool> isMain, Nullable<int> storeID)
        {
            var isMainParameter = isMain.HasValue ?
                new ObjectParameter("IsMain", isMain) :
                new ObjectParameter("IsMain", typeof(bool));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEDI_comboCustomerMainID_Result>("STEDI_comboCustomerMainID", isMainParameter, storeIDParameter);
        }

        public virtual int STEDI_DispatchingProductInsert(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod_NONEED, string dispatchingProductRemark, string dispatchingProductReference, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethod_NONEEDParameter = dispatchingMethod_NONEED != null ?
                new ObjectParameter("DispatchingMethod_NONEED", dispatchingMethod_NONEED) :
                new ObjectParameter("DispatchingMethod_NONEED", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_DispatchingProductInsert", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethod_NONEEDParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter);
        }

        public virtual int STEDI_DispatchingProductInsert_ByExpDate(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, Nullable<int> varTotalQuantity, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, string dispatchingMethod_NONEED, string dispatchingProductRemark, string dispatchingProductReference, string userID, Nullable<System.DateTime> exp_Date)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalQuantityParameter = varTotalQuantity.HasValue ?
                new ObjectParameter("varTotalQuantity", varTotalQuantity) :
                new ObjectParameter("varTotalQuantity", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var dispatchingMethod_NONEEDParameter = dispatchingMethod_NONEED != null ?
                new ObjectParameter("DispatchingMethod_NONEED", dispatchingMethod_NONEED) :
                new ObjectParameter("DispatchingMethod_NONEED", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var dispatchingProductReferenceParameter = dispatchingProductReference != null ?
                new ObjectParameter("DispatchingProductReference", dispatchingProductReference) :
                new ObjectParameter("DispatchingProductReference", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var exp_DateParameter = exp_Date.HasValue ?
                new ObjectParameter("Exp_Date", exp_Date) :
                new ObjectParameter("Exp_Date", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_DispatchingProductInsert_ByExpDate", varDispatchingOrderIDParameter, varProductIDParameter, varTotalQuantityParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, dispatchingMethod_NONEEDParameter, dispatchingProductRemarkParameter, dispatchingProductReferenceParameter, userIDParameter, exp_DateParameter);
        }

        public virtual int STEDI_DispatchingProductInsertNoFIFO_bk2017_03_17(Nullable<int> varDispatchingOrderID, Nullable<int> varProductID, string varProductNumber, string varProductName, Nullable<float> varWeightPerPackage, string varDispatchingOrderNumer, string varCondition, Nullable<int> varEDI_OrderDetailID, string dispatchingMethod, string dispatchingProductRemark, string userID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varProductNumberParameter = varProductNumber != null ?
                new ObjectParameter("varProductNumber", varProductNumber) :
                new ObjectParameter("varProductNumber", typeof(string));

            var varProductNameParameter = varProductName != null ?
                new ObjectParameter("varProductName", varProductName) :
                new ObjectParameter("varProductName", typeof(string));

            var varWeightPerPackageParameter = varWeightPerPackage.HasValue ?
                new ObjectParameter("varWeightPerPackage", varWeightPerPackage) :
                new ObjectParameter("varWeightPerPackage", typeof(float));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var varEDI_OrderDetailIDParameter = varEDI_OrderDetailID.HasValue ?
                new ObjectParameter("varEDI_OrderDetailID", varEDI_OrderDetailID) :
                new ObjectParameter("varEDI_OrderDetailID", typeof(int));

            var dispatchingMethodParameter = dispatchingMethod != null ?
                new ObjectParameter("DispatchingMethod", dispatchingMethod) :
                new ObjectParameter("DispatchingMethod", typeof(string));

            var dispatchingProductRemarkParameter = dispatchingProductRemark != null ?
                new ObjectParameter("DispatchingProductRemark", dispatchingProductRemark) :
                new ObjectParameter("DispatchingProductRemark", typeof(string));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_DispatchingProductInsertNoFIFO_bk2017_03_17", varDispatchingOrderIDParameter, varProductIDParameter, varProductNumberParameter, varProductNameParameter, varWeightPerPackageParameter, varDispatchingOrderNumerParameter, varConditionParameter, varEDI_OrderDetailIDParameter, dispatchingMethodParameter, dispatchingProductRemarkParameter, userIDParameter);
        }

        public virtual int STEDI_OrderQuantityUpdate(Nullable<int> eDI_OrderID)
        {
            var eDI_OrderIDParameter = eDI_OrderID.HasValue ?
                new ObjectParameter("EDI_OrderID", eDI_OrderID) :
                new ObjectParameter("EDI_OrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_OrderQuantityUpdate", eDI_OrderIDParameter);
        }

        public virtual int STEDI_ProcessDispatchingOrder(Nullable<int> varEDI_OrderID, string varUser)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProcessDispatchingOrder", varEDI_OrderIDParameter, varUserParameter);
        }

        public virtual int STEDI_ProcessDispatchingOrder_Main(Nullable<int> varEDI_OrderID, string varUser, Nullable<int> varPickSequence)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            var varPickSequenceParameter = varPickSequence.HasValue ?
                new ObjectParameter("varPickSequence", varPickSequence) :
                new ObjectParameter("varPickSequence", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProcessDispatchingOrder_Main", varEDI_OrderIDParameter, varUserParameter, varPickSequenceParameter);
        }

        public virtual int STEDI_ProcessDispatchingOrder_Main_PickSequence(Nullable<int> varEDI_OrderID, string varUser)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProcessDispatchingOrder_Main_PickSequence", varEDI_OrderIDParameter, varUserParameter);
        }

        public virtual int STEDI_ProcessDispatchingOrder_PickSequence(Nullable<int> varEDI_OrderID, string varUser)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProcessDispatchingOrder_PickSequence", varEDI_OrderIDParameter, varUserParameter);
        }

        public virtual int STEDI_ProcessDispatchingOrderAdd(Nullable<int> varEDI_OrderID, string varUser)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProcessDispatchingOrderAdd", varEDI_OrderIDParameter, varUserParameter);
        }

        public virtual int STEDI_ProcessReceivingOrder(Nullable<int> varEDI_OrderID, string varUser)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProcessReceivingOrder", varEDI_OrderIDParameter, varUserParameter);
        }

        public virtual int STEDI_ProductRemainUpdate(Nullable<int> varCustomerMainID)
        {
            var varCustomerMainIDParameter = varCustomerMainID.HasValue ?
                new ObjectParameter("varCustomerMainID", varCustomerMainID) :
                new ObjectParameter("varCustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProductRemainUpdate", varCustomerMainIDParameter);
        }

        public virtual int STEDI_ProductRemainUpdate_PickSequence(Nullable<int> varCustomerMainID)
        {
            var varCustomerMainIDParameter = varCustomerMainID.HasValue ?
                new ObjectParameter("varCustomerMainID", varCustomerMainID) :
                new ObjectParameter("varCustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEDI_ProductRemainUpdate_PickSequence", varCustomerMainIDParameter);
        }

        public virtual ObjectResult<STElectricityConsumption_Result> STElectricityConsumption(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STElectricityConsumption_Result>("STElectricityConsumption", orderNumberParameter);
        }

        public virtual int STElectricityConsumptionUpdate(Nullable<int> otherServiceDetailID)
        {
            var otherServiceDetailIDParameter = otherServiceDetailID.HasValue ?
                new ObjectParameter("OtherServiceDetailID", otherServiceDetailID) :
                new ObjectParameter("OtherServiceDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STElectricityConsumptionUpdate", otherServiceDetailIDParameter);
        }

        public virtual ObjectResult<STEmployeeAll_Result> STEmployeeAll(Nullable<bool> active)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeAll_Result>("STEmployeeAll", activeParameter);
        }

        public virtual ObjectResult<STEmployeeAreasBarcode_Result> STEmployeeAreasBarcode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeAreasBarcode_Result>("STEmployeeAreasBarcode");
        }

        public virtual ObjectResult<STEmployeeCurrentInWharehouse_Result> STEmployeeCurrentInWharehouse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeCurrentInWharehouse_Result>("STEmployeeCurrentInWharehouse");
        }

        public virtual int STEmployeeEvalMonthlyInsert(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeEvalMonthlyInsert", payRollMonthIDParameter);
        }

        public virtual int STEmployeeEvalMonthlyInsert_Supervior(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeEvalMonthlyInsert_Supervior", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STEmployeeEvaluationAnnual_Result> STEmployeeEvaluationAnnual(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<short> payRollYearID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var payRollYearIDParameter = payRollYearID.HasValue ?
                new ObjectParameter("PayRollYearID", payRollYearID) :
                new ObjectParameter("PayRollYearID", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeEvaluationAnnual_Result>("STEmployeeEvaluationAnnual", fromDateParameter, toDateParameter, payRollYearIDParameter);
        }

        public virtual ObjectResult<STEmployeeEventView_Result> STEmployeeEventView(Nullable<System.DateTime> reportDate, Nullable<short> department)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var departmentParameter = department.HasValue ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeEventView_Result>("STEmployeeEventView", reportDateParameter, departmentParameter);
        }

        public virtual ObjectResult<STEmployeeEventViewByEmployee_Result> STEmployeeEventViewByEmployee(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeEventViewByEmployee_Result>("STEmployeeEventViewByEmployee", employeeIDParameter);
        }

        public virtual int STEmployeeHistoriesInsert(Nullable<int> employeeID, string createdBy, string beforeDataChanged, string afterDataChanged, string historyDescription)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var beforeDataChangedParameter = beforeDataChanged != null ?
                new ObjectParameter("BeforeDataChanged", beforeDataChanged) :
                new ObjectParameter("BeforeDataChanged", typeof(string));

            var afterDataChangedParameter = afterDataChanged != null ?
                new ObjectParameter("AfterDataChanged", afterDataChanged) :
                new ObjectParameter("AfterDataChanged", typeof(string));

            var historyDescriptionParameter = historyDescription != null ?
                new ObjectParameter("HistoryDescription", historyDescription) :
                new ObjectParameter("HistoryDescription", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeHistoriesInsert", employeeIDParameter, createdByParameter, beforeDataChangedParameter, afterDataChangedParameter, historyDescriptionParameter);
        }

        public virtual int STEmployeeHistoryAnnualUpdate(Nullable<double> key, Nullable<int> employeeHistoryID, Nullable<double> newAllowance, Nullable<double> newSalary)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(double));

            var employeeHistoryIDParameter = employeeHistoryID.HasValue ?
                new ObjectParameter("EmployeeHistoryID", employeeHistoryID) :
                new ObjectParameter("EmployeeHistoryID", typeof(int));

            var newAllowanceParameter = newAllowance.HasValue ?
                new ObjectParameter("NewAllowance", newAllowance) :
                new ObjectParameter("NewAllowance", typeof(double));

            var newSalaryParameter = newSalary.HasValue ?
                new ObjectParameter("NewSalary", newSalary) :
                new ObjectParameter("NewSalary", typeof(double));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeHistoryAnnualUpdate", keyParameter, employeeHistoryIDParameter, newAllowanceParameter, newSalaryParameter);
        }

        public virtual ObjectResult<STEmployeeHistoryAnnualViewByEmployee_Result> STEmployeeHistoryAnnualViewByEmployee(Nullable<int> employeeID, string key)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeHistoryAnnualViewByEmployee_Result>("STEmployeeHistoryAnnualViewByEmployee", employeeIDParameter, keyParameter);
        }

        public virtual ObjectResult<STEmployeeHistoryViewByEmployee_Result> STEmployeeHistoryViewByEmployee(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeHistoryViewByEmployee_Result>("STEmployeeHistoryViewByEmployee", employeeIDParameter);
        }

        public virtual ObjectResult<STEmployeeLunch_Result> STEmployeeLunch(Nullable<byte> departmentID, Nullable<byte> shift)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(byte));

            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeLunch_Result>("STEmployeeLunch", departmentIDParameter, shiftParameter);
        }

        public virtual ObjectResult<STEmployeeLunchReport_Result> STEmployeeLunchReport(Nullable<byte> shift)
        {
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeLunchReport_Result>("STEmployeeLunchReport", shiftParameter);
        }

        public virtual int STEmployeeLunchSummaryInsert(Nullable<byte> shift)
        {
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeLunchSummaryInsert", shiftParameter);
        }

        public virtual ObjectResult<STEmployeeLunchSummaryReport_Result> STEmployeeLunchSummaryReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeLunchSummaryReport_Result>("STEmployeeLunchSummaryReport");
        }

        public virtual int STEmployeeLunchUpdate(Nullable<int> employeeInOutID)
        {
            var employeeInOutIDParameter = employeeInOutID.HasValue ?
                new ObjectParameter("EmployeeInOutID", employeeInOutID) :
                new ObjectParameter("EmployeeInOutID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeLunchUpdate", employeeInOutIDParameter);
        }

        public virtual int STEmployeeOTEdit(Nullable<int> varEmployeeOTSupervisorID, Nullable<System.DateTime> varDate, Nullable<float> varHourQty, string remarks, string dayStatus, string varUser, Nullable<byte> flag)
        {
            var varEmployeeOTSupervisorIDParameter = varEmployeeOTSupervisorID.HasValue ?
                new ObjectParameter("varEmployeeOTSupervisorID", varEmployeeOTSupervisorID) :
                new ObjectParameter("varEmployeeOTSupervisorID", typeof(int));

            var varDateParameter = varDate.HasValue ?
                new ObjectParameter("varDate", varDate) :
                new ObjectParameter("varDate", typeof(System.DateTime));

            var varHourQtyParameter = varHourQty.HasValue ?
                new ObjectParameter("varHourQty", varHourQty) :
                new ObjectParameter("varHourQty", typeof(float));

            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));

            var dayStatusParameter = dayStatus != null ?
                new ObjectParameter("DayStatus", dayStatus) :
                new ObjectParameter("DayStatus", typeof(string));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTEdit", varEmployeeOTSupervisorIDParameter, varDateParameter, varHourQtyParameter, remarksParameter, dayStatusParameter, varUserParameter, flagParameter);
        }

        public virtual int STEmployeeOTLeaveRemainDay(Nullable<int> employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTLeaveRemainDay", employeeIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeOTRemarkUpdate(Nullable<int> varEmployeeOTSupervisorID, string newRemarks)
        {
            var varEmployeeOTSupervisorIDParameter = varEmployeeOTSupervisorID.HasValue ?
                new ObjectParameter("varEmployeeOTSupervisorID", varEmployeeOTSupervisorID) :
                new ObjectParameter("varEmployeeOTSupervisorID", typeof(int));

            var newRemarksParameter = newRemarks != null ?
                new ObjectParameter("newRemarks", newRemarks) :
                new ObjectParameter("newRemarks", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTRemarkUpdate", varEmployeeOTSupervisorIDParameter, newRemarksParameter);
        }

        public virtual ObjectResult<STEmployeeOTSummaryByDept_Result> STEmployeeOTSummaryByDept(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeOTSummaryByDept_Result>("STEmployeeOTSummaryByDept", fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeOTSundayInsert(Nullable<int> varEmployeeOTSupervisorID, string userName, Nullable<System.DateTime> oTDate, Nullable<int> employeeID)
        {
            var varEmployeeOTSupervisorIDParameter = varEmployeeOTSupervisorID.HasValue ?
                new ObjectParameter("varEmployeeOTSupervisorID", varEmployeeOTSupervisorID) :
                new ObjectParameter("varEmployeeOTSupervisorID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var oTDateParameter = oTDate.HasValue ?
                new ObjectParameter("OTDate", oTDate) :
                new ObjectParameter("OTDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTSundayInsert", varEmployeeOTSupervisorIDParameter, userNameParameter, oTDateParameter, employeeIDParameter);
        }

        public virtual int STEmployeeOTSundayWorkingInsert(Nullable<System.DateTime> reportDate, string userName)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTSundayWorkingInsert", reportDateParameter, userNameParameter);
        }

        public virtual int STEmployeeOTSupervisorsDelete(Nullable<int> employeeOTSupervisorID)
        {
            var employeeOTSupervisorIDParameter = employeeOTSupervisorID.HasValue ?
                new ObjectParameter("EmployeeOTSupervisorID", employeeOTSupervisorID) :
                new ObjectParameter("EmployeeOTSupervisorID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTSupervisorsDelete", employeeOTSupervisorIDParameter);
        }

        public virtual int STEmployeeOTSupervisorsInsert(Nullable<int> employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<float> hourQuantity, string dayStatus, string authorisedBy, string remarks, Nullable<bool> flag)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var hourQuantityParameter = hourQuantity.HasValue ?
                new ObjectParameter("HourQuantity", hourQuantity) :
                new ObjectParameter("HourQuantity", typeof(float));

            var dayStatusParameter = dayStatus != null ?
                new ObjectParameter("DayStatus", dayStatus) :
                new ObjectParameter("DayStatus", typeof(string));

            var authorisedByParameter = authorisedBy != null ?
                new ObjectParameter("AuthorisedBy", authorisedBy) :
                new ObjectParameter("AuthorisedBy", typeof(string));

            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTSupervisorsInsert", employeeIDParameter, fromDateParameter, toDateParameter, hourQuantityParameter, dayStatusParameter, authorisedByParameter, remarksParameter, flagParameter);
        }

        public virtual ObjectResult<STEmployeeOTView_Result> STEmployeeOTView(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userName, Nullable<int> employeeID, Nullable<bool> confirm, Nullable<byte> sortFlag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var confirmParameter = confirm.HasValue ?
                new ObjectParameter("Confirm", confirm) :
                new ObjectParameter("Confirm", typeof(bool));

            var sortFlagParameter = sortFlag.HasValue ?
                new ObjectParameter("SortFlag", sortFlag) :
                new ObjectParameter("SortFlag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeOTView_Result>("STEmployeeOTView", fromDateParameter, toDateParameter, userNameParameter, employeeIDParameter, confirmParameter, sortFlagParameter);
        }

        public virtual int STEmployeeOTViewTmp(Nullable<int> sortFlag)
        {
            var sortFlagParameter = sortFlag.HasValue ?
                new ObjectParameter("SortFlag", sortFlag) :
                new ObjectParameter("SortFlag", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeOTViewTmp", sortFlagParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingAdvanceList_Result> STEmployeeWorkingAdvanceList(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingAdvanceList_Result>("STEmployeeWorkingAdvanceList", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingByJobCrosstapReport_Result> STEmployeeWorkingByJobCrosstapReport(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingByJobCrosstapReport_Result>("STEmployeeWorkingByJobCrosstapReport", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingByJobCrosstapReport_SendEmail_Result> STEmployeeWorkingByJobCrosstapReport_SendEmail(Nullable<int> payRollMonthID, string contractPermanent, string productivity)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var contractPermanentParameter = contractPermanent != null ?
                new ObjectParameter("ContractPermanent", contractPermanent) :
                new ObjectParameter("ContractPermanent", typeof(string));

            var productivityParameter = productivity != null ?
                new ObjectParameter("Productivity", productivity) :
                new ObjectParameter("Productivity", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingByJobCrosstapReport_SendEmail_Result>("STEmployeeWorkingByJobCrosstapReport_SendEmail", payRollMonthIDParameter, contractPermanentParameter, productivityParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingCheckOverTime_Result> STEmployeeWorkingCheckOverTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingCheckOverTime_Result>("STEmployeeWorkingCheckOverTime");
        }

        public virtual ObjectResult<STEmployeeWorkingCheckPercent_Result> STEmployeeWorkingCheckPercent(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingCheckPercent_Result>("STEmployeeWorkingCheckPercent", fromDateParameter, toDateParameter, flagParameter);
        }

        public virtual int STEmployeeWorkingDelete(Nullable<int> employeeWorkingID)
        {
            var employeeWorkingIDParameter = employeeWorkingID.HasValue ?
                new ObjectParameter("EmployeeWorkingID", employeeWorkingID) :
                new ObjectParameter("EmployeeWorkingID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDelete", employeeWorkingIDParameter);
        }

        public virtual int STEmployeeWorkingDelete_OJ_bk2015_05_22(Nullable<int> otherJobID)
        {
            var otherJobIDParameter = otherJobID.HasValue ?
                new ObjectParameter("OtherJobID", otherJobID) :
                new ObjectParameter("OtherJobID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDelete_OJ_bk2015_05_22", otherJobIDParameter);
        }

        public virtual int STEmployeeWorkingDeleteTR(Nullable<int> employeeWorkingID, Nullable<int> truckInOutID)
        {
            var employeeWorkingIDParameter = employeeWorkingID.HasValue ?
                new ObjectParameter("EmployeeWorkingID", employeeWorkingID) :
                new ObjectParameter("EmployeeWorkingID", typeof(int));

            var truckInOutIDParameter = truckInOutID.HasValue ?
                new ObjectParameter("TruckInOutID", truckInOutID) :
                new ObjectParameter("TruckInOutID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDeleteTR", employeeWorkingIDParameter, truckInOutIDParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingDetailByServices_Result> STEmployeeWorkingDetailByServices(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingDetailByServices_Result>("STEmployeeWorkingDetailByServices", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingDetailGeneralHands_Result> STEmployeeWorkingDetailGeneralHands(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingDetailGeneralHands_Result>("STEmployeeWorkingDetailGeneralHands", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingDetailHandlingByEmployee_Result> STEmployeeWorkingDetailHandlingByEmployee(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingDetailHandlingByEmployee_Result>("STEmployeeWorkingDetailHandlingByEmployee", fromDateParameter, toDateParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingDetailOrderWeightByDate_Result> STEmployeeWorkingDetailOrderWeightByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingDetailOrderWeightByDate_Result>("STEmployeeWorkingDetailOrderWeightByDate", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingDetailOverTimes_Result> STEmployeeWorkingDetailOverTimes(Nullable<int> employeeID, Nullable<System.DateTime> orderDate)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingDetailOverTimes_Result>("STEmployeeWorkingDetailOverTimes", employeeIDParameter, orderDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingDetailsByDate_Result> STEmployeeWorkingDetailsByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> level)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingDetailsByDate_Result>("STEmployeeWorkingDetailsByDate", fromDateParameter, toDateParameter, levelParameter);
        }

        public virtual int STEmployeeWorkingDetailsCompensate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> managementLevel, Nullable<float> equivalent1, Nullable<float> equivalent2, Nullable<float> equivalent3)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var managementLevelParameter = managementLevel.HasValue ?
                new ObjectParameter("ManagementLevel", managementLevel) :
                new ObjectParameter("ManagementLevel", typeof(int));

            var equivalent1Parameter = equivalent1.HasValue ?
                new ObjectParameter("equivalent1", equivalent1) :
                new ObjectParameter("equivalent1", typeof(float));

            var equivalent2Parameter = equivalent2.HasValue ?
                new ObjectParameter("Equivalent2", equivalent2) :
                new ObjectParameter("Equivalent2", typeof(float));

            var equivalent3Parameter = equivalent3.HasValue ?
                new ObjectParameter("Equivalent3", equivalent3) :
                new ObjectParameter("Equivalent3", typeof(float));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDetailsCompensate", fromDateParameter, toDateParameter, managementLevelParameter, equivalent1Parameter, equivalent2Parameter, equivalent3Parameter);
        }

        public virtual int STEmployeeWorkingDetailsInventoryController(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDetailsInventoryController", fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeWorkingDetailsOtherJobs(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDetailsOtherJobs", fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeWorkingDetailsTotal(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingDetailsTotal", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingFilter_Result> STEmployeeWorkingFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> managementLevel)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));

            var managementLevelParameter = managementLevel.HasValue ?
                new ObjectParameter("ManagementLevel", managementLevel) :
                new ObjectParameter("ManagementLevel", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingFilter_Result>("STEmployeeWorkingFilter", fromDateParameter, todateParameter, managementLevelParameter);
        }

        public virtual int STEmployeeWorkingHandlingWeightInsert(Nullable<int> payRollMonthID, string createdBy, Nullable<bool> flag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingHandlingWeightInsert", payRollMonthIDParameter, createdByParameter, flagParameter);
        }

        public virtual int STEmployeeWorkingInsert(Nullable<int> employeeID, string remark, Nullable<int> percentage, string orderNumber, Nullable<float> totalWeight, Nullable<short> totalPallets, string createdBy, Nullable<int> totalCartons, Nullable<float> productionQuantityActual)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(int));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var totalWeightParameter = totalWeight.HasValue ?
                new ObjectParameter("TotalWeight", totalWeight) :
                new ObjectParameter("TotalWeight", typeof(float));

            var totalPalletsParameter = totalPallets.HasValue ?
                new ObjectParameter("TotalPallets", totalPallets) :
                new ObjectParameter("TotalPallets", typeof(short));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var totalCartonsParameter = totalCartons.HasValue ?
                new ObjectParameter("TotalCartons", totalCartons) :
                new ObjectParameter("TotalCartons", typeof(int));

            var productionQuantityActualParameter = productionQuantityActual.HasValue ?
                new ObjectParameter("ProductionQuantityActual", productionQuantityActual) :
                new ObjectParameter("ProductionQuantityActual", typeof(float));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingInsert", employeeIDParameter, remarkParameter, percentageParameter, orderNumberParameter, totalWeightParameter, totalPalletsParameter, createdByParameter, totalCartonsParameter, productionQuantityActualParameter);
        }

        public virtual int STEmployeeWorkingInsertIC(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingInsertIC", fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeWorkingInsertTM(Nullable<int> employeeID, string remark, Nullable<int> percentage, string createdBy, string orderNumber, Nullable<System.DateTime> orderDate)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingInsertTM", employeeIDParameter, remarkParameter, percentageParameter, createdByParameter, orderNumberParameter, orderDateParameter);
        }

        public virtual int STEmployeeWorkingInsertWO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingInsertWO", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingInvalidDO_Result> STEmployeeWorkingInvalidDO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingInvalidDO_Result>("STEmployeeWorkingInvalidDO");
        }

        public virtual ObjectResult<STEmployeeWorkingInvalidRO_Result> STEmployeeWorkingInvalidRO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingInvalidRO_Result>("STEmployeeWorkingInvalidRO");
        }

        public virtual int STEmployeeWorkingLabellingInsert(Nullable<int> checkingID)
        {
            var checkingIDParameter = checkingID.HasValue ?
                new ObjectParameter("CheckingID", checkingID) :
                new ObjectParameter("CheckingID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingLabellingInsert", checkingIDParameter);
        }

        public virtual int STEmployeeWorkingLabellingInsertOne(Nullable<int> employeeID, string remark, Nullable<System.DateTime> orderDate, string orderNumber, Nullable<int> productionQuantity)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var productionQuantityParameter = productionQuantity.HasValue ?
                new ObjectParameter("ProductionQuantity", productionQuantity) :
                new ObjectParameter("ProductionQuantity", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingLabellingInsertOne", employeeIDParameter, remarkParameter, orderDateParameter, orderNumberParameter, productionQuantityParameter);
        }

        public virtual int STEmployeeWorkingLWLeaderInsert(string orderNumber, string createdBy, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<System.DateTime> orderDate, Nullable<float> totalQuantity)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));

            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));

            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(float));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingLWLeaderInsert", orderNumberParameter, createdByParameter, startTimeParameter, endTimeParameter, orderDateParameter, totalQuantityParameter);
        }

        public virtual int STEmployeeWorkingLWLeaderUpdate(string orderNumber, Nullable<double> totalQuantity)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(double));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingLWLeaderUpdate", orderNumberParameter, totalQuantityParameter);
        }

        public virtual int STEmployeeWorkingOTConvertInsert(Nullable<int> payRollMonthID, string createdBy)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingOTConvertInsert", payRollMonthIDParameter, createdByParameter);
        }

        public virtual int STEmployeeWorkingOtherJobUpdate(string orderNumber, Nullable<bool> flag)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingOtherJobUpdate", orderNumberParameter, flagParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingPerformanceAnalyzing_Result> STEmployeeWorkingPerformanceAnalyzing(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingPerformanceAnalyzing_Result>("STEmployeeWorkingPerformanceAnalyzing", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingProductionQtyCheck_Result> STEmployeeWorkingProductionQtyCheck(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> flag, Nullable<int> customerMainID, Nullable<byte> flagPercentage)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var flagPercentageParameter = flagPercentage.HasValue ?
                new ObjectParameter("FlagPercentage", flagPercentage) :
                new ObjectParameter("FlagPercentage", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingProductionQtyCheck_Result>("STEmployeeWorkingProductionQtyCheck", fromDateParameter, toDateParameter, flagParameter, customerMainIDParameter, flagPercentageParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingProductionQtySummaryCheck_Result> STEmployeeWorkingProductionQtySummaryCheck(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingProductionQtySummaryCheck_Result>("STEmployeeWorkingProductionQtySummaryCheck", fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeWorkingStartEndTimeNullUpdate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingStartEndTimeNullUpdate", fromDateParameter, toDateParameter);
        }

        public virtual int STEmployeeWorkingUpdate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STEmployeeWorkingUpdate", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingView_Result> STEmployeeWorkingView(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingView_Result>("STEmployeeWorkingView", orderNumberParameter);
        }

        public virtual ObjectResult<STEmployeeWorkingViewByDate_Result> STEmployeeWorkingViewByDate(Nullable<int> employeeID, Nullable<System.DateTime> reportDate)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeWorkingViewByDate_Result>("STEmployeeWorkingViewByDate", employeeIDParameter, reportDateParameter);
        }

        public virtual ObjectResult<STFindLocation_LocationDetails_Result> STFindLocation_LocationDetails(Nullable<byte> flag, Nullable<int> palletID, string palletRemark)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var palletRemarkParameter = palletRemark != null ?
                new ObjectParameter("PalletRemark", palletRemark) :
                new ObjectParameter("PalletRemark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STFindLocation_LocationDetails_Result>("STFindLocation_LocationDetails", flagParameter, palletIDParameter, palletRemarkParameter);
        }

        public virtual ObjectResult<STFreeLocations_Result> STFreeLocations(Nullable<bool> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STFreeLocations_Result>("STFreeLocations", flagParameter);
        }

        public virtual ObjectResult<STFreeLocationsFinal_Result> STFreeLocationsFinal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STFreeLocationsFinal_Result>("STFreeLocationsFinal");
        }

        public virtual int STFreeLocationUpdateTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STFreeLocationUpdateTable");
        }

        public virtual ObjectResult<STGate_ComboWorkerID_Result> STGate_ComboWorkerID(Nullable<int> companyID, Nullable<byte> flag)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ComboWorkerID_Result>("STGate_ComboWorkerID", companyIDParameter, flagParameter);
        }

        public virtual ObjectResult<STGate_Companies_Result> STGate_Companies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_Companies_Result>("STGate_Companies");
        }

        public virtual int STGate_CompanyDelete(Nullable<int> varCompanyID)
        {
            var varCompanyIDParameter = varCompanyID.HasValue ?
                new ObjectParameter("varCompanyID", varCompanyID) :
                new ObjectParameter("varCompanyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_CompanyDelete", varCompanyIDParameter);
        }

        public virtual int STGate_CompanyEdit(Nullable<int> varCompanyID, Nullable<int> varNewCompanyID, string varCustomerNumber, string varCompanyName)
        {
            var varCompanyIDParameter = varCompanyID.HasValue ?
                new ObjectParameter("varCompanyID", varCompanyID) :
                new ObjectParameter("varCompanyID", typeof(int));

            var varNewCompanyIDParameter = varNewCompanyID.HasValue ?
                new ObjectParameter("varNewCompanyID", varNewCompanyID) :
                new ObjectParameter("varNewCompanyID", typeof(int));

            var varCustomerNumberParameter = varCustomerNumber != null ?
                new ObjectParameter("varCustomerNumber", varCustomerNumber) :
                new ObjectParameter("varCustomerNumber", typeof(string));

            var varCompanyNameParameter = varCompanyName != null ?
                new ObjectParameter("varCompanyName", varCompanyName) :
                new ObjectParameter("varCompanyName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_CompanyEdit", varCompanyIDParameter, varNewCompanyIDParameter, varCustomerNumberParameter, varCompanyNameParameter);
        }

        public virtual int STGate_CompanyInsert(Nullable<int> varCompanyID, string varCompanyName, string varAddress, string varPhoneNumber, string varContact, string varCustomerNumber)
        {
            var varCompanyIDParameter = varCompanyID.HasValue ?
                new ObjectParameter("varCompanyID", varCompanyID) :
                new ObjectParameter("varCompanyID", typeof(int));

            var varCompanyNameParameter = varCompanyName != null ?
                new ObjectParameter("varCompanyName", varCompanyName) :
                new ObjectParameter("varCompanyName", typeof(string));

            var varAddressParameter = varAddress != null ?
                new ObjectParameter("varAddress", varAddress) :
                new ObjectParameter("varAddress", typeof(string));

            var varPhoneNumberParameter = varPhoneNumber != null ?
                new ObjectParameter("varPhoneNumber", varPhoneNumber) :
                new ObjectParameter("varPhoneNumber", typeof(string));

            var varContactParameter = varContact != null ?
                new ObjectParameter("varContact", varContact) :
                new ObjectParameter("varContact", typeof(string));

            var varCustomerNumberParameter = varCustomerNumber != null ?
                new ObjectParameter("varCustomerNumber", varCustomerNumber) :
                new ObjectParameter("varCustomerNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_CompanyInsert", varCompanyIDParameter, varCompanyNameParameter, varAddressParameter, varPhoneNumberParameter, varContactParameter, varCustomerNumberParameter);
        }

        public virtual ObjectResult<STGate_ContInOutByCustomer_Result> STGate_ContInOutByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutByCustomer_Result>("STGate_ContInOutByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STGate_ContInOutByDate_Result> STGate_ContInOutByDate(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutByDate_Result>("STGate_ContInOutByDate", reportDateParameter);
        }

        public virtual int STGate_ContInOutEdit(Nullable<int> varContInOutID, string varCustomerName, string varContainerNum, string varReason, string varTruckIn, string varContainerType)
        {
            var varContInOutIDParameter = varContInOutID.HasValue ?
                new ObjectParameter("varContInOutID", varContInOutID) :
                new ObjectParameter("varContInOutID", typeof(int));

            var varCustomerNameParameter = varCustomerName != null ?
                new ObjectParameter("varCustomerName", varCustomerName) :
                new ObjectParameter("varCustomerName", typeof(string));

            var varContainerNumParameter = varContainerNum != null ?
                new ObjectParameter("varContainerNum", varContainerNum) :
                new ObjectParameter("varContainerNum", typeof(string));

            var varReasonParameter = varReason != null ?
                new ObjectParameter("varReason", varReason) :
                new ObjectParameter("varReason", typeof(string));

            var varTruckInParameter = varTruckIn != null ?
                new ObjectParameter("varTruckIn", varTruckIn) :
                new ObjectParameter("varTruckIn", typeof(string));

            var varContainerTypeParameter = varContainerType != null ?
                new ObjectParameter("varContainerType", varContainerType) :
                new ObjectParameter("varContainerType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_ContInOutEdit", varContInOutIDParameter, varCustomerNameParameter, varContainerNumParameter, varReasonParameter, varTruckInParameter, varContainerTypeParameter);
        }

        public virtual ObjectResult<STGate_ContInOutPowerServiceByCustomerReport_Result> STGate_ContInOutPowerServiceByCustomerReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutPowerServiceByCustomerReport_Result>("STGate_ContInOutPowerServiceByCustomerReport", fromDateParameter, toDateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STGate_ContInOutPowerServiceByCustomerReport_New_Result> STGate_ContInOutPowerServiceByCustomerReport_New(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutPowerServiceByCustomerReport_New_Result>("STGate_ContInOutPowerServiceByCustomerReport_New", fromDateParameter, toDateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STGate_ContInOutPowerServiceReport_Result> STGate_ContInOutPowerServiceReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutPowerServiceReport_Result>("STGate_ContInOutPowerServiceReport", fromDateParameter, todateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STGate_ContInOutRecent_Result> STGate_ContInOutRecent(Nullable<int> gate)
        {
            var gateParameter = gate.HasValue ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutRecent_Result>("STGate_ContInOutRecent", gateParameter);
        }

        public virtual ObjectResult<STGate_ContInOutRemain_Result> STGate_ContInOutRemain(Nullable<byte> gateNo)
        {
            var gateNoParameter = gateNo.HasValue ?
                new ObjectParameter("GateNo", gateNo) :
                new ObjectParameter("GateNo", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutRemain_Result>("STGate_ContInOutRemain", gateNoParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToAllBill_Result> STGate_ContInOutToAllBill(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToAllBill_Result>("STGate_ContInOutToAllBill", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToBilled_Result> STGate_ContInOutToBilled(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToBilled_Result>("STGate_ContInOutToBilled", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToCalculated_ByCustomerID_Result> STGate_ContInOutToCalculated_ByCustomerID(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToCalculated_ByCustomerID_Result>("STGate_ContInOutToCalculated_ByCustomerID", fromDateParameter, toDateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToCalculated_ByDate_Result> STGate_ContInOutToCalculated_ByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToCalculated_ByDate_Result>("STGate_ContInOutToCalculated_ByDate", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToCalculated_ByGate_Result> STGate_ContInOutToCalculated_ByGate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToCalculated_ByGate_Result>("STGate_ContInOutToCalculated_ByGate", fromDateParameter, toDateParameter, flagParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToCalculated_ByTruckOrCont_Result> STGate_ContInOutToCalculated_ByTruckOrCont(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToCalculated_ByTruckOrCont_Result>("STGate_ContInOutToCalculated_ByTruckOrCont", fromDateParameter, toDateParameter, flagParameter);
        }

        public virtual int STGate_ContInOutToService_Daily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_ContInOutToService_Daily");
        }

        public virtual int STGate_ContInOutToService_Manual(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_ContInOutToService_Manual", fromDateParameter, toDateParameter, employeeIDParameter, customerIDParameter);
        }

        public virtual ObjectResult<STGate_ContInOutToUnBill_Result> STGate_ContInOutToUnBill(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_ContInOutToUnBill_Result>("STGate_ContInOutToUnBill", fromDateParameter, toDateParameter);
        }

        public virtual int STGate_ContInOutUpdate(Nullable<int> varContInOutID)
        {
            var varContInOutIDParameter = varContInOutID.HasValue ?
                new ObjectParameter("varContInOutID", varContInOutID) :
                new ObjectParameter("varContInOutID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_ContInOutUpdate", varContInOutIDParameter);
        }

        public virtual int STGate_ContInOutUpdate_1(Nullable<int> varContInOutID)
        {
            var varContInOutIDParameter = varContInOutID.HasValue ?
                new ObjectParameter("varContInOutID", varContInOutID) :
                new ObjectParameter("varContInOutID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_ContInOutUpdate_1", varContInOutIDParameter);
        }

        public virtual ObjectResult<STGate_CustomerID_Result> STGate_CustomerID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_CustomerID_Result>("STGate_CustomerID");
        }

        public virtual ObjectResult<STGate_EmployeeBreakTime_Result> STGate_EmployeeBreakTime(Nullable<byte> flag, Nullable<System.DateTime> varDate, Nullable<int> employeeID)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var varDateParameter = varDate.HasValue ?
                new ObjectParameter("varDate", varDate) :
                new ObjectParameter("varDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeBreakTime_Result>("STGate_EmployeeBreakTime", flagParameter, varDateParameter, employeeIDParameter);
        }

        public virtual int STGate_EmployeeBreakTimeDelete(Nullable<int> employeeBreakTimeID)
        {
            var employeeBreakTimeIDParameter = employeeBreakTimeID.HasValue ?
                new ObjectParameter("EmployeeBreakTimeID", employeeBreakTimeID) :
                new ObjectParameter("EmployeeBreakTimeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeBreakTimeDelete", employeeBreakTimeIDParameter);
        }

        public virtual int STGate_EmployeeBreakTimeInsert(Nullable<int> employeeID, string remark)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeBreakTimeInsert", employeeIDParameter, remarkParameter);
        }

        public virtual ObjectResult<STGate_EmployeeInOutByDate_Result> STGate_EmployeeInOutByDate(Nullable<System.DateTime> reportDate, Nullable<byte> sortBy)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutByDate_Result>("STGate_EmployeeInOutByDate", reportDateParameter, sortByParameter);
        }

        public virtual ObjectResult<STGate_EmployeeInOutByDateWMS_Result> STGate_EmployeeInOutByDateWMS(Nullable<System.DateTime> reportDate, Nullable<byte> flag, Nullable<byte> departmentID)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(byte));

            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutByDateWMS_Result>("STGate_EmployeeInOutByDateWMS", reportDateParameter, flagParameter, departmentIDParameter);
        }

        public virtual ObjectResult<STGate_EmployeeInOutByEmployee_Result> STGate_EmployeeInOutByEmployee(Nullable<int> employeeID, Nullable<byte> sortBy)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutByEmployee_Result>("STGate_EmployeeInOutByEmployee", employeeIDParameter, sortByParameter);
        }

        public virtual ObjectResult<STGate_EmployeeInOutByGateNo1_Result> STGate_EmployeeInOutByGateNo1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutByGateNo1_Result>("STGate_EmployeeInOutByGateNo1");
        }

        public virtual ObjectResult<STGate_EmployeeInOutByGateNo2_Result> STGate_EmployeeInOutByGateNo2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutByGateNo2_Result>("STGate_EmployeeInOutByGateNo2");
        }

        public virtual int STGate_EmployeeInOutFingerInsert(Nullable<int> employeeID, Nullable<byte> gate, string createdBy, Nullable<System.DateTime> varTime)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var gateParameter = gate.HasValue ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(byte));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var varTimeParameter = varTime.HasValue ?
                new ObjectParameter("varTime", varTime) :
                new ObjectParameter("varTime", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeInOutFingerInsert", employeeIDParameter, gateParameter, createdByParameter, varTimeParameter);
        }

        public virtual ObjectResult<STGate_EmployeeInOutFingerSelect_Result> STGate_EmployeeInOutFingerSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutFingerSelect_Result>("STGate_EmployeeInOutFingerSelect");
        }

        public virtual ObjectResult<STGate_EmployeeInOutIncorrect_Result> STGate_EmployeeInOutIncorrect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutIncorrect_Result>("STGate_EmployeeInOutIncorrect");
        }

        public virtual int STGate_EmployeeInOutIncorrectUpdate(Nullable<int> employeeInOutID, Nullable<System.DateTime> newTimeOut, string createdBy, string remark, Nullable<System.DateTime> newTimeIn)
        {
            var employeeInOutIDParameter = employeeInOutID.HasValue ?
                new ObjectParameter("EmployeeInOutID", employeeInOutID) :
                new ObjectParameter("EmployeeInOutID", typeof(int));

            var newTimeOutParameter = newTimeOut.HasValue ?
                new ObjectParameter("newTimeOut", newTimeOut) :
                new ObjectParameter("newTimeOut", typeof(System.DateTime));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));

            var newTimeInParameter = newTimeIn.HasValue ?
                new ObjectParameter("newTimeIn", newTimeIn) :
                new ObjectParameter("newTimeIn", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeInOutIncorrectUpdate", employeeInOutIDParameter, newTimeOutParameter, createdByParameter, remarkParameter, newTimeInParameter);
        }

        public virtual int STGate_EmployeeInOutInsert(Nullable<int> employeeID, string bikeNumber, Nullable<byte> gate, Nullable<int> flag)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var bikeNumberParameter = bikeNumber != null ?
                new ObjectParameter("BikeNumber", bikeNumber) :
                new ObjectParameter("BikeNumber", typeof(string));

            var gateParameter = gate.HasValue ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(byte));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeInOutInsert", employeeIDParameter, bikeNumberParameter, gateParameter, flagParameter);
        }

        public virtual int STGate_EmployeeInOutPerformance(Nullable<int> employeeID, ObjectParameter performance)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeInOutPerformance", employeeIDParameter, performance);
        }

        public virtual ObjectResult<STGate_EmployeeInOutRecent_Result> STGate_EmployeeInOutRecent(Nullable<byte> sortBy)
        {
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutRecent_Result>("STGate_EmployeeInOutRecent", sortByParameter);
        }

        public virtual ObjectResult<STGate_EmployeeInOutRemain_Result> STGate_EmployeeInOutRemain(Nullable<byte> sortBy)
        {
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_EmployeeInOutRemain_Result>("STGate_EmployeeInOutRemain", sortByParameter);
        }

        public virtual int STGate_EmployeeInOutRemarkUpdate(Nullable<int> payrollDetailID, string payrollRemark)
        {
            var payrollDetailIDParameter = payrollDetailID.HasValue ?
                new ObjectParameter("PayrollDetailID", payrollDetailID) :
                new ObjectParameter("PayrollDetailID", typeof(int));

            var payrollRemarkParameter = payrollRemark != null ?
                new ObjectParameter("PayrollRemark", payrollRemark) :
                new ObjectParameter("PayrollRemark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_EmployeeInOutRemarkUpdate", payrollDetailIDParameter, payrollRemarkParameter);
        }

        public virtual ObjectResult<STGate_HistoryContTruckInOut_Result> STGate_HistoryContTruckInOut()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_HistoryContTruckInOut_Result>("STGate_HistoryContTruckInOut");
        }

        public virtual ObjectResult<STGate_METROComboTruckInOut_Result> STGate_METROComboTruckInOut()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_METROComboTruckInOut_Result>("STGate_METROComboTruckInOut");
        }

        public virtual ObjectResult<STGate_METROComboTruckInOutToday_Result> STGate_METROComboTruckInOutToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_METROComboTruckInOutToday_Result>("STGate_METROComboTruckInOutToday");
        }

        public virtual int STGate_METROComboTruckInOutUpdate(string orderNumber, Nullable<int> truckInOutID, string quantityOut, string userCheckOut)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var truckInOutIDParameter = truckInOutID.HasValue ?
                new ObjectParameter("TruckInOutID", truckInOutID) :
                new ObjectParameter("TruckInOutID", typeof(int));

            var quantityOutParameter = quantityOut != null ?
                new ObjectParameter("QuantityOut", quantityOut) :
                new ObjectParameter("QuantityOut", typeof(string));

            var userCheckOutParameter = userCheckOut != null ?
                new ObjectParameter("UserCheckOut", userCheckOut) :
                new ObjectParameter("UserCheckOut", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_METROComboTruckInOutUpdate", orderNumberParameter, truckInOutIDParameter, quantityOutParameter, userCheckOutParameter);
        }

        public virtual ObjectResult<STGate_METROTruckInOutFDTD_Result> STGate_METROTruckInOutFDTD(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_METROTruckInOutFDTD_Result>("STGate_METROTruckInOutFDTD", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_METROTruckInOutRemain_Result> STGate_METROTruckInOutRemain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_METROTruckInOutRemain_Result>("STGate_METROTruckInOutRemain");
        }

        public virtual int STGate_METROTruckInOutUpdate(string orderNumber, Nullable<int> vehicleInOutID, string quantityOut, string userCheckOut, string customerName, Nullable<System.DateTime> startWorkingTime, Nullable<System.DateTime> endWorkingTime)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var vehicleInOutIDParameter = vehicleInOutID.HasValue ?
                new ObjectParameter("VehicleInOutID", vehicleInOutID) :
                new ObjectParameter("VehicleInOutID", typeof(int));

            var quantityOutParameter = quantityOut != null ?
                new ObjectParameter("QuantityOut", quantityOut) :
                new ObjectParameter("QuantityOut", typeof(string));

            var userCheckOutParameter = userCheckOut != null ?
                new ObjectParameter("UserCheckOut", userCheckOut) :
                new ObjectParameter("UserCheckOut", typeof(string));

            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));

            var startWorkingTimeParameter = startWorkingTime.HasValue ?
                new ObjectParameter("StartWorkingTime", startWorkingTime) :
                new ObjectParameter("StartWorkingTime", typeof(System.DateTime));

            var endWorkingTimeParameter = endWorkingTime.HasValue ?
                new ObjectParameter("EndWorkingTime", endWorkingTime) :
                new ObjectParameter("EndWorkingTime", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_METROTruckInOutUpdate", orderNumberParameter, vehicleInOutIDParameter, quantityOutParameter, userCheckOutParameter, customerNameParameter, startWorkingTimeParameter, endWorkingTimeParameter);
        }

        public virtual ObjectResult<STGate_PropertyInOut_Result> STGate_PropertyInOut(Nullable<int> propertyID)
        {
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("PropertyID", propertyID) :
                new ObjectParameter("PropertyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_PropertyInOut_Result>("STGate_PropertyInOut", propertyIDParameter);
        }

        public virtual ObjectResult<STGate_PropertyInOutAll_Result> STGate_PropertyInOutAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_PropertyInOutAll_Result>("STGate_PropertyInOutAll");
        }

        public virtual ObjectResult<STGate_PropertyInOutByCustomerID_Result> STGate_PropertyInOutByCustomerID(Nullable<int> customerID, Nullable<System.DateTime> varDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var varDateParameter = varDate.HasValue ?
                new ObjectParameter("varDate", varDate) :
                new ObjectParameter("varDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_PropertyInOutByCustomerID_Result>("STGate_PropertyInOutByCustomerID", customerIDParameter, varDateParameter);
        }

        public virtual ObjectResult<STGate_PropertyInOutByDate_Result> STGate_PropertyInOutByDate(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_PropertyInOutByDate_Result>("STGate_PropertyInOutByDate", reportDateParameter);
        }

        public virtual ObjectResult<STGate_PropertyMovementReport_Result> STGate_PropertyMovementReport(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_PropertyMovementReport_Result>("STGate_PropertyMovementReport", customerIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STGate_PropertyReview_Result> STGate_PropertyReview(Nullable<int> varPropertyID, Nullable<int> varCustomerID)
        {
            var varPropertyIDParameter = varPropertyID.HasValue ?
                new ObjectParameter("varPropertyID", varPropertyID) :
                new ObjectParameter("varPropertyID", typeof(int));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_PropertyReview_Result>("STGate_PropertyReview", varPropertyIDParameter, varCustomerIDParameter);
        }

        public virtual int STGate_tmpEmployeeInOutFingerInsert(Nullable<int> employeeID, Nullable<System.DateTime> varTime, Nullable<byte> gate, string createdBy)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var varTimeParameter = varTime.HasValue ?
                new ObjectParameter("varTime", varTime) :
                new ObjectParameter("varTime", typeof(System.DateTime));

            var gateParameter = gate.HasValue ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(byte));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_tmpEmployeeInOutFingerInsert", employeeIDParameter, varTimeParameter, gateParameter, createdByParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByDate_Result> STGate_TruckInOutByDate(string reportDate)
        {
            var reportDateParameter = reportDate != null ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByDate_Result>("STGate_TruckInOutByDate", reportDateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByDate_Metro_Result> STGate_TruckInOutByDate_Metro(string reportDate)
        {
            var reportDateParameter = reportDate != null ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByDate_Metro_Result>("STGate_TruckInOutByDate_Metro", reportDateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByGateNo_Result> STGate_TruckInOutByGateNo(string fromDate, string todate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByGateNo_Result>("STGate_TruckInOutByGateNo", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByGateNo1_Result> STGate_TruckInOutByGateNo1(string fromDate, string todate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByGateNo1_Result>("STGate_TruckInOutByGateNo1", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByGateNo1_Dock_bk20170218_Result> STGate_TruckInOutByGateNo1_Dock_bk20170218(string fromDate, string todate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByGateNo1_Dock_bk20170218_Result>("STGate_TruckInOutByGateNo1_Dock_bk20170218", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByGateNo2_Result> STGate_TruckInOutByGateNo2(string fromDate, string todate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByGateNo2_Result>("STGate_TruckInOutByGateNo2", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutByGateNo2_Dock_bk20170218_Result> STGate_TruckInOutByGateNo2_Dock_bk20170218(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutByGateNo2_Dock_bk20170218_Result>("STGate_TruckInOutByGateNo2_Dock_bk20170218", fromdateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutFDTD_Result> STGate_TruckInOutFDTD(string fromDate, string todate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutFDTD_Result>("STGate_TruckInOutFDTD", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutFDTDByCustomer_Result> STGate_TruckInOutFDTDByCustomer(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string customerName)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutFDTDByCustomer_Result>("STGate_TruckInOutFDTDByCustomer", fromDateParameter, todateParameter, customerNameParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutFDTDSortByCustomer_Result> STGate_TruckInOutFDTDSortByCustomer(string fromDate, string todate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutFDTDSortByCustomer_Result>("STGate_TruckInOutFDTDSortByCustomer", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutPower_Result> STGate_TruckInOutPower()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutPower_Result>("STGate_TruckInOutPower");
        }

        public virtual ObjectResult<STGate_TruckInOutRecent_Result> STGate_TruckInOutRecent(Nullable<byte> gate)
        {
            var gateParameter = gate.HasValue ?
                new ObjectParameter("Gate", gate) :
                new ObjectParameter("Gate", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutRecent_Result>("STGate_TruckInOutRecent", gateParameter);
        }

        public virtual ObjectResult<STGate_TruckInOutRemain_Result> STGate_TruckInOutRemain(Nullable<byte> gateNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var gateNoParameter = gateNo.HasValue ?
                new ObjectParameter("GateNo", gateNo) :
                new ObjectParameter("GateNo", typeof(byte));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_TruckInOutRemain_Result>("STGate_TruckInOutRemain", gateNoParameter, fromDateParameter, todateParameter);
        }

        public virtual int STGate_TruckInsert(string truckNum, string driverName, Nullable<float> loadingCapacity)
        {
            var truckNumParameter = truckNum != null ?
                new ObjectParameter("TruckNum", truckNum) :
                new ObjectParameter("TruckNum", typeof(string));

            var driverNameParameter = driverName != null ?
                new ObjectParameter("DriverName", driverName) :
                new ObjectParameter("DriverName", typeof(string));

            var loadingCapacityParameter = loadingCapacity.HasValue ?
                new ObjectParameter("LoadingCapacity", loadingCapacity) :
                new ObjectParameter("LoadingCapacity", typeof(float));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_TruckInsert", truckNumParameter, driverNameParameter, loadingCapacityParameter);
        }

        public virtual ObjectResult<STGate_VehicleBound_Result> STGate_VehicleBound(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleBound_Result>("STGate_VehicleBound", orderNumberParameter);
        }

        public virtual ObjectResult<STGate_VehicleInOut_Find_Result> STGate_VehicleInOut_Find(string truckNum)
        {
            var truckNumParameter = truckNum != null ?
                new ObjectParameter("TruckNum", truckNum) :
                new ObjectParameter("TruckNum", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleInOut_Find_Result>("STGate_VehicleInOut_Find", truckNumParameter);
        }

        public virtual ObjectResult<STGate_VehicleInOutRemain_Result> STGate_VehicleInOutRemain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleInOutRemain_Result>("STGate_VehicleInOutRemain");
        }

        public virtual ObjectResult<STGate_VehicleInOutRemainByGate_Result> STGate_VehicleInOutRemainByGate(Nullable<byte> gateNo)
        {
            var gateNoParameter = gateNo.HasValue ?
                new ObjectParameter("GateNo", gateNo) :
                new ObjectParameter("GateNo", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleInOutRemainByGate_Result>("STGate_VehicleInOutRemainByGate", gateNoParameter);
        }

        public virtual ObjectResult<STGate_VehicleInOutToday_Result> STGate_VehicleInOutToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleInOutToday_Result>("STGate_VehicleInOutToday");
        }

        public virtual int STGate_VehicleInOutUpdateAll(string vehicleType, string orderNumber, Nullable<int> vehicleInOutID, string quantityOut, string userCheckOut, Nullable<int> customerID, string customerName, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string reason, Nullable<System.DateTime> startWorkingTime, Nullable<System.DateTime> endWorkingTime, string sealNumber, string dockNumber)
        {
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var vehicleInOutIDParameter = vehicleInOutID.HasValue ?
                new ObjectParameter("VehicleInOutID", vehicleInOutID) :
                new ObjectParameter("VehicleInOutID", typeof(int));

            var quantityOutParameter = quantityOut != null ?
                new ObjectParameter("QuantityOut", quantityOut) :
                new ObjectParameter("QuantityOut", typeof(string));

            var userCheckOutParameter = userCheckOut != null ?
                new ObjectParameter("UserCheckOut", userCheckOut) :
                new ObjectParameter("UserCheckOut", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));

            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));

            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));

            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));

            var startWorkingTimeParameter = startWorkingTime.HasValue ?
                new ObjectParameter("StartWorkingTime", startWorkingTime) :
                new ObjectParameter("StartWorkingTime", typeof(System.DateTime));

            var endWorkingTimeParameter = endWorkingTime.HasValue ?
                new ObjectParameter("EndWorkingTime", endWorkingTime) :
                new ObjectParameter("EndWorkingTime", typeof(System.DateTime));

            var sealNumberParameter = sealNumber != null ?
                new ObjectParameter("SealNumber", sealNumber) :
                new ObjectParameter("SealNumber", typeof(string));

            var dockNumberParameter = dockNumber != null ?
                new ObjectParameter("DockNumber", dockNumber) :
                new ObjectParameter("DockNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_VehicleInOutUpdateAll", vehicleTypeParameter, orderNumberParameter, vehicleInOutIDParameter, quantityOutParameter, userCheckOutParameter, customerIDParameter, customerNameParameter, startTimeParameter, endTimeParameter, reasonParameter, startWorkingTimeParameter, endWorkingTimeParameter, sealNumberParameter, dockNumberParameter);
        }

        public virtual int STGate_VehicleInOutUpdateOrderNumber(string vehicleType, string orderNumber, Nullable<int> vehicleInOutID, string quantityOut, string userCheckOut, Nullable<int> customerID, string customerName, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string reason, Nullable<System.DateTime> startWorkingTime, Nullable<System.DateTime> endWorkingTime)
        {
            var vehicleTypeParameter = vehicleType != null ?
                new ObjectParameter("VehicleType", vehicleType) :
                new ObjectParameter("VehicleType", typeof(string));

            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var vehicleInOutIDParameter = vehicleInOutID.HasValue ?
                new ObjectParameter("VehicleInOutID", vehicleInOutID) :
                new ObjectParameter("VehicleInOutID", typeof(int));

            var quantityOutParameter = quantityOut != null ?
                new ObjectParameter("QuantityOut", quantityOut) :
                new ObjectParameter("QuantityOut", typeof(string));

            var userCheckOutParameter = userCheckOut != null ?
                new ObjectParameter("UserCheckOut", userCheckOut) :
                new ObjectParameter("UserCheckOut", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));

            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));

            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));

            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));

            var startWorkingTimeParameter = startWorkingTime.HasValue ?
                new ObjectParameter("StartWorkingTime", startWorkingTime) :
                new ObjectParameter("StartWorkingTime", typeof(System.DateTime));

            var endWorkingTimeParameter = endWorkingTime.HasValue ?
                new ObjectParameter("EndWorkingTime", endWorkingTime) :
                new ObjectParameter("EndWorkingTime", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_VehicleInOutUpdateOrderNumber", vehicleTypeParameter, orderNumberParameter, vehicleInOutIDParameter, quantityOutParameter, userCheckOutParameter, customerIDParameter, customerNameParameter, startTimeParameter, endTimeParameter, reasonParameter, startWorkingTimeParameter, endWorkingTimeParameter);
        }

        public virtual ObjectResult<STGate_VehicleStartTimeChecking_Result> STGate_VehicleStartTimeChecking(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_VehicleStartTimeChecking_Result>("STGate_VehicleStartTimeChecking", orderNumberParameter);
        }

        public virtual ObjectResult<STGate_WorkerInOutByDate_Result> STGate_WorkerInOutByDate(string reportDate)
        {
            var reportDateParameter = reportDate != null ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerInOutByDate_Result>("STGate_WorkerInOutByDate", reportDateParameter);
        }

        public virtual ObjectResult<STGate_WorkerInOutRecent_Result> STGate_WorkerInOutRecent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerInOutRecent_Result>("STGate_WorkerInOutRecent");
        }

        public virtual ObjectResult<STGate_WorkerInOutRemain_Result> STGate_WorkerInOutRemain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerInOutRemain_Result>("STGate_WorkerInOutRemain");
        }

        public virtual int STGate_WorkerInsert(Nullable<int> workerID, string workerName, Nullable<int> companyID, string cardID, string comment, string category, string cardType)
        {
            var workerIDParameter = workerID.HasValue ?
                new ObjectParameter("WorkerID", workerID) :
                new ObjectParameter("WorkerID", typeof(int));

            var workerNameParameter = workerName != null ?
                new ObjectParameter("WorkerName", workerName) :
                new ObjectParameter("WorkerName", typeof(string));

            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));

            var cardIDParameter = cardID != null ?
                new ObjectParameter("CardID", cardID) :
                new ObjectParameter("CardID", typeof(string));

            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));

            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));

            var cardTypeParameter = cardType != null ?
                new ObjectParameter("CardType", cardType) :
                new ObjectParameter("CardType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_WorkerInsert", workerIDParameter, workerNameParameter, companyIDParameter, cardIDParameter, commentParameter, categoryParameter, cardTypeParameter);
        }

        public virtual int STGate_WorkerLaborSafetyTrainingInsert(Nullable<int> workerID, string laborSafetyTrainBy, Nullable<System.DateTime> laborSafetyTrainDate, string description)
        {
            var workerIDParameter = workerID.HasValue ?
                new ObjectParameter("WorkerID", workerID) :
                new ObjectParameter("WorkerID", typeof(int));

            var laborSafetyTrainByParameter = laborSafetyTrainBy != null ?
                new ObjectParameter("LaborSafetyTrainBy", laborSafetyTrainBy) :
                new ObjectParameter("LaborSafetyTrainBy", typeof(string));

            var laborSafetyTrainDateParameter = laborSafetyTrainDate.HasValue ?
                new ObjectParameter("LaborSafetyTrainDate", laborSafetyTrainDate) :
                new ObjectParameter("LaborSafetyTrainDate", typeof(System.DateTime));

            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGate_WorkerLaborSafetyTrainingInsert", workerIDParameter, laborSafetyTrainByParameter, laborSafetyTrainDateParameter, descriptionParameter);
        }

        public virtual ObjectResult<STGate_WorkerRegularAll_Result> STGate_WorkerRegularAll(Nullable<int> companyID, string cardID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));

            var cardIDParameter = cardID != null ?
                new ObjectParameter("CardID", cardID) :
                new ObjectParameter("CardID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerRegularAll_Result>("STGate_WorkerRegularAll", companyIDParameter, cardIDParameter);
        }

        public virtual ObjectResult<STGate_WorkerRegularInOutByDate_Result> STGate_WorkerRegularInOutByDate(Nullable<System.DateTime> varDateIn, Nullable<byte> storeID)
        {
            var varDateInParameter = varDateIn.HasValue ?
                new ObjectParameter("varDateIn", varDateIn) :
                new ObjectParameter("varDateIn", typeof(System.DateTime));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerRegularInOutByDate_Result>("STGate_WorkerRegularInOutByDate", varDateInParameter, storeIDParameter);
        }

        public virtual ObjectResult<STGate_WorkerRegularInOutByWorkerID_Result> STGate_WorkerRegularInOutByWorkerID(Nullable<int> workerID, Nullable<byte> storeID)
        {
            var workerIDParameter = workerID.HasValue ?
                new ObjectParameter("WorkerID", workerID) :
                new ObjectParameter("WorkerID", typeof(int));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerRegularInOutByWorkerID_Result>("STGate_WorkerRegularInOutByWorkerID", workerIDParameter, storeIDParameter);
        }

        public virtual ObjectResult<STGate_WorkerRegularInOutRecent_Result> STGate_WorkerRegularInOutRecent(Nullable<byte> storeID)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerRegularInOutRecent_Result>("STGate_WorkerRegularInOutRecent", storeIDParameter);
        }

        public virtual ObjectResult<STGate_WorkerRegularInOutRemain_Result> STGate_WorkerRegularInOutRemain(Nullable<byte> storeID)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerRegularInOutRemain_Result>("STGate_WorkerRegularInOutRemain", storeIDParameter);
        }

        public virtual ObjectResult<STGate_WorkerRegularReport_Result> STGate_WorkerRegularReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STGate_WorkerRegularReport_Result>("STGate_WorkerRegularReport");
        }

        public virtual int STGetTime(Nullable<int> zzz, ObjectParameter varGetTime)
        {
            var zzzParameter = zzz.HasValue ?
                new ObjectParameter("zzz", zzz) :
                new ObjectParameter("zzz", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGetTime", zzzParameter, varGetTime);
        }

        public virtual int STGoodsReceivedInsert(Nullable<int> purchasingOrderID, string createdBy)
        {
            var purchasingOrderIDParameter = purchasingOrderID.HasValue ?
                new ObjectParameter("PurchasingOrderID", purchasingOrderID) :
                new ObjectParameter("PurchasingOrderID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STGoodsReceivedInsert", purchasingOrderIDParameter, createdByParameter);
        }

        public virtual ObjectResult<STIndependentCheckDODate_Result> STIndependentCheckDODate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STIndependentCheckDODate_Result>("STIndependentCheckDODate");
        }

        public virtual ObjectResult<STIndependentCheckReport_Result> STIndependentCheckReport(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STIndependentCheckReport_Result>("STIndependentCheckReport", varFromDateParameter, varTodateParameter);
        }

        public virtual ObjectResult<STInOutView_Booking_DO_Result> STInOutView_Booking_DO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userName)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutView_Booking_DO_Result>("STInOutView_Booking_DO", fromDateParameter, toDateParameter, userNameParameter);
        }

        public virtual ObjectResult<STInOutView_Details_Result> STInOutView_Details(Nullable<int> orderID, Nullable<bool> flag)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutView_Details_Result>("STInOutView_Details", orderIDParameter, flagParameter);
        }

        public virtual ObjectResult<STInOutView_Details_Hide_Result> STInOutView_Details_Hide(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutView_Details_Hide_Result>("STInOutView_Details_Hide", productIDParameter);
        }

        public virtual ObjectResult<STInOutViewAllRODO_Result> STInOutViewAllRODO(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewAllRODO_Result>("STInOutViewAllRODO", reportDateParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Result> STInOutViewDO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Result>("STInOutViewDO", fromDateParameter, toDateParameter, varCustomerIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Main_Result> STInOutViewDO_Main(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Main_Result>("STInOutViewDO_Main", fromDateParameter, toDateParameter, varCustomerIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Main_Empty_Result> STInOutViewDO_Main_Empty(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Main_Empty_Result>("STInOutViewDO_Main_Empty", fromDateParameter, toDateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Main_Time_Result> STInOutViewDO_Main_Time(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID, Nullable<System.DateTime> fromTime, Nullable<System.DateTime> toTime)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var fromTimeParameter = fromTime.HasValue ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(System.DateTime));

            var toTimeParameter = toTime.HasValue ?
                new ObjectParameter("ToTime", toTime) :
                new ObjectParameter("ToTime", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Main_Time_Result>("STInOutViewDO_Main_Time", fromDateParameter, toDateParameter, varCustomerIDParameter, fromTimeParameter, toTimeParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Main_Unfinished_Result> STInOutViewDO_Main_Unfinished(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Main_Unfinished_Result>("STInOutViewDO_Main_Unfinished", fromDateParameter, toDateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Me_Result> STInOutViewDO_Me(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Me_Result>("STInOutViewDO_Me", fromDateParameter, toDateParameter, employeeIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_Me_0_Result> STInOutViewDO_Me_0(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_Me_0_Result>("STInOutViewDO_Me_0", fromDateParameter, toDateParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_R_Result> STInOutViewDO_R(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string roomID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_R_Result>("STInOutViewDO_R", fromDateParameter, toDateParameter, roomIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewDO_T_Result> STInOutViewDO_T(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_T_Result>("STInOutViewDO_T", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STInOutViewDO_W_Result> STInOutViewDO_W(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> warehouseID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewDO_W_Result>("STInOutViewDO_W", fromDateParameter, toDateParameter, warehouseIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewRO_Result> STInOutViewRO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_Result>("STInOutViewRO", fromDateParameter, toDateParameter, varCustomerIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewRO_Carton_Result> STInOutViewRO_Carton(Nullable<int> dataRange, Nullable<bool> flag)
        {
            var dataRangeParameter = dataRange.HasValue ?
                new ObjectParameter("DataRange", dataRange) :
                new ObjectParameter("DataRange", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_Carton_Result>("STInOutViewRO_Carton", dataRangeParameter, flagParameter);
        }

        public virtual ObjectResult<STInOutViewRO_Main_Result> STInOutViewRO_Main(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varCustomerID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_Main_Result>("STInOutViewRO_Main", fromDateParameter, toDateParameter, varCustomerIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewRO_Me_Result> STInOutViewRO_Me(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_Me_Result>("STInOutViewRO_Me", fromDateParameter, toDateParameter, employeeIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewRO_Me_0_Result> STInOutViewRO_Me_0(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_Me_0_Result>("STInOutViewRO_Me_0", fromDateParameter, toDateParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STInOutViewRO_R_Result> STInOutViewRO_R(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string roomID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_R_Result>("STInOutViewRO_R", fromDateParameter, toDateParameter, roomIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewRO_T_Result> STInOutViewRO_T(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_T_Result>("STInOutViewRO_T", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STInOutViewRO_W_Result> STInOutViewRO_W(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> warehouseID, Nullable<int> varStoreID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewRO_W_Result>("STInOutViewRO_W", fromDateParameter, toDateParameter, warehouseIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STInOutViewSummary_Result> STInOutViewSummary(Nullable<System.DateTime> varFromdate, Nullable<System.DateTime> varTodate)
        {
            var varFromdateParameter = varFromdate.HasValue ?
                new ObjectParameter("varFromdate", varFromdate) :
                new ObjectParameter("varFromdate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STInOutViewSummary_Result>("STInOutViewSummary", varFromdateParameter, varTodateParameter);
        }

        public virtual int STInventoryCheckingReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STInventoryCheckingReport", fromDateParameter, toDateParameter);
        }

        public virtual int STIsCurrentPayRollMonth(Nullable<System.DateTime> otherJobDate, ObjectParameter isCurrent)
        {
            var otherJobDateParameter = otherJobDate.HasValue ?
                new ObjectParameter("OtherJobDate", otherJobDate) :
                new ObjectParameter("OtherJobDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STIsCurrentPayRollMonth", otherJobDateParameter, isCurrent);
        }

        public virtual int STIsDepartment(string loginName, ObjectParameter departmentID)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STIsDepartment", loginNameParameter, departmentID);
        }

        public virtual ObjectResult<STISOQuantityOfRecordRODO_Result> STISOQuantityOfRecordRODO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STISOQuantityOfRecordRODO_Result>("STISOQuantityOfRecordRODO", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STKPIDataEmployees_tmp_Result> STKPIDataEmployees_tmp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STKPIDataEmployees_tmp_Result>("STKPIDataEmployees_tmp");
        }

        public virtual ObjectResult<STKPIDataSummary_Result> STKPIDataSummary(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STKPIDataSummary_Result>("STKPIDataSummary", fromDateParameter, toDateParameter);
        }

        public virtual int STKPIRecordingInsert(Nullable<int> payRollMonthID, Nullable<bool> flag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STKPIRecordingInsert", payRollMonthIDParameter, flagParameter);
        }

        public virtual ObjectResult<STKPIRecordingReport_Result> STKPIRecordingReport(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STKPIRecordingReport_Result>("STKPIRecordingReport", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STLabel_Result> STLabel(Nullable<int> varReceivingOrderDetailID)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabel_Result>("STLabel", varReceivingOrderDetailIDParameter);
        }

        public virtual ObjectResult<STLabel1Label_Result> STLabel1Label(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabel1Label_Result>("STLabel1Label", palletIDParameter);
        }

        public virtual ObjectResult<STLabel1Location_Result> STLabel1Location(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabel1Location_Result>("STLabel1Location", locationIDParameter);
        }

        public virtual ObjectResult<STLabel1ReceivingOrderDetail_Result> STLabel1ReceivingOrderDetail(Nullable<int> varReceivingOrderDetailID)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabel1ReceivingOrderDetail_Result>("STLabel1ReceivingOrderDetail", varReceivingOrderDetailIDParameter);
        }

        public virtual ObjectResult<STLabel1RO_Result> STLabel1RO(Nullable<int> varReceivingOrderID)
        {
            var varReceivingOrderIDParameter = varReceivingOrderID.HasValue ?
                new ObjectParameter("varReceivingOrderID", varReceivingOrderID) :
                new ObjectParameter("varReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabel1RO_Result>("STLabel1RO", varReceivingOrderIDParameter);
        }

        public virtual ObjectResult<STLabelAllRemainByCustomer_Result> STLabelAllRemainByCustomer(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabelAllRemainByCustomer_Result>("STLabelAllRemainByCustomer", varCustomerIDParameter);
        }

        public virtual ObjectResult<STLabelDispatchedCartons_Result> STLabelDispatchedCartons(Nullable<System.DateTime> orderDate, Nullable<int> customerMainID, Nullable<int> dispatchingOrderID, string dispatchingOrderRequirement)
        {
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var dispatchingOrderRequirementParameter = dispatchingOrderRequirement != null ?
                new ObjectParameter("DispatchingOrderRequirement", dispatchingOrderRequirement) :
                new ObjectParameter("DispatchingOrderRequirement", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabelDispatchedCartons_Result>("STLabelDispatchedCartons", orderDateParameter, customerMainIDParameter, dispatchingOrderIDParameter, dispatchingOrderRequirementParameter);
        }

        public virtual ObjectResult<STLabelPalletCartonID_Result> STLabelPalletCartonID(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabelPalletCartonID_Result>("STLabelPalletCartonID", palletIDParameter);
        }

        public virtual ObjectResult<STLabelPickingSlipManyOrders_Result> STLabelPickingSlipManyOrders(string p_str)
        {
            var p_strParameter = p_str != null ?
                new ObjectParameter("p_str", p_str) :
                new ObjectParameter("p_str", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabelPickingSlipManyOrders_Result>("STLabelPickingSlipManyOrders", p_strParameter);
        }

        public virtual ObjectResult<STLabelRemainPickingSlip_Result> STLabelRemainPickingSlip(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLabelRemainPickingSlip_Result>("STLabelRemainPickingSlip", dispatchingOrderIDParameter);
        }

        public virtual int STLoadingReportDelete(Nullable<int> loadingReportID)
        {
            var loadingReportIDParameter = loadingReportID.HasValue ?
                new ObjectParameter("LoadingReportID", loadingReportID) :
                new ObjectParameter("LoadingReportID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STLoadingReportDelete", loadingReportIDParameter);
        }

        public virtual ObjectResult<STLoadingReportGroupByExpDate_Result> STLoadingReportGroupByExpDate(Nullable<int> loadingReportID)
        {
            var loadingReportIDParameter = loadingReportID.HasValue ?
                new ObjectParameter("LoadingReportID", loadingReportID) :
                new ObjectParameter("LoadingReportID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLoadingReportGroupByExpDate_Result>("STLoadingReportGroupByExpDate", loadingReportIDParameter);
        }

        public virtual int STLoadingReportInsert(Nullable<int> dispatchingOrderID, string userName, Nullable<bool> isDetail)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var isDetailParameter = isDetail.HasValue ?
                new ObjectParameter("IsDetail", isDetail) :
                new ObjectParameter("IsDetail", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STLoadingReportInsert", dispatchingOrderIDParameter, userNameParameter, isDetailParameter);
        }

        public virtual ObjectResult<STLoadingReports_Result> STLoadingReports(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLoadingReports_Result>("STLoadingReports", dispatchingOrderIDParameter);
        }

        public virtual int STLoadingReportUpdate(Nullable<int> loadingReportDetailID, string userName, Nullable<int> d1, Nullable<int> d2, Nullable<int> d3, Nullable<int> d4, Nullable<int> d5, Nullable<int> d6, Nullable<int> d7, Nullable<int> d8, Nullable<int> d9, Nullable<int> d10, Nullable<int> d11, Nullable<int> d12, Nullable<int> d13, Nullable<int> d14, Nullable<int> d15, Nullable<int> d16, Nullable<int> d17, Nullable<int> d18, Nullable<int> d19, Nullable<int> d20, Nullable<int> d21, Nullable<int> d22, Nullable<int> d23, Nullable<int> d24, Nullable<int> d25, Nullable<int> d26, Nullable<int> d27, Nullable<int> d28, Nullable<int> d29, Nullable<int> d30, Nullable<int> d31, Nullable<int> d32, Nullable<int> d33, Nullable<int> d34, Nullable<int> d35, Nullable<int> d36, Nullable<int> d37, Nullable<int> d38, Nullable<int> d39, Nullable<int> d40, Nullable<int> d41, Nullable<int> d42, Nullable<int> d43, Nullable<int> d44, Nullable<int> d45, Nullable<int> sorting)
        {
            var loadingReportDetailIDParameter = loadingReportDetailID.HasValue ?
                new ObjectParameter("LoadingReportDetailID", loadingReportDetailID) :
                new ObjectParameter("LoadingReportDetailID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var d1Parameter = d1.HasValue ?
                new ObjectParameter("D1", d1) :
                new ObjectParameter("D1", typeof(int));

            var d2Parameter = d2.HasValue ?
                new ObjectParameter("D2", d2) :
                new ObjectParameter("D2", typeof(int));

            var d3Parameter = d3.HasValue ?
                new ObjectParameter("D3", d3) :
                new ObjectParameter("D3", typeof(int));

            var d4Parameter = d4.HasValue ?
                new ObjectParameter("D4", d4) :
                new ObjectParameter("D4", typeof(int));

            var d5Parameter = d5.HasValue ?
                new ObjectParameter("D5", d5) :
                new ObjectParameter("D5", typeof(int));

            var d6Parameter = d6.HasValue ?
                new ObjectParameter("D6", d6) :
                new ObjectParameter("D6", typeof(int));

            var d7Parameter = d7.HasValue ?
                new ObjectParameter("D7", d7) :
                new ObjectParameter("D7", typeof(int));

            var d8Parameter = d8.HasValue ?
                new ObjectParameter("D8", d8) :
                new ObjectParameter("D8", typeof(int));

            var d9Parameter = d9.HasValue ?
                new ObjectParameter("D9", d9) :
                new ObjectParameter("D9", typeof(int));

            var d10Parameter = d10.HasValue ?
                new ObjectParameter("D10", d10) :
                new ObjectParameter("D10", typeof(int));

            var d11Parameter = d11.HasValue ?
                new ObjectParameter("D11", d11) :
                new ObjectParameter("D11", typeof(int));

            var d12Parameter = d12.HasValue ?
                new ObjectParameter("D12", d12) :
                new ObjectParameter("D12", typeof(int));

            var d13Parameter = d13.HasValue ?
                new ObjectParameter("D13", d13) :
                new ObjectParameter("D13", typeof(int));

            var d14Parameter = d14.HasValue ?
                new ObjectParameter("D14", d14) :
                new ObjectParameter("D14", typeof(int));

            var d15Parameter = d15.HasValue ?
                new ObjectParameter("D15", d15) :
                new ObjectParameter("D15", typeof(int));

            var d16Parameter = d16.HasValue ?
                new ObjectParameter("D16", d16) :
                new ObjectParameter("D16", typeof(int));

            var d17Parameter = d17.HasValue ?
                new ObjectParameter("D17", d17) :
                new ObjectParameter("D17", typeof(int));

            var d18Parameter = d18.HasValue ?
                new ObjectParameter("D18", d18) :
                new ObjectParameter("D18", typeof(int));

            var d19Parameter = d19.HasValue ?
                new ObjectParameter("D19", d19) :
                new ObjectParameter("D19", typeof(int));

            var d20Parameter = d20.HasValue ?
                new ObjectParameter("D20", d20) :
                new ObjectParameter("D20", typeof(int));

            var d21Parameter = d21.HasValue ?
                new ObjectParameter("D21", d21) :
                new ObjectParameter("D21", typeof(int));

            var d22Parameter = d22.HasValue ?
                new ObjectParameter("D22", d22) :
                new ObjectParameter("D22", typeof(int));

            var d23Parameter = d23.HasValue ?
                new ObjectParameter("D23", d23) :
                new ObjectParameter("D23", typeof(int));

            var d24Parameter = d24.HasValue ?
                new ObjectParameter("D24", d24) :
                new ObjectParameter("D24", typeof(int));

            var d25Parameter = d25.HasValue ?
                new ObjectParameter("D25", d25) :
                new ObjectParameter("D25", typeof(int));

            var d26Parameter = d26.HasValue ?
                new ObjectParameter("D26", d26) :
                new ObjectParameter("D26", typeof(int));

            var d27Parameter = d27.HasValue ?
                new ObjectParameter("D27", d27) :
                new ObjectParameter("D27", typeof(int));

            var d28Parameter = d28.HasValue ?
                new ObjectParameter("D28", d28) :
                new ObjectParameter("D28", typeof(int));

            var d29Parameter = d29.HasValue ?
                new ObjectParameter("D29", d29) :
                new ObjectParameter("D29", typeof(int));

            var d30Parameter = d30.HasValue ?
                new ObjectParameter("D30", d30) :
                new ObjectParameter("D30", typeof(int));

            var d31Parameter = d31.HasValue ?
                new ObjectParameter("D31", d31) :
                new ObjectParameter("D31", typeof(int));

            var d32Parameter = d32.HasValue ?
                new ObjectParameter("D32", d32) :
                new ObjectParameter("D32", typeof(int));

            var d33Parameter = d33.HasValue ?
                new ObjectParameter("D33", d33) :
                new ObjectParameter("D33", typeof(int));

            var d34Parameter = d34.HasValue ?
                new ObjectParameter("D34", d34) :
                new ObjectParameter("D34", typeof(int));

            var d35Parameter = d35.HasValue ?
                new ObjectParameter("D35", d35) :
                new ObjectParameter("D35", typeof(int));

            var d36Parameter = d36.HasValue ?
                new ObjectParameter("D36", d36) :
                new ObjectParameter("D36", typeof(int));

            var d37Parameter = d37.HasValue ?
                new ObjectParameter("D37", d37) :
                new ObjectParameter("D37", typeof(int));

            var d38Parameter = d38.HasValue ?
                new ObjectParameter("D38", d38) :
                new ObjectParameter("D38", typeof(int));

            var d39Parameter = d39.HasValue ?
                new ObjectParameter("D39", d39) :
                new ObjectParameter("D39", typeof(int));

            var d40Parameter = d40.HasValue ?
                new ObjectParameter("D40", d40) :
                new ObjectParameter("D40", typeof(int));

            var d41Parameter = d41.HasValue ?
                new ObjectParameter("D41", d41) :
                new ObjectParameter("D41", typeof(int));

            var d42Parameter = d42.HasValue ?
                new ObjectParameter("D42", d42) :
                new ObjectParameter("D42", typeof(int));

            var d43Parameter = d43.HasValue ?
                new ObjectParameter("D43", d43) :
                new ObjectParameter("D43", typeof(int));

            var d44Parameter = d44.HasValue ?
                new ObjectParameter("D44", d44) :
                new ObjectParameter("D44", typeof(int));

            var d45Parameter = d45.HasValue ?
                new ObjectParameter("D45", d45) :
                new ObjectParameter("D45", typeof(int));

            var sortingParameter = sorting.HasValue ?
                new ObjectParameter("Sorting", sorting) :
                new ObjectParameter("Sorting", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STLoadingReportUpdate", loadingReportDetailIDParameter, userNameParameter, d1Parameter, d2Parameter, d3Parameter, d4Parameter, d5Parameter, d6Parameter, d7Parameter, d8Parameter, d9Parameter, d10Parameter, d11Parameter, d12Parameter, d13Parameter, d14Parameter, d15Parameter, d16Parameter, d17Parameter, d18Parameter, d19Parameter, d20Parameter, d21Parameter, d22Parameter, d23Parameter, d24Parameter, d25Parameter, d26Parameter, d27Parameter, d28Parameter, d29Parameter, d30Parameter, d31Parameter, d32Parameter, d33Parameter, d34Parameter, d35Parameter, d36Parameter, d37Parameter, d38Parameter, d39Parameter, d40Parameter, d41Parameter, d42Parameter, d43Parameter, d44Parameter, d45Parameter, sortingParameter);
        }

        public virtual ObjectResult<STLocationByRoomReport_Result> STLocationByRoomReport(string roomID, Nullable<bool> used)
        {
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            var usedParameter = used.HasValue ?
                new ObjectParameter("Used", used) :
                new ObjectParameter("Used", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLocationByRoomReport_Result>("STLocationByRoomReport", roomIDParameter, usedParameter);
        }

        public virtual ObjectResult<STLocationFind_Result> STLocationFind(Nullable<int> locationID, Nullable<int> palletID, string palletRemark)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var palletRemarkParameter = palletRemark != null ?
                new ObjectParameter("PalletRemark", palletRemark) :
                new ObjectParameter("PalletRemark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLocationFind_Result>("STLocationFind", locationIDParameter, palletIDParameter, palletRemarkParameter);
        }

        public virtual int STLocationInsert(string roomID, Nullable<int> aisle, Nullable<int> fromBay, Nullable<int> toBay, Nullable<int> fromHigh, Nullable<int> toHigh, Nullable<int> fromDeep, Nullable<int> toDeep)
        {
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            var aisleParameter = aisle.HasValue ?
                new ObjectParameter("Aisle", aisle) :
                new ObjectParameter("Aisle", typeof(int));

            var fromBayParameter = fromBay.HasValue ?
                new ObjectParameter("FromBay", fromBay) :
                new ObjectParameter("FromBay", typeof(int));

            var toBayParameter = toBay.HasValue ?
                new ObjectParameter("ToBay", toBay) :
                new ObjectParameter("ToBay", typeof(int));

            var fromHighParameter = fromHigh.HasValue ?
                new ObjectParameter("FromHigh", fromHigh) :
                new ObjectParameter("FromHigh", typeof(int));

            var toHighParameter = toHigh.HasValue ?
                new ObjectParameter("ToHigh", toHigh) :
                new ObjectParameter("ToHigh", typeof(int));

            var fromDeepParameter = fromDeep.HasValue ?
                new ObjectParameter("FromDeep", fromDeep) :
                new ObjectParameter("FromDeep", typeof(int));

            var toDeepParameter = toDeep.HasValue ?
                new ObjectParameter("ToDeep", toDeep) :
                new ObjectParameter("ToDeep", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STLocationInsert", roomIDParameter, aisleParameter, fromBayParameter, toBayParameter, fromHighParameter, toHighParameter, fromDeepParameter, toDeepParameter);
        }

        public virtual ObjectResult<STLocationProblem_Result> STLocationProblem(Nullable<short> aisle, Nullable<short> bay, Nullable<short> high)
        {
            var aisleParameter = aisle.HasValue ?
                new ObjectParameter("Aisle", aisle) :
                new ObjectParameter("Aisle", typeof(short));

            var bayParameter = bay.HasValue ?
                new ObjectParameter("Bay", bay) :
                new ObjectParameter("Bay", typeof(short));

            var highParameter = high.HasValue ?
                new ObjectParameter("High", high) :
                new ObjectParameter("High", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STLocationProblem_Result>("STLocationProblem", aisleParameter, bayParameter, highParameter);
        }

        public virtual ObjectResult<STMHLWorkByJobReport_Result> STMHLWorkByJobReport(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkByJobReport_Result>("STMHLWorkByJobReport", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STMHLWorkComboJob_Result> STMHLWorkComboJob(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkComboJob_Result>("STMHLWorkComboJob", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STMHLWorkComboMonth_Result> STMHLWorkComboMonth(Nullable<int> mHLWorkDefinitionID)
        {
            var mHLWorkDefinitionIDParameter = mHLWorkDefinitionID.HasValue ?
                new ObjectParameter("MHLWorkDefinitionID", mHLWorkDefinitionID) :
                new ObjectParameter("MHLWorkDefinitionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkComboMonth_Result>("STMHLWorkComboMonth", mHLWorkDefinitionIDParameter);
        }

        public virtual int STMHLWorkDetailExecute(Nullable<int> mHLWorkID, Nullable<byte> flag, Nullable<int> employeeID, Nullable<float> quantity, string detailRemark, string createdBy)
        {
            var mHLWorkIDParameter = mHLWorkID.HasValue ?
                new ObjectParameter("MHLWorkID", mHLWorkID) :
                new ObjectParameter("MHLWorkID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(float));

            var detailRemarkParameter = detailRemark != null ?
                new ObjectParameter("DetailRemark", detailRemark) :
                new ObjectParameter("DetailRemark", typeof(string));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STMHLWorkDetailExecute", mHLWorkIDParameter, flagParameter, employeeIDParameter, quantityParameter, detailRemarkParameter, createdByParameter);
        }

        public virtual ObjectResult<STMHLWorkEmployeeDetail_Result> STMHLWorkEmployeeDetail(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkEmployeeDetail_Result>("STMHLWorkEmployeeDetail", fromDateParameter, toDateParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STMHLWorkEmployeeSalary_Result> STMHLWorkEmployeeSalary(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> employeeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkEmployeeSalary_Result>("STMHLWorkEmployeeSalary", fromDateParameter, toDateParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STMHLWorkEmployeeSummary_Result> STMHLWorkEmployeeSummary(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkEmployeeSummary_Result>("STMHLWorkEmployeeSummary", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STMHLWorkNote_Result> STMHLWorkNote(Nullable<int> mHLWorkID)
        {
            var mHLWorkIDParameter = mHLWorkID.HasValue ?
                new ObjectParameter("MHLWorkID", mHLWorkID) :
                new ObjectParameter("MHLWorkID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkNote_Result>("STMHLWorkNote", mHLWorkIDParameter);
        }

        public virtual ObjectResult<STMHLWorkPalletRepairComparisonReport_Result> STMHLWorkPalletRepairComparisonReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkPalletRepairComparisonReport_Result>("STMHLWorkPalletRepairComparisonReport", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STMHLWorkRecording_PalletRepairReport_Result> STMHLWorkRecording_PalletRepairReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkRecording_PalletRepairReport_Result>("STMHLWorkRecording_PalletRepairReport", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STMHLWorkReview_Result> STMHLWorkReview(Nullable<int> mHLWorkDefinitionID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var mHLWorkDefinitionIDParameter = mHLWorkDefinitionID.HasValue ?
                new ObjectParameter("MHLWorkDefinitionID", mHLWorkDefinitionID) :
                new ObjectParameter("MHLWorkDefinitionID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkReview_Result>("STMHLWorkReview", mHLWorkDefinitionIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STMHLWorkSummaryYearlyReport_Result> STMHLWorkSummaryYearlyReport(Nullable<int> yearID)
        {
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("YearID", yearID) :
                new ObjectParameter("YearID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkSummaryYearlyReport_Result>("STMHLWorkSummaryYearlyReport", yearIDParameter);
        }

        public virtual ObjectResult<STMHLWorkTheSameTime_Result> STMHLWorkTheSameTime(Nullable<int> mHLWorkID)
        {
            var mHLWorkIDParameter = mHLWorkID.HasValue ?
                new ObjectParameter("MHLWorkID", mHLWorkID) :
                new ObjectParameter("MHLWorkID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMHLWorkTheSameTime_Result>("STMHLWorkTheSameTime", mHLWorkIDParameter);
        }

        public virtual int STMHLWorkTheSameTimeCheckConfirm(Nullable<int> mHLWorkID, ObjectParameter recordQty)
        {
            var mHLWorkIDParameter = mHLWorkID.HasValue ?
                new ObjectParameter("MHLWorkID", mHLWorkID) :
                new ObjectParameter("MHLWorkID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STMHLWorkTheSameTimeCheckConfirm", mHLWorkIDParameter, recordQty);
        }

        public virtual int STMHLWorkUnitPriceUpdate(Nullable<int> payRollMonthID, Nullable<float> unitPrice, Nullable<int> mHLWorkDefinitionID, ObjectParameter mHLWorkID_Qty)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(float));

            var mHLWorkDefinitionIDParameter = mHLWorkDefinitionID.HasValue ?
                new ObjectParameter("MHLWorkDefinitionID", mHLWorkDefinitionID) :
                new ObjectParameter("MHLWorkDefinitionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STMHLWorkUnitPriceUpdate", payRollMonthIDParameter, unitPriceParameter, mHLWorkDefinitionIDParameter, mHLWorkID_Qty);
        }

        public virtual ObjectResult<STMonthlyLunchSummary_Result> STMonthlyLunchSummary(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STMonthlyLunchSummary_Result>("STMonthlyLunchSummary", payRollMonthIDParameter);
        }

        public virtual int STMonthlyScheduledJobPayRollDetailInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STMonthlyScheduledJobPayRollDetailInsert");
        }

        public virtual int STNewEmployeeID(Nullable<int> zzz, ObjectParameter newEmployeeID)
        {
            var zzzParameter = zzz.HasValue ?
                new ObjectParameter("zzz", zzz) :
                new ObjectParameter("zzz", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNewEmployeeID", zzzParameter, newEmployeeID);
        }

        public virtual ObjectResult<STNFC_comboCustomerClientID_Result> STNFC_comboCustomerClientID(Nullable<bool> flag, Nullable<int> customerMainID)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_comboCustomerClientID_Result>("STNFC_comboCustomerClientID", flagParameter, customerMainIDParameter);
        }

        public virtual ObjectResult<STNFC_comboProductID_Result> STNFC_comboProductID(Nullable<int> customerClientID, Nullable<bool> flag)
        {
            var customerClientIDParameter = customerClientID.HasValue ?
                new ObjectParameter("CustomerClientID", customerClientID) :
                new ObjectParameter("CustomerClientID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_comboProductID_Result>("STNFC_comboProductID", customerClientIDParameter, flagParameter);
        }

        public virtual ObjectResult<STNFC_comboProductIDSalesContract_Result> STNFC_comboProductIDSalesContract(Nullable<int> customerSalesContractID)
        {
            var customerSalesContractIDParameter = customerSalesContractID.HasValue ?
                new ObjectParameter("CustomerSalesContractID", customerSalesContractID) :
                new ObjectParameter("CustomerSalesContractID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_comboProductIDSalesContract_Result>("STNFC_comboProductIDSalesContract", customerSalesContractIDParameter);
        }

        public virtual int STNFC_CustomerSalesContractCopy(Nullable<int> customerSalesContractID_From, Nullable<int> customerSalesContractID_To, string createdBy)
        {
            var customerSalesContractID_FromParameter = customerSalesContractID_From.HasValue ?
                new ObjectParameter("CustomerSalesContractID_From", customerSalesContractID_From) :
                new ObjectParameter("CustomerSalesContractID_From", typeof(int));

            var customerSalesContractID_ToParameter = customerSalesContractID_To.HasValue ?
                new ObjectParameter("CustomerSalesContractID_To", customerSalesContractID_To) :
                new ObjectParameter("CustomerSalesContractID_To", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesContractCopy", customerSalesContractID_FromParameter, customerSalesContractID_ToParameter, createdByParameter);
        }

        public virtual ObjectResult<STNFC_CustomerSalesDeliveryNote_Result> STNFC_CustomerSalesDeliveryNote(Nullable<int> customerSalesInvoiceID)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_CustomerSalesDeliveryNote_Result>("STNFC_CustomerSalesDeliveryNote", customerSalesInvoiceIDParameter);
        }

        public virtual ObjectResult<STNFC_CustomerSalesInvoiceDailyReport_Result> STNFC_CustomerSalesInvoiceDailyReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_CustomerSalesInvoiceDailyReport_Result>("STNFC_CustomerSalesInvoiceDailyReport", fromDateParameter, toDateParameter);
        }

        public virtual int STNFC_CustomerSalesInvoiceDelete(Nullable<int> iD, Nullable<byte> flag)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoiceDelete", iDParameter, flagParameter);
        }

        public virtual int STNFC_CustomerSalesInvoiceDetailDelete(Nullable<int> varCustomerSalesInvoiceDetailID)
        {
            var varCustomerSalesInvoiceDetailIDParameter = varCustomerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("varCustomerSalesInvoiceDetailID", varCustomerSalesInvoiceDetailID) :
                new ObjectParameter("varCustomerSalesInvoiceDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoiceDetailDelete", varCustomerSalesInvoiceDetailIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicePalletsUpdateBookOrder(Nullable<int> customerSalesInvoiceID)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicePalletsUpdateBookOrder", customerSalesInvoiceIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoiceReport(Nullable<int> customerSalesInvoiceID)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoiceReport", customerSalesInvoiceIDParameter);
        }

        public virtual ObjectResult<STNFC_CustomerSalesInvoiceReport_new_Result> STNFC_CustomerSalesInvoiceReport_new(Nullable<int> customerSalesInvoiceID)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_CustomerSalesInvoiceReport_new_Result>("STNFC_CustomerSalesInvoiceReport_new", customerSalesInvoiceIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoiceReportInsert(Nullable<int> customerSalesInvoiceID, Nullable<bool> flat)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            var flatParameter = flat.HasValue ?
                new ObjectParameter("flat", flat) :
                new ObjectParameter("flat", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoiceReportInsert", customerSalesInvoiceIDParameter, flatParameter);
        }

        public virtual ObjectResult<STNFC_CustomerSalesInvoiceReview_Result> STNFC_CustomerSalesInvoiceReview(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerClientID, Nullable<byte> flag, string createdBy, Nullable<int> customerSalesInvoiceID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerClientIDParameter = customerClientID.HasValue ?
                new ObjectParameter("CustomerClientID", customerClientID) :
                new ObjectParameter("CustomerClientID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_CustomerSalesInvoiceReview_Result>("STNFC_CustomerSalesInvoiceReview", fromDateParameter, toDateParameter, customerClientIDParameter, flagParameter, createdByParameter, customerSalesInvoiceIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesCreateDO(Nullable<int> customerSalesInvoiceID, string userID)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesCreateDO", customerSalesInvoiceIDParameter, userIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesDOInsert(string userName, Nullable<System.DateTime> dispatchingOrderDate)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var dispatchingOrderDateParameter = dispatchingOrderDate.HasValue ?
                new ObjectParameter("DispatchingOrderDate", dispatchingOrderDate) :
                new ObjectParameter("DispatchingOrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesDOInsert", userNameParameter, dispatchingOrderDateParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPalletDelete(Nullable<int> customerSalesInvoicePalletID)
        {
            var customerSalesInvoicePalletIDParameter = customerSalesInvoicePalletID.HasValue ?
                new ObjectParameter("CustomerSalesInvoicePalletID", customerSalesInvoicePalletID) :
                new ObjectParameter("CustomerSalesInvoicePalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPalletDelete", customerSalesInvoicePalletIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPalletInsert(Nullable<int> varProductID, Nullable<int> varCustomerSalesInvoiceDetailID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varCustomerSalesInvoiceDetailIDParameter = varCustomerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("varCustomerSalesInvoiceDetailID", varCustomerSalesInvoiceDetailID) :
                new ObjectParameter("varCustomerSalesInvoiceDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPalletInsert", varProductIDParameter, varCustomerSalesInvoiceDetailIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPalletLineDelete(Nullable<int> varCustomerSalesInvoiceDetailID, Nullable<byte> flag)
        {
            var varCustomerSalesInvoiceDetailIDParameter = varCustomerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("varCustomerSalesInvoiceDetailID", varCustomerSalesInvoiceDetailID) :
                new ObjectParameter("varCustomerSalesInvoiceDetailID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPalletLineDelete", varCustomerSalesInvoiceDetailIDParameter, flagParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPalletMethodsInsert(Nullable<int> varProductID, Nullable<int> varCustomerSalesInvoiceDetailID, Nullable<short> varOrderQuantity, Nullable<short> varCustomerDispatchType, Nullable<short> varOddPieceQuanity, Nullable<int> varUnitPerPackage)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varCustomerSalesInvoiceDetailIDParameter = varCustomerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("varCustomerSalesInvoiceDetailID", varCustomerSalesInvoiceDetailID) :
                new ObjectParameter("varCustomerSalesInvoiceDetailID", typeof(int));

            var varOrderQuantityParameter = varOrderQuantity.HasValue ?
                new ObjectParameter("varOrderQuantity", varOrderQuantity) :
                new ObjectParameter("varOrderQuantity", typeof(short));

            var varCustomerDispatchTypeParameter = varCustomerDispatchType.HasValue ?
                new ObjectParameter("varCustomerDispatchType", varCustomerDispatchType) :
                new ObjectParameter("varCustomerDispatchType", typeof(short));

            var varOddPieceQuanityParameter = varOddPieceQuanity.HasValue ?
                new ObjectParameter("varOddPieceQuanity", varOddPieceQuanity) :
                new ObjectParameter("varOddPieceQuanity", typeof(short));

            var varUnitPerPackageParameter = varUnitPerPackage.HasValue ?
                new ObjectParameter("varUnitPerPackage", varUnitPerPackage) :
                new ObjectParameter("varUnitPerPackage", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPalletMethodsInsert", varProductIDParameter, varCustomerSalesInvoiceDetailIDParameter, varOrderQuantityParameter, varCustomerDispatchTypeParameter, varOddPieceQuanityParameter, varUnitPerPackageParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPalletMethodsInsertAll(Nullable<int> varProductID, Nullable<int> varCustomerSalesInvoiceDetailID, Nullable<short> varOrderQuantity, Nullable<short> varCustomerDispatchType, Nullable<short> varOddPieceQuanity)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varCustomerSalesInvoiceDetailIDParameter = varCustomerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("varCustomerSalesInvoiceDetailID", varCustomerSalesInvoiceDetailID) :
                new ObjectParameter("varCustomerSalesInvoiceDetailID", typeof(int));

            var varOrderQuantityParameter = varOrderQuantity.HasValue ?
                new ObjectParameter("varOrderQuantity", varOrderQuantity) :
                new ObjectParameter("varOrderQuantity", typeof(short));

            var varCustomerDispatchTypeParameter = varCustomerDispatchType.HasValue ?
                new ObjectParameter("varCustomerDispatchType", varCustomerDispatchType) :
                new ObjectParameter("varCustomerDispatchType", typeof(short));

            var varOddPieceQuanityParameter = varOddPieceQuanity.HasValue ?
                new ObjectParameter("varOddPieceQuanity", varOddPieceQuanity) :
                new ObjectParameter("varOddPieceQuanity", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPalletMethodsInsertAll", varProductIDParameter, varCustomerSalesInvoiceDetailIDParameter, varOrderQuantityParameter, varCustomerDispatchTypeParameter, varOddPieceQuanityParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPalletUpdate(Nullable<int> customerSalesInvoiceID, Nullable<System.DateTime> productionDate, string updatedBy)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            var productionDateParameter = productionDate.HasValue ?
                new ObjectParameter("ProductionDate", productionDate) :
                new ObjectParameter("ProductionDate", typeof(System.DateTime));

            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPalletUpdate", customerSalesInvoiceIDParameter, productionDateParameter, updatedByParameter);
        }

        public virtual ObjectResult<STNFC_CustomerSalesInvoicesPalletViewAll_Result> STNFC_CustomerSalesInvoicesPalletViewAll(Nullable<int> varProductID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STNFC_CustomerSalesInvoicesPalletViewAll_Result>("STNFC_CustomerSalesInvoicesPalletViewAll", varProductIDParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesPromotionInsert(Nullable<int> customerSalesInvoiceDetailID, string createdBy, Nullable<int> customerSalesContractID, Nullable<System.DateTime> customerSalesOrderDate)
        {
            var customerSalesInvoiceDetailIDParameter = customerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceDetailID", customerSalesInvoiceDetailID) :
                new ObjectParameter("CustomerSalesInvoiceDetailID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var customerSalesContractIDParameter = customerSalesContractID.HasValue ?
                new ObjectParameter("CustomerSalesContractID", customerSalesContractID) :
                new ObjectParameter("CustomerSalesContractID", typeof(int));

            var customerSalesOrderDateParameter = customerSalesOrderDate.HasValue ?
                new ObjectParameter("CustomerSalesOrderDate", customerSalesOrderDate) :
                new ObjectParameter("CustomerSalesOrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesPromotionInsert", customerSalesInvoiceDetailIDParameter, createdByParameter, customerSalesContractIDParameter, customerSalesOrderDateParameter);
        }

        public virtual int STNFC_CustomerSalesInvoicesReturnInsert(Nullable<int> customerSalesInvoiceID, string createdBy)
        {
            var customerSalesInvoiceIDParameter = customerSalesInvoiceID.HasValue ?
                new ObjectParameter("CustomerSalesInvoiceID", customerSalesInvoiceID) :
                new ObjectParameter("CustomerSalesInvoiceID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_CustomerSalesInvoicesReturnInsert", customerSalesInvoiceIDParameter, createdByParameter);
        }

        public virtual ObjectResult<Nullable<int>> STNFC_CustomerSalesInvoiceTrips(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("STNFC_CustomerSalesInvoiceTrips", tripIDParameter);
        }

        public virtual int STNFC_DispatchingProductInsert(Nullable<int> varDispatchingOrderID, string varDispatchingOrderNumer, Nullable<int> varProductID, string userID, Nullable<int> varCustomerSalesInvoiceDetailID, string varRemark)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var varDispatchingOrderNumerParameter = varDispatchingOrderNumer != null ?
                new ObjectParameter("varDispatchingOrderNumer", varDispatchingOrderNumer) :
                new ObjectParameter("varDispatchingOrderNumer", typeof(string));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var varCustomerSalesInvoiceDetailIDParameter = varCustomerSalesInvoiceDetailID.HasValue ?
                new ObjectParameter("varCustomerSalesInvoiceDetailID", varCustomerSalesInvoiceDetailID) :
                new ObjectParameter("varCustomerSalesInvoiceDetailID", typeof(int));

            var varRemarkParameter = varRemark != null ?
                new ObjectParameter("varRemark", varRemark) :
                new ObjectParameter("varRemark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_DispatchingProductInsert", varDispatchingOrderIDParameter, varDispatchingOrderNumerParameter, varProductIDParameter, userIDParameter, varCustomerSalesInvoiceDetailIDParameter, varRemarkParameter);
        }

        public virtual int STNFC_ReceivingOrderImport(Nullable<int> varEDI_OrderID, string varUser)
        {
            var varEDI_OrderIDParameter = varEDI_OrderID.HasValue ?
                new ObjectParameter("varEDI_OrderID", varEDI_OrderID) :
                new ObjectParameter("varEDI_OrderID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_ReceivingOrderImport", varEDI_OrderIDParameter, varUserParameter);
        }

        public virtual int STNFC_StockOnHandAllProduct(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNFC_StockOnHandAllProduct", varConditionParameter);
        }

        public virtual int STNumberToText(Nullable<int> varNumber, ObjectParameter varText)
        {
            var varNumberParameter = varNumber.HasValue ?
                new ObjectParameter("varNumber", varNumber) :
                new ObjectParameter("varNumber", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STNumberToText", varNumberParameter, varText);
        }

        public virtual ObjectResult<STOperationInOutSummaryByMonthReport_Result> STOperationInOutSummaryByMonthReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> varFlag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varFlagParameter = varFlag.HasValue ?
                new ObjectParameter("varFlag", varFlag) :
                new ObjectParameter("varFlag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOperationInOutSummaryByMonthReport_Result>("STOperationInOutSummaryByMonthReport", fromDateParameter, toDateParameter, varFlagParameter);
        }

        public virtual int STOrderCategoriesCheck(string orderNumber, Nullable<int> varPercentageInput, ObjectParameter messageOut, ObjectParameter varPercentage, ObjectParameter varPercentageInputSum)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var varPercentageInputParameter = varPercentageInput.HasValue ?
                new ObjectParameter("varPercentageInput", varPercentageInput) :
                new ObjectParameter("varPercentageInput", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STOrderCategoriesCheck", orderNumberParameter, varPercentageInputParameter, messageOut, varPercentage, varPercentageInputSum);
        }

        public virtual int STOrderCategoryCheck(string orderNumber, Nullable<int> varPercentageInput, ObjectParameter messageOut, ObjectParameter varPercentage, ObjectParameter varPercentageInputSum)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            var varPercentageInputParameter = varPercentageInput.HasValue ?
                new ObjectParameter("varPercentageInput", varPercentageInput) :
                new ObjectParameter("varPercentageInput", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STOrderCategoryCheck", orderNumberParameter, varPercentageInputParameter, messageOut, varPercentage, varPercentageInputSum);
        }

        public virtual int STOrdersDelete(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STOrdersDelete", orderNumberParameter);
        }

        public virtual int STOrderUnlocked(Nullable<int> orderID, string userID, string orderType, string reason)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STOrderUnlocked", orderIDParameter, userIDParameter, orderTypeParameter, reasonParameter);
        }

        public virtual ObjectResult<STOrderUnlockedSearch_Result> STOrderUnlockedSearch(string orderType, Nullable<int> orderID)
        {
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOrderUnlockedSearch_Result>("STOrderUnlockedSearch", orderTypeParameter, orderIDParameter);
        }

        public virtual ObjectResult<STOrderUnlockedView_Result> STOrderUnlockedView(string orderType, Nullable<int> customerID)
        {
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOrderUnlockedView_Result>("STOrderUnlockedView", orderTypeParameter, customerIDParameter);
        }

        public virtual ObjectResult<STOtherJobNote_Result> STOtherJobNote(Nullable<int> otherJobID)
        {
            var otherJobIDParameter = otherJobID.HasValue ?
                new ObjectParameter("OtherJobID", otherJobID) :
                new ObjectParameter("OtherJobID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherJobNote_Result>("STOtherJobNote", otherJobIDParameter);
        }

        public virtual ObjectResult<STOtherJobSummary_Result> STOtherJobSummary(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<byte> flag, Nullable<int> otherJobID, Nullable<int> employeeID, string createdBy)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var otherJobIDParameter = otherJobID.HasValue ?
                new ObjectParameter("OtherJobID", otherJobID) :
                new ObjectParameter("OtherJobID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherJobSummary_Result>("STOtherJobSummary", fromDateParameter, todateParameter, flagParameter, otherJobIDParameter, employeeIDParameter, createdByParameter);
        }

        public virtual ObjectResult<STOtherJobTheSameTime_2014_10_30_Result> STOtherJobTheSameTime_2014_10_30(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherJobTheSameTime_2014_10_30_Result>("STOtherJobTheSameTime_2014_10_30", orderNumberParameter);
        }

        public virtual int STOtherJobTheSameTimeCheckConfirm_2014_10_30(string orderNumber, ObjectParameter recordQty)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STOtherJobTheSameTimeCheckConfirm_2014_10_30", orderNumberParameter, recordQty);
        }

        public virtual ObjectResult<STOtherService_OtherJobs_Explanation_Result> STOtherService_OtherJobs_Explanation(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherService_OtherJobs_Explanation_Result>("STOtherService_OtherJobs_Explanation", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STOtherService_Work_Explanation_Result> STOtherService_Work_Explanation(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerMainID, Nullable<int> mHLWorkDefinitionID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var mHLWorkDefinitionIDParameter = mHLWorkDefinitionID.HasValue ?
                new ObjectParameter("MHLWorkDefinitionID", mHLWorkDefinitionID) :
                new ObjectParameter("MHLWorkDefinitionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherService_Work_Explanation_Result>("STOtherService_Work_Explanation", fromDateParameter, toDateParameter, customerMainIDParameter, mHLWorkDefinitionIDParameter);
        }

        public virtual ObjectResult<STOtherService_Work_Mapping_Result> STOtherService_Work_Mapping(Nullable<int> mHLWorkDefinitionID, Nullable<int> customerMainID)
        {
            var mHLWorkDefinitionIDParameter = mHLWorkDefinitionID.HasValue ?
                new ObjectParameter("MHLWorkDefinitionID", mHLWorkDefinitionID) :
                new ObjectParameter("MHLWorkDefinitionID", typeof(int));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherService_Work_Mapping_Result>("STOtherService_Work_Mapping", mHLWorkDefinitionIDParameter, customerMainIDParameter);
        }

        public virtual ObjectResult<STOtherServiceViewByService_Result> STOtherServiceViewByService(Nullable<int> serviceID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> customerID)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STOtherServiceViewByService_Result>("STOtherServiceViewByService", serviceIDParameter, fromDateParameter, todateParameter, customerIDParameter);
        }

        public virtual ObjectResult<STPalletAllocation1RO_Result> STPalletAllocation1RO(Nullable<int> varReceivingOrderID, Nullable<int> varStoreID)
        {
            var varReceivingOrderIDParameter = varReceivingOrderID.HasValue ?
                new ObjectParameter("varReceivingOrderID", varReceivingOrderID) :
                new ObjectParameter("varReceivingOrderID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocation1RO_Result>("STPalletAllocation1RO", varReceivingOrderIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationAll_Result> STPalletAllocationAll(string varHomeRoom1, string varHomeRoom2, Nullable<int> varStoreID)
        {
            var varHomeRoom1Parameter = varHomeRoom1 != null ?
                new ObjectParameter("varHomeRoom1", varHomeRoom1) :
                new ObjectParameter("varHomeRoom1", typeof(string));

            var varHomeRoom2Parameter = varHomeRoom2 != null ?
                new ObjectParameter("varHomeRoom2", varHomeRoom2) :
                new ObjectParameter("varHomeRoom2", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationAll_Result>("STPalletAllocationAll", varHomeRoom1Parameter, varHomeRoom2Parameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationBusy_Result> STPalletAllocationBusy(Nullable<int> varProductID, Nullable<int> varStoreID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationBusy_Result>("STPalletAllocationBusy", varProductIDParameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationDeep3_Result> STPalletAllocationDeep3(string varHomeRoom1, string varHomeRoom2, Nullable<int> varStoreID)
        {
            var varHomeRoom1Parameter = varHomeRoom1 != null ?
                new ObjectParameter("varHomeRoom1", varHomeRoom1) :
                new ObjectParameter("varHomeRoom1", typeof(string));

            var varHomeRoom2Parameter = varHomeRoom2 != null ?
                new ObjectParameter("varHomeRoom2", varHomeRoom2) :
                new ObjectParameter("varHomeRoom2", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationDeep3_Result>("STPalletAllocationDeep3", varHomeRoom1Parameter, varHomeRoom2Parameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationFindAisles_Result> STPalletAllocationFindAisles(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationFindAisles_Result>("STPalletAllocationFindAisles", productIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationFree_Result> STPalletAllocationFree(string homeRoom1, string homeRoom2, Nullable<int> varStoreID)
        {
            var homeRoom1Parameter = homeRoom1 != null ?
                new ObjectParameter("HomeRoom1", homeRoom1) :
                new ObjectParameter("HomeRoom1", typeof(string));

            var homeRoom2Parameter = homeRoom2 != null ?
                new ObjectParameter("HomeRoom2", homeRoom2) :
                new ObjectParameter("HomeRoom2", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationFree_Result>("STPalletAllocationFree", homeRoom1Parameter, homeRoom2Parameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationFreeHigh_Result> STPalletAllocationFreeHigh(string homeRoom1, string homeRoom2, Nullable<int> varStoreID)
        {
            var homeRoom1Parameter = homeRoom1 != null ?
                new ObjectParameter("HomeRoom1", homeRoom1) :
                new ObjectParameter("HomeRoom1", typeof(string));

            var homeRoom2Parameter = homeRoom2 != null ?
                new ObjectParameter("HomeRoom2", homeRoom2) :
                new ObjectParameter("HomeRoom2", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationFreeHigh_Result>("STPalletAllocationFreeHigh", homeRoom1Parameter, homeRoom2Parameter, varStoreIDParameter);
        }

        public virtual ObjectResult<STPalletAllocationFreeLow_Result> STPalletAllocationFreeLow(string homeRoom1, string homeRoom2)
        {
            var homeRoom1Parameter = homeRoom1 != null ?
                new ObjectParameter("HomeRoom1", homeRoom1) :
                new ObjectParameter("HomeRoom1", typeof(string));

            var homeRoom2Parameter = homeRoom2 != null ?
                new ObjectParameter("HomeRoom2", homeRoom2) :
                new ObjectParameter("HomeRoom2", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletAllocationFreeLow_Result>("STPalletAllocationFreeLow", homeRoom1Parameter, homeRoom2Parameter);
        }

        public virtual int STPalletBreak(Nullable<int> varPalletID, Nullable<short> varNewQuantity)
        {
            var varPalletIDParameter = varPalletID.HasValue ?
                new ObjectParameter("varPalletID", varPalletID) :
                new ObjectParameter("varPalletID", typeof(int));

            var varNewQuantityParameter = varNewQuantity.HasValue ?
                new ObjectParameter("varNewQuantity", varNewQuantity) :
                new ObjectParameter("varNewQuantity", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletBreak", varPalletIDParameter, varNewQuantityParameter);
        }

        public virtual int STPalletBreakDuringDispatch(Nullable<int> varPalletID)
        {
            var varPalletIDParameter = varPalletID.HasValue ?
                new ObjectParameter("varPalletID", varPalletID) :
                new ObjectParameter("varPalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletBreakDuringDispatch", varPalletIDParameter);
        }

        public virtual int STPalletBreakReturnNewPalletID(Nullable<int> varPalletID, Nullable<short> varNewQuantity, string currentUser, ObjectParameter varnewPalletID)
        {
            var varPalletIDParameter = varPalletID.HasValue ?
                new ObjectParameter("varPalletID", varPalletID) :
                new ObjectParameter("varPalletID", typeof(int));

            var varNewQuantityParameter = varNewQuantity.HasValue ?
                new ObjectParameter("varNewQuantity", varNewQuantity) :
                new ObjectParameter("varNewQuantity", typeof(short));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletBreakReturnNewPalletID", varPalletIDParameter, varNewQuantityParameter, currentUserParameter, varnewPalletID);
        }

        public virtual int STPalletCartonWeightInsert(Nullable<int> palletID, Nullable<short> originalQuantity, Nullable<short> status, string createdBy)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var originalQuantityParameter = originalQuantity.HasValue ?
                new ObjectParameter("OriginalQuantity", originalQuantity) :
                new ObjectParameter("OriginalQuantity", typeof(short));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletCartonWeightInsert", palletIDParameter, originalQuantityParameter, statusParameter, createdByParameter);
        }

        public virtual int STPalletCartonWeightUpdate(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletCartonWeightUpdate", palletIDParameter);
        }

        public virtual ObjectResult<STPalletHistories_Result> STPalletHistories(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletHistories_Result>("STPalletHistories", palletIDParameter);
        }

        public virtual ObjectResult<STPalletIDInOutDetails_Result> STPalletIDInOutDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletIDInOutDetails_Result>("STPalletIDInOutDetails");
        }

        public virtual ObjectResult<STPalletInfo_DO_Result> STPalletInfo_DO(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_DO_Result>("STPalletInfo_DO", productIDParameter);
        }

        public virtual ObjectResult<STPalletInfo_Locations_Result> STPalletInfo_Locations(Nullable<int> productID, Nullable<int> receivingOrderID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_Locations_Result>("STPalletInfo_Locations", productIDParameter, receivingOrderIDParameter);
        }

        public virtual ObjectResult<STPalletInfo_Locations_Find_Result> STPalletInfo_Locations_Find(string rONumber)
        {
            var rONumberParameter = rONumber != null ?
                new ObjectParameter("RONumber", rONumber) :
                new ObjectParameter("RONumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_Locations_Find_Result>("STPalletInfo_Locations_Find", rONumberParameter);
        }

        public virtual int STPalletInfo_Locations_UpdateCustomerRef(Nullable<int> receivingOrderDetailID, string customerRef)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var customerRefParameter = customerRef != null ?
                new ObjectParameter("CustomerRef", customerRef) :
                new ObjectParameter("CustomerRef", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletInfo_Locations_UpdateCustomerRef", receivingOrderDetailIDParameter, customerRefParameter);
        }

        public virtual int STPalletInfo_Locations_UpdatePalletStatus(Nullable<int> palletID, Nullable<byte> palletStatus, string processUser)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var palletStatusParameter = palletStatus.HasValue ?
                new ObjectParameter("PalletStatus", palletStatus) :
                new ObjectParameter("PalletStatus", typeof(byte));

            var processUserParameter = processUser != null ?
                new ObjectParameter("ProcessUser", processUser) :
                new ObjectParameter("ProcessUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletInfo_Locations_UpdatePalletStatus", palletIDParameter, palletStatusParameter, processUserParameter);
        }

        public virtual ObjectResult<STPalletInfo_LocationsWeightInners_Result> STPalletInfo_LocationsWeightInners(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_LocationsWeightInners_Result>("STPalletInfo_LocationsWeightInners", productIDParameter);
        }

        public virtual ObjectResult<STPalletInfo_RO_Result> STPalletInfo_RO(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_RO_Result>("STPalletInfo_RO", productIDParameter);
        }

        public virtual ObjectResult<STPalletInfo_RODO_Find_Result> STPalletInfo_RODO_Find(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_RODO_Find_Result>("STPalletInfo_RODO_Find", palletIDParameter);
        }

        public virtual ObjectResult<STPalletInfo_ViewWeightInnersDO_Result> STPalletInfo_ViewWeightInnersDO(Nullable<int> productID, Nullable<int> maxDate)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var maxDateParameter = maxDate.HasValue ?
                new ObjectParameter("MaxDate", maxDate) :
                new ObjectParameter("MaxDate", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_ViewWeightInnersDO_Result>("STPalletInfo_ViewWeightInnersDO", productIDParameter, maxDateParameter);
        }

        public virtual ObjectResult<STPalletInfo_ViewWeightInnersRO_Result> STPalletInfo_ViewWeightInnersRO(Nullable<int> productID, Nullable<int> maxDate)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var maxDateParameter = maxDate.HasValue ?
                new ObjectParameter("MaxDate", maxDate) :
                new ObjectParameter("MaxDate", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfo_ViewWeightInnersRO_Result>("STPalletInfo_ViewWeightInnersRO", productIDParameter, maxDateParameter);
        }

        public virtual ObjectResult<STPalletInfoAll1Customer_Result> STPalletInfoAll1Customer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInfoAll1Customer_Result>("STPalletInfoAll1Customer", customerIDParameter);
        }

        public virtual ObjectResult<STPalletInformationByProduct_Result> STPalletInformationByProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInformationByProduct_Result>("STPalletInformationByProduct", productIDParameter);
        }

        public virtual ObjectResult<STPalletInforReport_Result> STPalletInforReport(Nullable<int> customerID, Nullable<int> productID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInforReport_Result>("STPalletInforReport", customerIDParameter, productIDParameter);
        }

        public virtual ObjectResult<STPalletInforReportBeforeDispatch_Result> STPalletInforReportBeforeDispatch(Nullable<int> varCustomerID, Nullable<int> varProductID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInforReportBeforeDispatch_Result>("STPalletInforReportBeforeDispatch", varCustomerIDParameter, varProductIDParameter);
        }

        public virtual ObjectResult<STPalletInforReportHistory_Result> STPalletInforReportHistory(Nullable<int> varProductID, Nullable<System.DateTime> receivingOrderDate)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var receivingOrderDateParameter = receivingOrderDate.HasValue ?
                new ObjectParameter("ReceivingOrderDate", receivingOrderDate) :
                new ObjectParameter("ReceivingOrderDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInforReportHistory_Result>("STPalletInforReportHistory", varProductIDParameter, receivingOrderDateParameter);
        }

        public virtual ObjectResult<STPalletInOutHistories__bk_Result> STPalletInOutHistories__bk(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPalletInOutHistories__bk_Result>("STPalletInOutHistories__bk", palletIDParameter);
        }

        public virtual int STPalletInsert(Nullable<int> varProductID, Nullable<int> varTotalPackages, Nullable<int> varReceivingOrderDetailID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalPackagesParameter = varTotalPackages.HasValue ?
                new ObjectParameter("varTotalPackages", varTotalPackages) :
                new ObjectParameter("varTotalPackages", typeof(int));

            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletInsert", varProductIDParameter, varTotalPackagesParameter, varReceivingOrderDetailIDParameter);
        }

        public virtual int STPalletInsertNewDefaultQty(Nullable<int> varProductID, Nullable<int> varTotalPackages, Nullable<int> varReceivingOrderDetailID, Nullable<int> varNewPackagesPerPallet)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalPackagesParameter = varTotalPackages.HasValue ?
                new ObjectParameter("varTotalPackages", varTotalPackages) :
                new ObjectParameter("varTotalPackages", typeof(int));

            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            var varNewPackagesPerPalletParameter = varNewPackagesPerPallet.HasValue ?
                new ObjectParameter("varNewPackagesPerPallet", varNewPackagesPerPallet) :
                new ObjectParameter("varNewPackagesPerPallet", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletInsertNewDefaultQty", varProductIDParameter, varTotalPackagesParameter, varReceivingOrderDetailIDParameter, varNewPackagesPerPalletParameter);
        }

        public virtual int STPalletsAllocation(Nullable<int> varReceivingOrderDetailID, Nullable<short> varLowHigh, Nullable<short> varFirstTop, string varCondition, Nullable<bool> varJoinSmallPallet)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            var varLowHighParameter = varLowHigh.HasValue ?
                new ObjectParameter("varLowHigh", varLowHigh) :
                new ObjectParameter("varLowHigh", typeof(short));

            var varFirstTopParameter = varFirstTop.HasValue ?
                new ObjectParameter("varFirstTop", varFirstTop) :
                new ObjectParameter("varFirstTop", typeof(short));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var varJoinSmallPalletParameter = varJoinSmallPallet.HasValue ?
                new ObjectParameter("varJoinSmallPallet", varJoinSmallPallet) :
                new ObjectParameter("varJoinSmallPallet", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletsAllocation", varReceivingOrderDetailIDParameter, varLowHighParameter, varFirstTopParameter, varConditionParameter, varJoinSmallPalletParameter);
        }

        public virtual int STPalletsAllocationFloor(Nullable<int> varReceivingOrderDetailID, string homeRoom1)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            var homeRoom1Parameter = homeRoom1 != null ?
                new ObjectParameter("HomeRoom1", homeRoom1) :
                new ObjectParameter("HomeRoom1", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletsAllocationFloor", varReceivingOrderDetailIDParameter, homeRoom1Parameter);
        }

        public virtual int STPalletsAllocationJoinPallet(Nullable<int> varPalletID)
        {
            var varPalletIDParameter = varPalletID.HasValue ?
                new ObjectParameter("varPalletID", varPalletID) :
                new ObjectParameter("varPalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletsAllocationJoinPallet", varPalletIDParameter);
        }

        public virtual int STPalletStatusHoldROUpdate(Nullable<int> receivingOrderID, string processUser, string palletStatusDescription, Nullable<byte> palletStatus)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var processUserParameter = processUser != null ?
                new ObjectParameter("ProcessUser", processUser) :
                new ObjectParameter("ProcessUser", typeof(string));

            var palletStatusDescriptionParameter = palletStatusDescription != null ?
                new ObjectParameter("PalletStatusDescription", palletStatusDescription) :
                new ObjectParameter("PalletStatusDescription", typeof(string));

            var palletStatusParameter = palletStatus.HasValue ?
                new ObjectParameter("PalletStatus", palletStatus) :
                new ObjectParameter("PalletStatus", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletStatusHoldROUpdate", receivingOrderIDParameter, processUserParameter, palletStatusDescriptionParameter, palletStatusParameter);
        }

        public virtual int STPalletUpdate(Nullable<int> varProductID, Nullable<int> varTotalPackages, Nullable<int> varReceivingOrderDetailID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varTotalPackagesParameter = varTotalPackages.HasValue ?
                new ObjectParameter("varTotalPackages", varTotalPackages) :
                new ObjectParameter("varTotalPackages", typeof(int));

            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletUpdate", varProductIDParameter, varTotalPackagesParameter, varReceivingOrderDetailIDParameter);
        }

        public virtual int STPalletWeightUpdate(Nullable<int> palletID, Nullable<float> palletWeight, string userName)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var palletWeightParameter = palletWeight.HasValue ?
                new ObjectParameter("PalletWeight", palletWeight) :
                new ObjectParameter("PalletWeight", typeof(float));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPalletWeightUpdate", palletIDParameter, palletWeightParameter, userNameParameter);
        }

        public virtual int STPayrollAnnualLeaveAll(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollAnnualLeaveAll", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STPayrollAnnualLeaveByDepartment_Result> STPayrollAnnualLeaveByDepartment(Nullable<int> departmentID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollAnnualLeaveByDepartment_Result>("STPayrollAnnualLeaveByDepartment", departmentIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual int STPayrollAnnualSummaryInsert(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<short> payRollYearID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var payRollYearIDParameter = payRollYearID.HasValue ?
                new ObjectParameter("PayRollYearID", payRollYearID) :
                new ObjectParameter("PayRollYearID", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollAnnualSummaryInsert", fromDateParameter, todateParameter, payRollYearIDParameter);
        }

        public virtual ObjectResult<STPayrollAnnualSummaryReport_Result> STPayrollAnnualSummaryReport(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollAnnualSummaryReport_Result>("STPayrollAnnualSummaryReport", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollDetailNightShiftUpdate_Result> STPayRollDetailNightShiftUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollDetailNightShiftUpdate_Result>("STPayRollDetailNightShiftUpdate");
        }

        public virtual ObjectResult<STPayRollDetailsCalculateTimeWork_Result> STPayRollDetailsCalculateTimeWork()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollDetailsCalculateTimeWork_Result>("STPayRollDetailsCalculateTimeWork");
        }

        public virtual int STPayRollDetailsLunchPlaceUpdate(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollDetailsLunchPlaceUpdate", employeeIDParameter);
        }

        public virtual int STPayrollDetailsUpdateTimeWork(Nullable<int> varEmployeeID, Nullable<System.DateTime> payrollDate)
        {
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));

            var payrollDateParameter = payrollDate.HasValue ?
                new ObjectParameter("PayrollDate", payrollDate) :
                new ObjectParameter("PayrollDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollDetailsUpdateTimeWork", varEmployeeIDParameter, payrollDateParameter);
        }

        public virtual int STPayrollDetailsUpdateTimeWorkByEmployeeID(Nullable<int> varEmployeeID, Nullable<System.DateTime> varPayrollDate)
        {
            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));

            var varPayrollDateParameter = varPayrollDate.HasValue ?
                new ObjectParameter("varPayrollDate", varPayrollDate) :
                new ObjectParameter("varPayrollDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollDetailsUpdateTimeWorkByEmployeeID", varEmployeeIDParameter, varPayrollDateParameter);
        }

        public virtual int STPayRollDetailUpdate(Nullable<int> varPayRollMonthID)
        {
            var varPayRollMonthIDParameter = varPayRollMonthID.HasValue ?
                new ObjectParameter("varPayRollMonthID", varPayRollMonthID) :
                new ObjectParameter("varPayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollDetailUpdate", varPayRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollMonthIDList_Result> STPayRollMonthIDList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthIDList_Result>("STPayRollMonthIDList");
        }

        public virtual ObjectResult<STPayRollMonthlyBirthdayReport_Result> STPayRollMonthlyBirthdayReport(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyBirthdayReport_Result>("STPayRollMonthlyBirthdayReport", payRollMonthIDParameter);
        }

        public virtual int STPayRollMonthlyBirthdayUpdate(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyBirthdayUpdate", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyByDateReport_Result> STPayRollMonthlyByDateReport(Nullable<int> payRollMonthID, Nullable<bool> contractPermanent)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var contractPermanentParameter = contractPermanent.HasValue ?
                new ObjectParameter("ContractPermanent", contractPermanent) :
                new ObjectParameter("ContractPermanent", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyByDateReport_Result>("STPayRollMonthlyByDateReport", payRollMonthIDParameter, contractPermanentParameter);
        }

        public virtual int STPayrollMonthlyCheckAll(Nullable<int> payRollMonthID, string userName, Nullable<bool> flag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollMonthlyCheckAll", payRollMonthIDParameter, userNameParameter, flagParameter);
        }

        public virtual int STPayrollMonthlyDetailDelete(Nullable<int> payRollMonthlyDetailID)
        {
            var payRollMonthlyDetailIDParameter = payRollMonthlyDetailID.HasValue ?
                new ObjectParameter("PayRollMonthlyDetailID", payRollMonthlyDetailID) :
                new ObjectParameter("PayRollMonthlyDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollMonthlyDetailDelete", payRollMonthlyDetailIDParameter);
        }

        public virtual ObjectResult<STPayrollMonthlyDetailProblems_Result> STPayrollMonthlyDetailProblems(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollMonthlyDetailProblems_Result>("STPayrollMonthlyDetailProblems", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyDetailReport_Result> STPayRollMonthlyDetailReport(Nullable<int> payRollMonthID, Nullable<int> positionID, Nullable<byte> departmentID, Nullable<int> shiftFlag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));

            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(byte));

            var shiftFlagParameter = shiftFlag.HasValue ?
                new ObjectParameter("ShiftFlag", shiftFlag) :
                new ObjectParameter("ShiftFlag", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyDetailReport_Result>("STPayRollMonthlyDetailReport", payRollMonthIDParameter, positionIDParameter, departmentIDParameter, shiftFlagParameter);
        }

        public virtual ObjectResult<STPayrollMonthlyEvaluation_Result> STPayrollMonthlyEvaluation(Nullable<int> payRollMonthID, Nullable<int> positionID, Nullable<byte> departmentID, Nullable<byte> shift, Nullable<byte> flag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));

            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(byte));

            var shiftParameter = shift.HasValue ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(byte));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollMonthlyEvaluation_Result>("STPayrollMonthlyEvaluation", payRollMonthIDParameter, positionIDParameter, departmentIDParameter, shiftParameter, flagParameter);
        }

        public virtual ObjectResult<STPayrollMonthlyEvaluationEvents_Result> STPayrollMonthlyEvaluationEvents(Nullable<int> employeeID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollMonthlyEvaluationEvents_Result>("STPayrollMonthlyEvaluationEvents", employeeIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual int STPayrollMonthlyLockOrderUpdate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayrollMonthlyLockOrderUpdate", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyOverTimeInvalid_Result> STPayRollMonthlyOverTimeInvalid(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyOverTimeInvalid_Result>("STPayRollMonthlyOverTimeInvalid", payRollMonthIDParameter);
        }

        public virtual int STPayRollMonthlyOverTimeOutputParameter(Nullable<int> inputPara1, ObjectParameter outputPara1)
        {
            var inputPara1Parameter = inputPara1.HasValue ?
                new ObjectParameter("InputPara1", inputPara1) :
                new ObjectParameter("InputPara1", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyOverTimeOutputParameter", inputPara1Parameter, outputPara1);
        }

        public virtual int STPayRollMonthlyOverTimeRemarkUpdate(Nullable<int> employeeOTSupervisorID, string authorisedBy, string remarks)
        {
            var employeeOTSupervisorIDParameter = employeeOTSupervisorID.HasValue ?
                new ObjectParameter("EmployeeOTSupervisorID", employeeOTSupervisorID) :
                new ObjectParameter("EmployeeOTSupervisorID", typeof(int));

            var authorisedByParameter = authorisedBy != null ?
                new ObjectParameter("AuthorisedBy", authorisedBy) :
                new ObjectParameter("AuthorisedBy", typeof(string));

            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyOverTimeRemarkUpdate", employeeOTSupervisorIDParameter, authorisedByParameter, remarksParameter);
        }

        public virtual int STPayRollMonthlyOverTimeUpdate(Nullable<int> employeeOTSupervisorID, Nullable<int> employeeID, string authorisedBy, Nullable<int> flag, ObjectParameter message)
        {
            var employeeOTSupervisorIDParameter = employeeOTSupervisorID.HasValue ?
                new ObjectParameter("EmployeeOTSupervisorID", employeeOTSupervisorID) :
                new ObjectParameter("EmployeeOTSupervisorID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var authorisedByParameter = authorisedBy != null ?
                new ObjectParameter("AuthorisedBy", authorisedBy) :
                new ObjectParameter("AuthorisedBy", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyOverTimeUpdate", employeeOTSupervisorIDParameter, employeeIDParameter, authorisedByParameter, flagParameter, message);
        }

        public virtual ObjectResult<STPayRollMonthlyPerformanceAverage_Result> STPayRollMonthlyPerformanceAverage(Nullable<int> positionID, Nullable<byte> departmentID, Nullable<int> shiftFlag, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<float> average)
        {
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));

            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(byte));

            var shiftFlagParameter = shiftFlag.HasValue ?
                new ObjectParameter("ShiftFlag", shiftFlag) :
                new ObjectParameter("ShiftFlag", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var averageParameter = average.HasValue ?
                new ObjectParameter("Average", average) :
                new ObjectParameter("Average", typeof(float));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyPerformanceAverage_Result>("STPayRollMonthlyPerformanceAverage", positionIDParameter, departmentIDParameter, shiftFlagParameter, fromDateParameter, toDateParameter, averageParameter);
        }

        public virtual int STPayRollMonthlyPerformanceAverageUpdate(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyPerformanceAverageUpdate", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyPerformanceChart_Result> STPayRollMonthlyPerformanceChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyPerformanceChart_Result>("STPayRollMonthlyPerformanceChart");
        }

        public virtual int STPayRollMonthlyPersonnelInsert(Nullable<int> payrollMonthID, string createdBy)
        {
            var payrollMonthIDParameter = payrollMonthID.HasValue ?
                new ObjectParameter("PayrollMonthID", payrollMonthID) :
                new ObjectParameter("PayrollMonthID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyPersonnelInsert", payrollMonthIDParameter, createdByParameter);
        }

        public virtual ObjectResult<STPayrollMonthlyProblemCheck_Result> STPayrollMonthlyProblemCheck(Nullable<int> varPayRollMonthID)
        {
            var varPayRollMonthIDParameter = varPayRollMonthID.HasValue ?
                new ObjectParameter("varPayRollMonthID", varPayRollMonthID) :
                new ObjectParameter("varPayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollMonthlyProblemCheck_Result>("STPayrollMonthlyProblemCheck", varPayRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyRecordings_Result> STPayRollMonthlyRecordings(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyRecordings_Result>("STPayRollMonthlyRecordings", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyReport_Result> STPayRollMonthlyReport(Nullable<int> payRollMonthID, Nullable<bool> flag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyReport_Result>("STPayRollMonthlyReport", payRollMonthIDParameter, flagParameter);
        }

        public virtual ObjectResult<STPayRollMonthlyRewardPunishReport_Result> STPayRollMonthlyRewardPunishReport(Nullable<int> payRollMonthID, Nullable<bool> flag)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlyRewardPunishReport_Result>("STPayRollMonthlyRewardPunishReport", payRollMonthIDParameter, flagParameter);
        }

        public virtual ObjectResult<STPayRollMonthlySum_Result> STPayRollMonthlySum()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollMonthlySum_Result>("STPayRollMonthlySum");
        }

        public virtual int STPayRollMonthlyUpdate1Employee(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> varPayRollMonthID, Nullable<int> employeeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var varPayRollMonthIDParameter = varPayRollMonthID.HasValue ?
                new ObjectParameter("varPayRollMonthID", varPayRollMonthID) :
                new ObjectParameter("varPayRollMonthID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyUpdate1Employee", fromDateParameter, toDateParameter, varPayRollMonthIDParameter, employeeIDParameter);
        }

        public virtual int STPayRollMonthlyUpdateABCTemp(Nullable<int> employeeID, Nullable<int> varPayRollMonthID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var varPayRollMonthIDParameter = varPayRollMonthID.HasValue ?
                new ObjectParameter("varPayRollMonthID", varPayRollMonthID) :
                new ObjectParameter("varPayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyUpdateABCTemp", employeeIDParameter, varPayRollMonthIDParameter);
        }

        public virtual int STPayRollMonthlyUpdateAll(Nullable<int> varPayRollMonthID, string updatedBy)
        {
            var varPayRollMonthIDParameter = varPayRollMonthID.HasValue ?
                new ObjectParameter("varPayRollMonthID", varPayRollMonthID) :
                new ObjectParameter("varPayRollMonthID", typeof(int));

            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPayRollMonthlyUpdateAll", varPayRollMonthIDParameter, updatedByParameter);
        }

        public virtual ObjectResult<STPayRollOverTimeSummaryReport_Result> STPayRollOverTimeSummaryReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollOverTimeSummaryReport_Result>("STPayRollOverTimeSummaryReport", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STPayRollStockMovementRecordings_Result> STPayRollStockMovementRecordings(Nullable<int> payRollMonthID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayRollStockMovementRecordings_Result>("STPayRollStockMovementRecordings", payRollMonthIDParameter, fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STPayrollSummaryByMonth_Result> STPayrollSummaryByMonth(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<byte> departmentID, Nullable<int> wDay)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(byte));

            var wDayParameter = wDay.HasValue ?
                new ObjectParameter("WDay", wDay) :
                new ObjectParameter("WDay", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPayrollSummaryByMonth_Result>("STPayrollSummaryByMonth", fromDateParameter, todateParameter, departmentIDParameter, wDayParameter);
        }

        public virtual int STPettyCashAdvance(Nullable<int> pettyCashID)
        {
            var pettyCashIDParameter = pettyCashID.HasValue ?
                new ObjectParameter("PettyCashID", pettyCashID) :
                new ObjectParameter("PettyCashID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPettyCashAdvance", pettyCashIDParameter);
        }

        public virtual int STPettyCashAdvanceOutstanding(Nullable<int> pettyCashID, Nullable<int> employeeID)
        {
            var pettyCashIDParameter = pettyCashID.HasValue ?
                new ObjectParameter("PettyCashID", pettyCashID) :
                new ObjectParameter("PettyCashID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPettyCashAdvanceOutstanding", pettyCashIDParameter, employeeIDParameter);
        }

        public virtual ObjectResult<STPickingSlip_Result> STPickingSlip(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPickingSlip_Result>("STPickingSlip", varDispatchingOrderIDParameter);
        }

        public virtual int STPickingSlipManyOrderAddNew(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPickingSlipManyOrderAddNew", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<ST_WMS_FindUserLogin_Result> ST_WMS_FindUserLogin(string loginName, string password)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_FindUserLogin_Result>("ST_WMS_FindUserLogin", loginNameParameter, passwordParameter);
        }

        public virtual int STPickingSlipManyOrderAddNewLabels(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPickingSlipManyOrderAddNewLabels", dispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STPickingSlipManyOrderReport_Result> STPickingSlipManyOrderReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPickingSlipManyOrderReport_Result>("STPickingSlipManyOrderReport");
        }

        public virtual int STPickingSlipManyOrders(string p_str)
        {
            var p_strParameter = p_str != null ?
                new ObjectParameter("p_str", p_str) :
                new ObjectParameter("p_str", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPickingSlipManyOrders", p_strParameter);
        }

        public virtual int STPickingSlipManyOrdersByRoom(Nullable<int> varDispatchingOrderID, string roomID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPickingSlipManyOrdersByRoom", varDispatchingOrderIDParameter, roomIDParameter);
        }

        public virtual ObjectResult<STPickingSlipOldOrders_Result> STPickingSlipOldOrders(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPickingSlipOldOrders_Result>("STPickingSlipOldOrders", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STPickingSlipReplenishment_Result> STPickingSlipReplenishment(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPickingSlipReplenishment_Result>("STPickingSlipReplenishment", dispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STPickingSlipWithPalletID_Result> STPickingSlipWithPalletID(Nullable<int> varDispatchingOrderID)
        {
            var varDispatchingOrderIDParameter = varDispatchingOrderID.HasValue ?
                new ObjectParameter("varDispatchingOrderID", varDispatchingOrderID) :
                new ObjectParameter("varDispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPickingSlipWithPalletID_Result>("STPickingSlipWithPalletID", varDispatchingOrderIDParameter);
        }

        public virtual ObjectResult<STProblem_AvailableConfirm_Result> STProblem_AvailableConfirm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_AvailableConfirm_Result>("STProblem_AvailableConfirm");
        }

        public virtual ObjectResult<STProblem_CustomerComplainReport_Result> STProblem_CustomerComplainReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerMainID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_CustomerComplainReport_Result>("STProblem_CustomerComplainReport", fromDateParameter, toDateParameter, customerMainIDParameter);
        }

        public virtual ObjectResult<STProblem_DataRaw_Result> STProblem_DataRaw(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_DataRaw_Result>("STProblem_DataRaw", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<STProblem_InternalAuditReport_Result> STProblem_InternalAuditReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerMainID, Nullable<int> departmentID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_InternalAuditReport_Result>("STProblem_InternalAuditReport", fromDateParameter, toDateParameter, customerMainIDParameter, departmentIDParameter);
        }

        public virtual ObjectResult<STProblem_ProductDamageNote_Result> STProblem_ProductDamageNote(Nullable<int> internalAuditID)
        {
            var internalAuditIDParameter = internalAuditID.HasValue ?
                new ObjectParameter("InternalAuditID", internalAuditID) :
                new ObjectParameter("InternalAuditID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_ProductDamageNote_Result>("STProblem_ProductDamageNote", internalAuditIDParameter);
        }

        public virtual ObjectResult<STProblem_ProductDamageReport_Result> STProblem_ProductDamageReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> problemCategoryID, Nullable<int> customerMainID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var problemCategoryIDParameter = problemCategoryID.HasValue ?
                new ObjectParameter("ProblemCategoryID", problemCategoryID) :
                new ObjectParameter("ProblemCategoryID", typeof(int));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_ProductDamageReport_Result>("STProblem_ProductDamageReport", fromDateParameter, toDateParameter, problemCategoryIDParameter, customerMainIDParameter);
        }

        public virtual ObjectResult<STProblem_ReviewByDate_Result> STProblem_ReviewByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string assignedTo, Nullable<bool> flagLate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var assignedToParameter = assignedTo != null ?
                new ObjectParameter("AssignedTo", assignedTo) :
                new ObjectParameter("AssignedTo", typeof(string));

            var flagLateParameter = flagLate.HasValue ?
                new ObjectParameter("FlagLate", flagLate) :
                new ObjectParameter("FlagLate", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_ReviewByDate_Result>("STProblem_ReviewByDate", fromDateParameter, toDateParameter, assignedToParameter, flagLateParameter);
        }

        public virtual ObjectResult<STProblem_SummaryByMonthCrosstapReport_Result> STProblem_SummaryByMonthCrosstapReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblem_SummaryByMonthCrosstapReport_Result>("STProblem_SummaryByMonthCrosstapReport");
        }

        public virtual ObjectResult<STProblemIdentification_Result> STProblemIdentification(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> varLocationID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var varLocationIDParameter = varLocationID.HasValue ?
                new ObjectParameter("VarLocationID", varLocationID) :
                new ObjectParameter("VarLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProblemIdentification_Result>("STProblemIdentification", fromDateParameter, todateParameter, varLocationIDParameter);
        }

        public virtual int STProductChangeHomeLocations(Nullable<int> varCustomerID, string varHomeRoom1, string varHomeRoom2)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varHomeRoom1Parameter = varHomeRoom1 != null ?
                new ObjectParameter("varHomeRoom1", varHomeRoom1) :
                new ObjectParameter("varHomeRoom1", typeof(string));

            var varHomeRoom2Parameter = varHomeRoom2 != null ?
                new ObjectParameter("varHomeRoom2", varHomeRoom2) :
                new ObjectParameter("varHomeRoom2", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductChangeHomeLocations", varCustomerIDParameter, varHomeRoom1Parameter, varHomeRoom2Parameter);
        }

        public virtual ObjectResult<STProductChanging_Result> STProductChanging(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> flag, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductChanging_Result>("STProductChanging", fromDateParameter, toDateParameter, flagParameter, customerIDParameter);
        }

        public virtual ObjectResult<STProductChangingSearch_Result> STProductChangingSearch(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<byte> flag, string referenceID, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var referenceIDParameter = referenceID != null ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductChangingSearch_Result>("STProductChangingSearch", fromDateParameter, toDateParameter, flagParameter, referenceIDParameter, customerIDParameter);
        }

        public virtual int STProductCopyNew(Nullable<int> varProductID, string createdBy, ObjectParameter newProductID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductCopyNew", varProductIDParameter, createdByParameter, newProductID);
        }

        public virtual ObjectResult<STProductDamageReport_Result> STProductDamageReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerMainID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductDamageReport_Result>("STProductDamageReport", fromDateParameter, toDateParameter, customerMainIDParameter);
        }

        public virtual int STProductDelete(Nullable<int> varProductID, ObjectParameter varDeleted)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductDelete", varProductIDParameter, varDeleted);
        }

        public virtual int STProductDeleteAndChange(Nullable<int> varOldProductID, Nullable<int> varNewProductID, string varUser)
        {
            var varOldProductIDParameter = varOldProductID.HasValue ?
                new ObjectParameter("varOldProductID", varOldProductID) :
                new ObjectParameter("varOldProductID", typeof(int));

            var varNewProductIDParameter = varNewProductID.HasValue ?
                new ObjectParameter("varNewProductID", varNewProductID) :
                new ObjectParameter("varNewProductID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductDeleteAndChange", varOldProductIDParameter, varNewProductIDParameter, varUserParameter);
        }

        public virtual int STProductDeleteDiscontinue(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductDeleteDiscontinue", varCustomerIDParameter);
        }

        public virtual int STProductDeleteRODODelete(Nullable<int> varProductID)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductDeleteRODODelete", varProductIDParameter);
        }

        public virtual int STProductDeleteRODODeleteCompact()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductDeleteRODODeleteCompact");
        }

        public virtual ObjectResult<STProductDeleteRODOListProducts_Result> STProductDeleteRODOListProducts(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductDeleteRODOListProducts_Result>("STProductDeleteRODOListProducts", varCustomerIDParameter);
        }

        public virtual ObjectResult<Nullable<int>> STProductIDFind(Nullable<int> customerID, string productNumberNEw)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productNumberNEwParameter = productNumberNEw != null ?
                new ObjectParameter("ProductNumberNEw", productNumberNEw) :
                new ObjectParameter("ProductNumberNEw", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("STProductIDFind", customerIDParameter, productNumberNEwParameter);
        }

        public virtual ObjectResult<STProductTracingReport_Result> STProductTracingReport(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductTracingReport_Result>("STProductTracingReport", varConditionParameter);
        }

        public virtual ObjectResult<STProductTracingRO_Result> STProductTracingRO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductTracingRO_Result>("STProductTracingRO", fromDateParameter, toDateParameter, customerIDParameter);
        }

        public virtual ObjectResult<STProductTracingRODetails_Result> STProductTracingRODetails(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STProductTracingRODetails_Result>("STProductTracingRODetails", receivingOrderIDParameter);
        }

        public virtual int STProductUpdate(Nullable<int> varProductID, string varOrderNumberStrR, string varOrderNumberStrD, string updateBy)
        {
            var varProductIDParameter = varProductID.HasValue ?
                new ObjectParameter("varProductID", varProductID) :
                new ObjectParameter("varProductID", typeof(int));

            var varOrderNumberStrRParameter = varOrderNumberStrR != null ?
                new ObjectParameter("varOrderNumberStrR", varOrderNumberStrR) :
                new ObjectParameter("varOrderNumberStrR", typeof(string));

            var varOrderNumberStrDParameter = varOrderNumberStrD != null ?
                new ObjectParameter("varOrderNumberStrD", varOrderNumberStrD) :
                new ObjectParameter("varOrderNumberStrD", typeof(string));

            var varOrderUpdateByDParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductUpdate", varProductIDParameter, varOrderNumberStrRParameter, varOrderNumberStrDParameter, varOrderUpdateByDParameter);
        }

        public virtual int STProductUpdateHomeLocation1_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STProductUpdateHomeLocation1_2");
        }

        public virtual ObjectResult<STPropertyRemainByCustomer_Result> STPropertyRemainByCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STPropertyRemainByCustomer_Result>("STPropertyRemainByCustomer");
        }

        public virtual int STPropertySummary1MonthInsert(Nullable<int> propertyID)
        {
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("PropertyID", propertyID) :
                new ObjectParameter("PropertyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPropertySummary1MonthInsert", propertyIDParameter);
        }

        public virtual int STPropertySummaryMonthlyInsert(Nullable<int> payRollMonthIDMIN)
        {
            var payRollMonthIDMINParameter = payRollMonthIDMIN.HasValue ?
                new ObjectParameter("PayRollMonthIDMIN", payRollMonthIDMIN) :
                new ObjectParameter("PayRollMonthIDMIN", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPropertySummaryMonthlyInsert", payRollMonthIDMINParameter);
        }

        public virtual int STPropertySummaryReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPropertySummaryReport");
        }

        public virtual int STPurchaseOrderBySupplierID(Nullable<int> supplierID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPurchaseOrderBySupplierID", supplierIDParameter);
        }

        public virtual int STPurchasingOrderDetailAccept(Nullable<int> purchasingOrderID, Nullable<byte> status)
        {
            var purchasingOrderIDParameter = purchasingOrderID.HasValue ?
                new ObjectParameter("PurchasingOrderID", purchasingOrderID) :
                new ObjectParameter("PurchasingOrderID", typeof(int));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STPurchasingOrderDetailAccept", purchasingOrderIDParameter, statusParameter);
        }

        public virtual ObjectResult<STQADetailWeeklyReport_Result> STQADetailWeeklyReport(Nullable<int> customerID, Nullable<bool> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STQADetailWeeklyReport_Result>("STQADetailWeeklyReport", customerIDParameter, flagParameter);
        }

        public virtual ObjectResult<STQARecorderReport_Result> STQARecorderReport(Nullable<int> qAReportID)
        {
            var qAReportIDParameter = qAReportID.HasValue ?
                new ObjectParameter("QAReportID", qAReportID) :
                new ObjectParameter("QAReportID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STQARecorderReport_Result>("STQARecorderReport", qAReportIDParameter);
        }

        public virtual int STQARecorderUpdate(Nullable<int> qAReportID, string recorderTransporter)
        {
            var qAReportIDParameter = qAReportID.HasValue ?
                new ObjectParameter("QAReportID", qAReportID) :
                new ObjectParameter("QAReportID", typeof(int));

            var recorderTransporterParameter = recorderTransporter != null ?
                new ObjectParameter("RecorderTransporter", recorderTransporter) :
                new ObjectParameter("RecorderTransporter", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQARecorderUpdate", qAReportIDParameter, recorderTransporterParameter);
        }

        public virtual int STQAReportDetailInsertAll(Nullable<int> receivingOrderID, string createdBy)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQAReportDetailInsertAll", receivingOrderIDParameter, createdByParameter);
        }

        public virtual ObjectResult<STQAWeeklyReport_Result> STQAWeeklyReport(Nullable<int> customerID, Nullable<bool> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STQAWeeklyReport_Result>("STQAWeeklyReport", customerIDParameter, flagParameter);
        }

        public virtual int STQualityCheckingExportProcess(Nullable<byte> flag, Nullable<int> orderID, Nullable<System.DateTime> reportDate, string createdBy)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));

            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQualityCheckingExportProcess", flagParameter, orderIDParameter, reportDateParameter, createdByParameter);
        }

        public virtual ObjectResult<STQuarantineNewProduct_Result> STQuarantineNewProduct(Nullable<int> customerID, Nullable<bool> flag, Nullable<bool> flagSorting)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            var flagSortingParameter = flagSorting.HasValue ?
                new ObjectParameter("FlagSorting", flagSorting) :
                new ObjectParameter("FlagSorting", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STQuarantineNewProduct_Result>("STQuarantineNewProduct", customerIDParameter, flagParameter, flagSortingParameter);
        }

        public virtual ObjectResult<STQuarantineNote_Result> STQuarantineNote(Nullable<int> quarantineID)
        {
            var quarantineIDParameter = quarantineID.HasValue ?
                new ObjectParameter("QuarantineID", quarantineID) :
                new ObjectParameter("QuarantineID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STQuarantineNote_Result>("STQuarantineNote", quarantineIDParameter);
        }

        public virtual ObjectResult<STQuarantineReleaseReport_Result> STQuarantineReleaseReport(Nullable<int> quarantineID)
        {
            var quarantineIDParameter = quarantineID.HasValue ?
                new ObjectParameter("QuarantineID", quarantineID) :
                new ObjectParameter("QuarantineID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STQuarantineReleaseReport_Result>("STQuarantineReleaseReport", quarantineIDParameter);
        }

        public virtual int STQuarantineROCreate(Nullable<int> customerID, Nullable<int> receivingOrderID, string currentUser, ObjectParameter quarantineID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQuarantineROCreate", customerIDParameter, receivingOrderIDParameter, currentUserParameter, quarantineID);
        }

        public virtual int STQuarantineSearchReturn(Nullable<int> receivingOrderID, ObjectParameter quarantineID, ObjectParameter rOStatus)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQuarantineSearchReturn", receivingOrderIDParameter, quarantineID, rOStatus);
        }

        public virtual int STQuarantineUpdate1Pallet(Nullable<int> palletID, Nullable<int> flag, string holdDescription, string currentUser)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            var holdDescriptionParameter = holdDescription != null ?
                new ObjectParameter("HoldDescription", holdDescription) :
                new ObjectParameter("HoldDescription", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQuarantineUpdate1Pallet", palletIDParameter, flagParameter, holdDescriptionParameter, currentUserParameter);
        }

        public virtual int STQuarantineUpdatePallets(Nullable<int> quarantineID, Nullable<int> receivingOrderDetailID, Nullable<int> flag, Nullable<int> quarantineDetailID, string currentUser, Nullable<byte> palletStatus)
        {
            var quarantineIDParameter = quarantineID.HasValue ?
                new ObjectParameter("QuarantineID", quarantineID) :
                new ObjectParameter("QuarantineID", typeof(int));

            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            var quarantineDetailIDParameter = quarantineDetailID.HasValue ?
                new ObjectParameter("QuarantineDetailID", quarantineDetailID) :
                new ObjectParameter("QuarantineDetailID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var palletStatusParameter = palletStatus.HasValue ?
                new ObjectParameter("PalletStatus", palletStatus) :
                new ObjectParameter("PalletStatus", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STQuarantineUpdatePallets", quarantineIDParameter, receivingOrderDetailIDParameter, flagParameter, quarantineDetailIDParameter, currentUserParameter, palletStatusParameter);
        }

        public virtual int STRackingConfigurationUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STRackingConfigurationUpdate");
        }

        public virtual ObjectResult<STReceivingAdvice_Result> STReceivingAdvice(Nullable<int> varReceivingOrderID)
        {
            var varReceivingOrderIDParameter = varReceivingOrderID.HasValue ?
                new ObjectParameter("varReceivingOrderID", varReceivingOrderID) :
                new ObjectParameter("varReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingAdvice_Result>("STReceivingAdvice", varReceivingOrderIDParameter);
        }

        public virtual int STReceivingAdviceManyOrderAddNew(Nullable<int> varReceivingOrderID)
        {
            var varReceivingOrderIDParameter = varReceivingOrderID.HasValue ?
                new ObjectParameter("varReceivingOrderID", varReceivingOrderID) :
                new ObjectParameter("varReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingAdviceManyOrderAddNew", varReceivingOrderIDParameter);
        }

        public virtual int STReceivingAdviceManyOrders(string p_str)
        {
            var p_strParameter = p_str != null ?
                new ObjectParameter("p_str", p_str) :
                new ObjectParameter("p_str", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingAdviceManyOrders", p_strParameter);
        }

        public virtual int STReceivingCartonDelete(Nullable<int> receivingOrderDetailID, string userID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingCartonDelete", receivingOrderDetailIDParameter, userIDParameter);
        }

        public virtual int STReceivingCartonInsert(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingCartonInsert", receivingOrderIDParameter);
        }

        public virtual int STReceivingCartonInsert_Metro(Nullable<int> receivingOrderDetailID, Nullable<int> sealNumberBegin)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var sealNumberBeginParameter = sealNumberBegin.HasValue ?
                new ObjectParameter("SealNumberBegin", sealNumberBegin) :
                new ObjectParameter("SealNumberBegin", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingCartonInsert_Metro", receivingOrderDetailIDParameter, sealNumberBeginParameter);
        }

        public virtual ObjectResult<STReceivingCartonReport_Result> STReceivingCartonReport(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingCartonReport_Result>("STReceivingCartonReport", receivingOrderIDParameter);
        }

        public virtual ObjectResult<STReceivingNote_Result> STReceivingNote(Nullable<int> varReceivingOrderID, Nullable<byte> flag)
        {
            var varReceivingOrderIDParameter = varReceivingOrderID.HasValue ?
                new ObjectParameter("varReceivingOrderID", varReceivingOrderID) :
                new ObjectParameter("varReceivingOrderID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingNote_Result>("STReceivingNote", varReceivingOrderIDParameter, flagParameter);
        }

        public virtual ObjectResult<STReceivingNoteByCarton_Result> STReceivingNoteByCarton(Nullable<int> varReceivingOrderID, Nullable<byte> flag)
        {
            var varReceivingOrderIDParameter = varReceivingOrderID.HasValue ?
                new ObjectParameter("varReceivingOrderID", varReceivingOrderID) :
                new ObjectParameter("varReceivingOrderID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingNoteByCarton_Result>("STReceivingNoteByCarton", varReceivingOrderIDParameter, flagParameter);
        }

        public virtual int STReceivingOrderDetailBreak(Nullable<int> receivingOrderDetailID, Nullable<int> breakingQuantity, string currentUser)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var breakingQuantityParameter = breakingQuantity.HasValue ?
                new ObjectParameter("BreakingQuantity", breakingQuantity) :
                new ObjectParameter("BreakingQuantity", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailBreak", receivingOrderDetailIDParameter, breakingQuantityParameter, currentUserParameter);
        }

        public virtual int STReceivingOrderDetailChangeProductID(Nullable<int> newProductID, string newProductNumber, Nullable<float> newWeightPerPackage, Nullable<int> receivingOrderDetailID, string oldProductNumber, string currentUser, string receivingOrderNumber, Nullable<int> receivingOrderID)
        {
            var newProductIDParameter = newProductID.HasValue ?
                new ObjectParameter("NewProductID", newProductID) :
                new ObjectParameter("NewProductID", typeof(int));

            var newProductNumberParameter = newProductNumber != null ?
                new ObjectParameter("NewProductNumber", newProductNumber) :
                new ObjectParameter("NewProductNumber", typeof(string));

            var newWeightPerPackageParameter = newWeightPerPackage.HasValue ?
                new ObjectParameter("NewWeightPerPackage", newWeightPerPackage) :
                new ObjectParameter("NewWeightPerPackage", typeof(float));

            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var oldProductNumberParameter = oldProductNumber != null ?
                new ObjectParameter("OldProductNumber", oldProductNumber) :
                new ObjectParameter("OldProductNumber", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var receivingOrderNumberParameter = receivingOrderNumber != null ?
                new ObjectParameter("ReceivingOrderNumber", receivingOrderNumber) :
                new ObjectParameter("ReceivingOrderNumber", typeof(string));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailChangeProductID", newProductIDParameter, newProductNumberParameter, newWeightPerPackageParameter, receivingOrderDetailIDParameter, oldProductNumberParameter, currentUserParameter, receivingOrderNumberParameter, receivingOrderIDParameter);
        }

        public virtual int STReceivingOrderDetailChangeProductWI(Nullable<int> newProductID, string newProductNumber, Nullable<float> newWeightPerPackage, Nullable<int> receivingOrderDetailID, string oldProductNumber, string currentUser, string receivingOrderNumber, Nullable<int> receivingOrderID)
        {
            var newProductIDParameter = newProductID.HasValue ?
                new ObjectParameter("NewProductID", newProductID) :
                new ObjectParameter("NewProductID", typeof(int));

            var newProductNumberParameter = newProductNumber != null ?
                new ObjectParameter("NewProductNumber", newProductNumber) :
                new ObjectParameter("NewProductNumber", typeof(string));

            var newWeightPerPackageParameter = newWeightPerPackage.HasValue ?
                new ObjectParameter("NewWeightPerPackage", newWeightPerPackage) :
                new ObjectParameter("NewWeightPerPackage", typeof(float));

            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var oldProductNumberParameter = oldProductNumber != null ?
                new ObjectParameter("OldProductNumber", oldProductNumber) :
                new ObjectParameter("OldProductNumber", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var receivingOrderNumberParameter = receivingOrderNumber != null ?
                new ObjectParameter("ReceivingOrderNumber", receivingOrderNumber) :
                new ObjectParameter("ReceivingOrderNumber", typeof(string));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailChangeProductWI", newProductIDParameter, newProductNumberParameter, newWeightPerPackageParameter, receivingOrderDetailIDParameter, oldProductNumberParameter, currentUserParameter, receivingOrderNumberParameter, receivingOrderIDParameter);
        }

        public virtual int STReceivingOrderDetailDelete(Nullable<int> varReceivingOrderDetailID, string varUser)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailDelete", varReceivingOrderDetailIDParameter, varUserParameter);
        }

        public virtual int STReceivingOrderDetailInsert(Nullable<int> receivingOrderID, string receivingOrderNumber, string productNumber, string productName, Nullable<int> productID, Nullable<short> packagePerPallet, Nullable<short> quantity, Nullable<float> weightPerPackage, string customerRef, string currentUser, Nullable<bool> toPickingLocation, Nullable<System.DateTime> productionDate, Nullable<System.DateTime> useByDate, string varRemark)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var receivingOrderNumberParameter = receivingOrderNumber != null ?
                new ObjectParameter("ReceivingOrderNumber", receivingOrderNumber) :
                new ObjectParameter("ReceivingOrderNumber", typeof(string));

            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));

            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var packagePerPalletParameter = packagePerPallet.HasValue ?
                new ObjectParameter("PackagePerPallet", packagePerPallet) :
                new ObjectParameter("PackagePerPallet", typeof(short));

            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(short));

            var weightPerPackageParameter = weightPerPackage.HasValue ?
                new ObjectParameter("WeightPerPackage", weightPerPackage) :
                new ObjectParameter("WeightPerPackage", typeof(float));

            var customerRefParameter = customerRef != null ?
                new ObjectParameter("CustomerRef", customerRef) :
                new ObjectParameter("CustomerRef", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            var toPickingLocationParameter = toPickingLocation.HasValue ?
                new ObjectParameter("ToPickingLocation", toPickingLocation) :
                new ObjectParameter("ToPickingLocation", typeof(bool));

            var productionDateParameter = productionDate.HasValue ?
                new ObjectParameter("ProductionDate", productionDate) :
                new ObjectParameter("ProductionDate", typeof(System.DateTime));

            var useByDateParameter = useByDate.HasValue ?
                new ObjectParameter("UseByDate", useByDate) :
                new ObjectParameter("UseByDate", typeof(System.DateTime));

            var varRemarkParameter = varRemark != null ?
                new ObjectParameter("varRemark", varRemark) :
                new ObjectParameter("varRemark", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailInsert", receivingOrderIDParameter, receivingOrderNumberParameter, productNumberParameter, productNameParameter, productIDParameter, packagePerPalletParameter, quantityParameter, weightPerPackageParameter, customerRefParameter, currentUserParameter, toPickingLocationParameter, productionDateParameter, useByDateParameter, varRemarkParameter);
        }

        public virtual int STReceivingOrderDetailUpdateInformation(Nullable<byte> flag, string information, Nullable<int> receivingOrderDetailID)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var informationParameter = information != null ?
                new ObjectParameter("Information", information) :
                new ObjectParameter("Information", typeof(string));

            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailUpdateInformation", flagParameter, informationParameter, receivingOrderDetailIDParameter);
        }

        public virtual int STReceivingOrderDetailUpdateQty(Nullable<int> varReceivingOrderDetailID)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailUpdateQty", varReceivingOrderDetailIDParameter);
        }

        public virtual int STReceivingOrderDetailUpdateQty1(Nullable<int> varReceivingOrderDetailID)
        {
            var varReceivingOrderDetailIDParameter = varReceivingOrderDetailID.HasValue ?
                new ObjectParameter("varReceivingOrderDetailID", varReceivingOrderDetailID) :
                new ObjectParameter("varReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailUpdateQty1", varReceivingOrderDetailIDParameter);
        }

        public virtual ObjectResult<STReceivingOrderDetailView_Result> STReceivingOrderDetailView(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingOrderDetailView_Result>("STReceivingOrderDetailView", receivingOrderIDParameter);
        }

        public virtual int STReceivingOrderPalletCartonWeightUpdate(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderPalletCartonWeightUpdate", receivingOrderIDParameter);
        }

        public virtual ObjectResult<STReceivingOrders_Result> STReceivingOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingOrders_Result>("STReceivingOrders");
        }

        public virtual ObjectResult<STReceivingPalletCartonBarcode_Result> STReceivingPalletCartonBarcode(Nullable<int> palletCartonID)
        {
            var palletCartonIDParameter = palletCartonID.HasValue ?
                new ObjectParameter("PalletCartonID", palletCartonID) :
                new ObjectParameter("PalletCartonID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReceivingPalletCartonBarcode_Result>("STReceivingPalletCartonBarcode", palletCartonIDParameter);
        }

        public virtual int STReceivingPalletCartonWeightingChecking(Nullable<int> receivingOrderID, ObjectParameter weighted)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingPalletCartonWeightingChecking", receivingOrderIDParameter, weighted);
        }

        public virtual ObjectResult<STReleaseByDateDetails_Result> STReleaseByDateDetails(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReleaseByDateDetails_Result>("STReleaseByDateDetails", fromDateParameter, todateParameter, customerIDParameter);
        }

        public virtual ObjectResult<STReleaseByDateSummary_Result> STReleaseByDateSummary(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReleaseByDateSummary_Result>("STReleaseByDateSummary", varFromDateParameter, varTodateParameter, varCustomerIDParameter);
        }

        public virtual int STReleaseFDTDSummary(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReleaseFDTDSummary", varFromDateParameter, varTodateParameter, varCustomerIDParameter);
        }

        public virtual ObjectResult<STReleaseNote_Result> STReleaseNote(Nullable<int> releaseID)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReleaseNote_Result>("STReleaseNote", releaseIDParameter);
        }

        public virtual ObjectResult<STReleaseStockMovement_Result> STReleaseStockMovement(string varFromDate, string varTodate, Nullable<int> varCustomerID)
        {
            var varFromDateParameter = varFromDate != null ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(string));

            var varTodateParameter = varTodate != null ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(string));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STReleaseStockMovement_Result>("STReleaseStockMovement", varFromDateParameter, varTodateParameter, varCustomerIDParameter);
        }

        public virtual int STResizingColumnProductName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STResizingColumnProductName");
        }

        public virtual ObjectResult<STRooms_Result> STRooms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STRooms_Result>("STRooms");
        }

        public virtual ObjectResult<STSafetyClothesRecordingsReport_Result> STSafetyClothesRecordingsReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSafetyClothesRecordingsReport_Result>("STSafetyClothesRecordingsReport", fromDateParameter, toDateParameter);
        }

        public virtual int STSafetyClothesUsedComparisonReport(Nullable<int> payRollMonthID)
        {
            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STSafetyClothesUsedComparisonReport", payRollMonthIDParameter);
        }

        public virtual ObjectResult<STSafetyDaysWithoutAccident_Result> STSafetyDaysWithoutAccident()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSafetyDaysWithoutAccident_Result>("STSafetyDaysWithoutAccident");
        }

        public virtual ObjectResult<STSafetyRackingByLocation1HighGross_Result> STSafetyRackingByLocation1HighGross(Nullable<byte> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSafetyRackingByLocation1HighGross_Result>("STSafetyRackingByLocation1HighGross", flagParameter);
        }

        public virtual int STSafetyStockReasonInsert(Nullable<int> productID6, string owner, Nullable<int> productID6_Stock, Nullable<int> productIDPack_Stock, Nullable<int> productID2_Stock, Nullable<int> reasonID)
        {
            var productID6Parameter = productID6.HasValue ?
                new ObjectParameter("ProductID6", productID6) :
                new ObjectParameter("ProductID6", typeof(int));

            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));

            var productID6_StockParameter = productID6_Stock.HasValue ?
                new ObjectParameter("ProductID6_Stock", productID6_Stock) :
                new ObjectParameter("ProductID6_Stock", typeof(int));

            var productIDPack_StockParameter = productIDPack_Stock.HasValue ?
                new ObjectParameter("ProductIDPack_Stock", productIDPack_Stock) :
                new ObjectParameter("ProductIDPack_Stock", typeof(int));

            var productID2_StockParameter = productID2_Stock.HasValue ?
                new ObjectParameter("ProductID2_Stock", productID2_Stock) :
                new ObjectParameter("ProductID2_Stock", typeof(int));

            var reasonIDParameter = reasonID.HasValue ?
                new ObjectParameter("ReasonID", reasonID) :
                new ObjectParameter("ReasonID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STSafetyStockReasonInsert", productID6Parameter, ownerParameter, productID6_StockParameter, productIDPack_StockParameter, productID2_StockParameter, reasonIDParameter);
        }

        public virtual ObjectResult<STSafetyStockWarning_Result> STSafetyStockWarning()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSafetyStockWarning_Result>("STSafetyStockWarning");
        }

        public virtual ObjectResult<STScheduled_BigC_DeliveryOrders_Result> STScheduled_BigC_DeliveryOrders(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_BigC_DeliveryOrders_Result>("STScheduled_BigC_DeliveryOrders", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_ComboEquipmentID_Result> STScheduled_ComboEquipmentID(string userAccount)
        {
            var userAccountParameter = userAccount != null ?
                new ObjectParameter("UserAccount", userAccount) :
                new ObjectParameter("UserAccount", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_ComboEquipmentID_Result>("STScheduled_ComboEquipmentID", userAccountParameter);
        }

        public virtual ObjectResult<STScheduled_DispatchingNote_Result> STScheduled_DispatchingNote(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_DispatchingNote_Result>("STScheduled_DispatchingNote", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_DispatchingNoteOldDetail_Client_Result> STScheduled_DispatchingNoteOldDetail_Client(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_DispatchingNoteOldDetail_Client_Result>("STScheduled_DispatchingNoteOldDetail_Client", customerIDParameter);
        }

        public virtual int STScheduled_JobByWeekChange(string year, Nullable<int> equipmentID, string editUser)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));

            var equipmentIDParameter = equipmentID.HasValue ?
                new ObjectParameter("EquipmentID", equipmentID) :
                new ObjectParameter("EquipmentID", typeof(int));

            var editUserParameter = editUser != null ?
                new ObjectParameter("EditUser", editUser) :
                new ObjectParameter("EditUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_JobByWeekChange", yearParameter, equipmentIDParameter, editUserParameter);
        }

        public virtual int STScheduled_JobByWeekInsert(string year, Nullable<int> equipmentID)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));

            var equipmentIDParameter = equipmentID.HasValue ?
                new ObjectParameter("EquipmentID", equipmentID) :
                new ObjectParameter("EquipmentID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_JobByWeekInsert", yearParameter, equipmentIDParameter);
        }

        public virtual int STScheduled_JobByWeeks(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_JobByWeeks", yearParameter);
        }

        public virtual int STScheduled_JobGenerateOneInsert(Nullable<int> scheduledJobDefinitionID)
        {
            var scheduledJobDefinitionIDParameter = scheduledJobDefinitionID.HasValue ?
                new ObjectParameter("ScheduledJobDefinitionID", scheduledJobDefinitionID) :
                new ObjectParameter("ScheduledJobDefinitionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_JobGenerateOneInsert", scheduledJobDefinitionIDParameter);
        }

        public virtual ObjectResult<STScheduled_LandingReport_Result> STScheduled_LandingReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_LandingReport_Result>("STScheduled_LandingReport", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_ReceivingNote_Result> STScheduled_ReceivingNote(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_ReceivingNote_Result>("STScheduled_ReceivingNote", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockByLocationDetailReport_Result> STScheduled_StockByLocationDetailReport(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockByLocationDetailReport_Result>("STScheduled_StockByLocationDetailReport", varCustomerIDParameter);
        }

        public virtual int STScheduled_StockByLocationReport(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_StockByLocationReport", varConditionParameter);
        }

        public virtual ObjectResult<STScheduled_StockDispatchedDetailReport_Result> STScheduled_StockDispatchedDetailReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockDispatchedDetailReport_Result>("STScheduled_StockDispatchedDetailReport", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockDispatchedReport_Result> STScheduled_StockDispatchedReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockDispatchedReport_Result>("STScheduled_StockDispatchedReport", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockOnHandByExpiryWarning_Result> STScheduled_StockOnHandByExpiryWarning(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockOnHandByExpiryWarning_Result>("STScheduled_StockOnHandByExpiryWarning", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockOnHandByExpiryWarningByCustomerMain_Result> STScheduled_StockOnHandByExpiryWarningByCustomerMain(Nullable<int> customerMainID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockOnHandByExpiryWarningByCustomerMain_Result>("STScheduled_StockOnHandByExpiryWarningByCustomerMain", customerMainIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockOnHandByLotAvailable_Result> STScheduled_StockOnHandByLotAvailable(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockOnHandByLotAvailable_Result>("STScheduled_StockOnHandByLotAvailable", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockOnHandByLotFonterra_bk20151202_Result> STScheduled_StockOnHandByLotFonterra_bk20151202()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockOnHandByLotFonterra_bk20151202_Result>("STScheduled_StockOnHandByLotFonterra_bk20151202");
        }

        public virtual ObjectResult<STScheduled_StockOnHandByLotReport_Result> STScheduled_StockOnHandByLotReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockOnHandByLotReport_Result>("STScheduled_StockOnHandByLotReport", customerIDParameter);
        }

        public virtual int STScheduled_StockOnHandByRoomAverage(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_StockOnHandByRoomAverage", fromDateParameter, todateParameter);
        }

        public virtual int STScheduled_StockOnHandChecking(Nullable<int> customerID, ObjectParameter stock, Nullable<byte> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_StockOnHandChecking", customerIDParameter, stock, flagParameter);
        }

        public virtual ObjectResult<STScheduled_StockReceived_DateExpiry_Result> STScheduled_StockReceived_DateExpiry(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockReceived_DateExpiry_Result>("STScheduled_StockReceived_DateExpiry", customerIDParameter);
        }

        public virtual ObjectResult<STScheduled_StockReceivedReport_Result> STScheduled_StockReceivedReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_StockReceivedReport_Result>("STScheduled_StockReceivedReport", customerIDParameter);
        }

        public virtual int STScheduled_SummaryInOutLast14Days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STScheduled_SummaryInOutLast14Days");
        }

        public virtual ObjectResult<STScheduled_SummaryNoteDetail_Main_Result> STScheduled_SummaryNoteDetail_Main(Nullable<int> customerMainID, Nullable<bool> flag)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STScheduled_SummaryNoteDetail_Main_Result>("STScheduled_SummaryNoteDetail_Main", customerMainIDParameter, flagParameter);
        }

        public virtual ObjectResult<STSearchAllDatabase_Result> STSearchAllDatabase(string searchString, string operationCode)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));

            var operationCodeParameter = operationCode != null ?
                new ObjectParameter("OperationCode", operationCode) :
                new ObjectParameter("OperationCode", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSearchAllDatabase_Result>("STSearchAllDatabase", searchStringParameter, operationCodeParameter);
        }

        public virtual ObjectResult<STSearchAllDatabaseByCustomer_Result> STSearchAllDatabaseByCustomer(Nullable<int> customerMainID, string searchString, string operationCode)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));

            var operationCodeParameter = operationCode != null ?
                new ObjectParameter("OperationCode", operationCode) :
                new ObjectParameter("OperationCode", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSearchAllDatabaseByCustomer_Result>("STSearchAllDatabaseByCustomer", customerMainIDParameter, searchStringParameter, operationCodeParameter);
        }

        public virtual int STSOLOMON_ContractDetailMissing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STSOLOMON_ContractDetailMissing");
        }

        public virtual ObjectResult<STStockByLocationDeep3Report_Result> STStockByLocationDeep3Report(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByLocationDeep3Report_Result>("STStockByLocationDeep3Report", customerIDParameter);
        }

        public virtual ObjectResult<STStockByLocationGrossWeightReport_Result> STStockByLocationGrossWeightReport(string roomID, Nullable<int> customerID)
        {
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByLocationGrossWeightReport_Result>("STStockByLocationGrossWeightReport", roomIDParameter, customerIDParameter);
        }

        public virtual ObjectResult<STStockByLocationReplenishmentReport_Result> STStockByLocationReplenishmentReport(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByLocationReplenishmentReport_Result>("STStockByLocationReplenishmentReport", customerIDParameter);
        }

        public virtual int STStockByLocationReport(string varCondition, Nullable<bool> flag)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockByLocationReport", varConditionParameter, flagParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadAllUserRole_Result> ST_WMS_LoadAllUserRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadAllUserRole_Result>("ST_WMS_LoadAllUserRole");
        }

        public virtual ObjectResult<STStockByLocationReportByHeight_Result> STStockByLocationReportByHeight(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByLocationReportByHeight_Result>("STStockByLocationReportByHeight", customerIDParameter);
        }

        public virtual ObjectResult<STStockByLocationReportHistoryBydate_Result> STStockByLocationReportHistoryBydate(Nullable<int> customerID, Nullable<System.DateTime> reportDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByLocationReportHistoryBydate_Result>("STStockByLocationReportHistoryBydate", customerIDParameter, reportDateParameter);
        }

        public virtual ObjectResult<STStockByLocationReportLowHigh_Result> STStockByLocationReportLowHigh(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByLocationReportLowHigh_Result>("STStockByLocationReportLowHigh", customerIDParameter);
        }

        public virtual ObjectResult<STStockByRoomReport1Customer_Result> STStockByRoomReport1Customer(string roomID, Nullable<int> customerID)
        {
            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockByRoomReport1Customer_Result>("STStockByRoomReport1Customer", roomIDParameter, customerIDParameter);
        }

        public virtual int STStockCorrectionDispatchingProductInsertWI(Nullable<int> customerID, string userID, ObjectParameter return_DispatchingOrderID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockCorrectionDispatchingProductInsertWI", customerIDParameter, userIDParameter, return_DispatchingOrderID);
        }

        public virtual int STStockCorrectionInsert(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, string userName)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockCorrectionInsert", varFromDateParameter, varTodateParameter, varCustomerIDParameter, userNameParameter);
        }

        public virtual ObjectResult<STStockDispatchedByClientByCartonEmails_Result> STStockDispatchedByClientByCartonEmails(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockDispatchedByClientByCartonEmails_Result>("STStockDispatchedByClientByCartonEmails", varFromDateParameter, varTodateParameter);
        }

        public virtual int STStockDispatchedByClientByCartonReport(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockDispatchedByClientByCartonReport", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual ObjectResult<STStockDispatchedByReceivingOrder_Result> STStockDispatchedByReceivingOrder(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockDispatchedByReceivingOrder_Result>("STStockDispatchedByReceivingOrder", receivingOrderIDParameter);
        }

        public virtual int STStockDispatchedDetailReport(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockDispatchedDetailReport", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual int STStockDispatchedReport(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition, Nullable<int> customerClientID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var customerClientIDParameter = customerClientID.HasValue ?
                new ObjectParameter("CustomerClientID", customerClientID) :
                new ObjectParameter("CustomerClientID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockDispatchedReport", varFromDateParameter, varTodateParameter, varConditionParameter, customerClientIDParameter);
        }

        public virtual int STStockDispatchedReportWeightInner(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition, Nullable<int> customerClientID)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            var customerClientIDParameter = customerClientID.HasValue ?
                new ObjectParameter("CustomerClientID", customerClientID) :
                new ObjectParameter("CustomerClientID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockDispatchedReportWeightInner", varFromDateParameter, varTodateParameter, varConditionParameter, customerClientIDParameter);
        }

        public virtual ObjectResult<STStockMovementByProductListProducts_Result> STStockMovementByProductListProducts(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementByProductListProducts_Result>("STStockMovementByProductListProducts", varCustomerIDParameter);
        }

        public virtual int STStockMovementInsert(Nullable<int> varSourceLocationID, string varSourceLocationNumber, Nullable<int> varDestinationLocationID, string varDestinationLocationNumber, string varReason, Nullable<int> varEmployeeID, string varUser)
        {
            var varSourceLocationIDParameter = varSourceLocationID.HasValue ?
                new ObjectParameter("varSourceLocationID", varSourceLocationID) :
                new ObjectParameter("varSourceLocationID", typeof(int));

            var varSourceLocationNumberParameter = varSourceLocationNumber != null ?
                new ObjectParameter("varSourceLocationNumber", varSourceLocationNumber) :
                new ObjectParameter("varSourceLocationNumber", typeof(string));

            var varDestinationLocationIDParameter = varDestinationLocationID.HasValue ?
                new ObjectParameter("varDestinationLocationID", varDestinationLocationID) :
                new ObjectParameter("varDestinationLocationID", typeof(int));

            var varDestinationLocationNumberParameter = varDestinationLocationNumber != null ?
                new ObjectParameter("varDestinationLocationNumber", varDestinationLocationNumber) :
                new ObjectParameter("varDestinationLocationNumber", typeof(string));

            var varReasonParameter = varReason != null ?
                new ObjectParameter("varReason", varReason) :
                new ObjectParameter("varReason", typeof(string));

            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementInsert", varSourceLocationIDParameter, varSourceLocationNumberParameter, varDestinationLocationIDParameter, varDestinationLocationNumberParameter, varReasonParameter, varEmployeeIDParameter, varUserParameter);
        }

        public virtual int STStockMovementInsertReversed(Nullable<int> varSourceLocationID, string varSourceLocationNumber, Nullable<int> varDestinationLocationID, string varDestinationLocationNumber, string varReason, Nullable<int> varEmployeeID, string varUser)
        {
            var varSourceLocationIDParameter = varSourceLocationID.HasValue ?
                new ObjectParameter("varSourceLocationID", varSourceLocationID) :
                new ObjectParameter("varSourceLocationID", typeof(int));

            var varSourceLocationNumberParameter = varSourceLocationNumber != null ?
                new ObjectParameter("varSourceLocationNumber", varSourceLocationNumber) :
                new ObjectParameter("varSourceLocationNumber", typeof(string));

            var varDestinationLocationIDParameter = varDestinationLocationID.HasValue ?
                new ObjectParameter("varDestinationLocationID", varDestinationLocationID) :
                new ObjectParameter("varDestinationLocationID", typeof(int));

            var varDestinationLocationNumberParameter = varDestinationLocationNumber != null ?
                new ObjectParameter("varDestinationLocationNumber", varDestinationLocationNumber) :
                new ObjectParameter("varDestinationLocationNumber", typeof(string));

            var varReasonParameter = varReason != null ?
                new ObjectParameter("varReason", varReason) :
                new ObjectParameter("varReason", typeof(string));

            var varEmployeeIDParameter = varEmployeeID.HasValue ?
                new ObjectParameter("varEmployeeID", varEmployeeID) :
                new ObjectParameter("varEmployeeID", typeof(int));

            var varUserParameter = varUser != null ?
                new ObjectParameter("varUser", varUser) :
                new ObjectParameter("varUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementInsertReversed", varSourceLocationIDParameter, varSourceLocationNumberParameter, varDestinationLocationIDParameter, varDestinationLocationNumberParameter, varReasonParameter, varEmployeeIDParameter, varUserParameter);
        }

        public virtual int STStockMovementLocationIDChange(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementLocationIDChange", locationIDParameter);
        }

        public virtual int STStockMovementMassAdvice(Nullable<int> receivingOrderDetailID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassAdvice", receivingOrderDetailIDParameter);
        }

        public virtual int STStockMovementMassAdviceX(Nullable<int> receivingOrderDetailID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassAdviceX", receivingOrderDetailIDParameter);
        }

        public virtual int STStockMovementMassClearOrder(Nullable<int> receivingOrderDetailID, Nullable<int> stockMovementMassID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassClearOrder", receivingOrderDetailIDParameter, stockMovementMassIDParameter);
        }

        public virtual int STStockMovementMassConfirmOrder(Nullable<int> receivingOrderDetailID, string user, string stockMovementMassNumber)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var stockMovementMassNumberParameter = stockMovementMassNumber != null ?
                new ObjectParameter("StockMovementMassNumber", stockMovementMassNumber) :
                new ObjectParameter("StockMovementMassNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassConfirmOrder", receivingOrderDetailIDParameter, userParameter, stockMovementMassNumberParameter);
        }

        public virtual int STStockMovementMassConfirmOrder_bk20150526(Nullable<int> receivingOrderDetailID, Nullable<int> employeeID, string user, Nullable<int> employeeID2, Nullable<int> employeeID3, Nullable<int> stockMovementMassID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));

            var employeeID2Parameter = employeeID2.HasValue ?
                new ObjectParameter("EmployeeID2", employeeID2) :
                new ObjectParameter("EmployeeID2", typeof(int));

            var employeeID3Parameter = employeeID3.HasValue ?
                new ObjectParameter("EmployeeID3", employeeID3) :
                new ObjectParameter("EmployeeID3", typeof(int));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassConfirmOrder_bk20150526", receivingOrderDetailIDParameter, employeeIDParameter, userParameter, employeeID2Parameter, employeeID3Parameter, stockMovementMassIDParameter);
        }

        public virtual ObjectResult<STStockMovementMassOrderList_Result> STStockMovementMassOrderList(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementMassOrderList_Result>("STStockMovementMassOrderList", customerIDParameter);
        }

        public virtual int STStockMovementMassProcessLocations(Nullable<int> customerID, Nullable<int> aisleID, string userName, Nullable<int> stockMovementMassID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var aisleIDParameter = aisleID.HasValue ?
                new ObjectParameter("AisleID", aisleID) :
                new ObjectParameter("AisleID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassProcessLocations", customerIDParameter, aisleIDParameter, userNameParameter, stockMovementMassIDParameter);
        }

        public virtual int STStockMovementMassProcessManyAisle(Nullable<int> customerID, string aisleList, string userName, Nullable<int> stockMovementMassID, Nullable<byte> locationHigh, Nullable<byte> locationHighTo)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var aisleListParameter = aisleList != null ?
                new ObjectParameter("AisleList", aisleList) :
                new ObjectParameter("AisleList", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            var locationHighParameter = locationHigh.HasValue ?
                new ObjectParameter("LocationHigh", locationHigh) :
                new ObjectParameter("LocationHigh", typeof(byte));

            var locationHighToParameter = locationHighTo.HasValue ?
                new ObjectParameter("LocationHighTo", locationHighTo) :
                new ObjectParameter("LocationHighTo", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassProcessManyAisle", customerIDParameter, aisleListParameter, userNameParameter, stockMovementMassIDParameter, locationHighParameter, locationHighToParameter);
        }

        public virtual int STStockMovementMassProcessManyAisle_Main(Nullable<int> customerID, string aisleList, string userName, Nullable<int> stockMovementMassID, Nullable<byte> locationHigh, Nullable<byte> locationHighTo)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var aisleListParameter = aisleList != null ?
                new ObjectParameter("AisleList", aisleList) :
                new ObjectParameter("AisleList", typeof(string));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            var locationHighParameter = locationHigh.HasValue ?
                new ObjectParameter("LocationHigh", locationHigh) :
                new ObjectParameter("LocationHigh", typeof(byte));

            var locationHighToParameter = locationHighTo.HasValue ?
                new ObjectParameter("LocationHighTo", locationHighTo) :
                new ObjectParameter("LocationHighTo", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassProcessManyAisle_Main", customerIDParameter, aisleListParameter, userNameParameter, stockMovementMassIDParameter, locationHighParameter, locationHighToParameter);
        }

        public virtual int STStockMovementMassProcessOrder(Nullable<int> qtyPallet, Nullable<int> receivingOrderID, string userName, Nullable<int> stockMovementMassID)
        {
            var qtyPalletParameter = qtyPallet.HasValue ?
                new ObjectParameter("QtyPallet", qtyPallet) :
                new ObjectParameter("QtyPallet", typeof(int));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassProcessOrder", qtyPalletParameter, receivingOrderIDParameter, userNameParameter, stockMovementMassIDParameter);
        }

        public virtual int STStockMovementMassProcessProduct(Nullable<int> customerID, Nullable<int> productID, string userName, Nullable<int> stockMovementMassID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var stockMovementMassIDParameter = stockMovementMassID.HasValue ?
                new ObjectParameter("StockMovementMassID", stockMovementMassID) :
                new ObjectParameter("StockMovementMassID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementMassProcessProduct", customerIDParameter, productIDParameter, userNameParameter, stockMovementMassIDParameter);
        }

        public virtual ObjectResult<STStockMovementReport1Customer_Result> STStockMovementReport1Customer(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<byte> byWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var byWeightParameter = byWeight.HasValue ?
                new ObjectParameter("ByWeight", byWeight) :
                new ObjectParameter("ByWeight", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReport1Customer_Result>("STStockMovementReport1Customer", varFromDateParameter, varTodateParameter, varCustomerIDParameter, byWeightParameter);
        }

        public virtual ObjectResult<STStockMovementReport1Customer_old_Result> STStockMovementReport1Customer_old(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<byte> byWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var byWeightParameter = byWeight.HasValue ?
                new ObjectParameter("ByWeight", byWeight) :
                new ObjectParameter("ByWeight", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReport1Customer_old_Result>("STStockMovementReport1Customer_old", varFromDateParameter, varTodateParameter, varCustomerIDParameter, byWeightParameter);
        }

        public virtual ObjectResult<STStockMovementReport1Customer_old20170208_Result> STStockMovementReport1Customer_old20170208(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<byte> byWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var byWeightParameter = byWeight.HasValue ?
                new ObjectParameter("ByWeight", byWeight) :
                new ObjectParameter("ByWeight", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReport1Customer_old20170208_Result>("STStockMovementReport1Customer_old20170208", varFromDateParameter, varTodateParameter, varCustomerIDParameter, byWeightParameter);
        }

        public virtual ObjectResult<STStockMovementReport1CustomerAllProducts_Result> STStockMovementReport1CustomerAllProducts(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<byte> byWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var byWeightParameter = byWeight.HasValue ?
                new ObjectParameter("ByWeight", byWeight) :
                new ObjectParameter("ByWeight", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReport1CustomerAllProducts_Result>("STStockMovementReport1CustomerAllProducts", varFromDateParameter, varTodateParameter, varCustomerIDParameter, byWeightParameter);
        }

        public virtual ObjectResult<STStockMovementReport1CustomerProductMain_Result> STStockMovementReport1CustomerProductMain(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, Nullable<byte> byWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var byWeightParameter = byWeight.HasValue ?
                new ObjectParameter("ByWeight", byWeight) :
                new ObjectParameter("ByWeight", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReport1CustomerProductMain_Result>("STStockMovementReport1CustomerProductMain", varFromDateParameter, varTodateParameter, varCustomerIDParameter, byWeightParameter);
        }

        public virtual ObjectResult<STStockMovementReportAllChanges_Result> STStockMovementReportAllChanges(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReportAllChanges_Result>("STStockMovementReportAllChanges", varFromDateParameter, varTodateParameter);
        }

        public virtual ObjectResult<STStockMovementReportAllCustomers_Result> STStockMovementReportAllCustomers(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReportAllCustomers_Result>("STStockMovementReportAllCustomers", varFromDateParameter, varTodateParameter);
        }

        public virtual int STStockMovementReportByProducts(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementReportByProducts", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual int STStockMovementReportSelectedProducts(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, Nullable<int> varCustomerID, string varcondition, Nullable<byte> byWeight)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            var varconditionParameter = varcondition != null ?
                new ObjectParameter("varcondition", varcondition) :
                new ObjectParameter("varcondition", typeof(string));

            var byWeightParameter = byWeight.HasValue ?
                new ObjectParameter("ByWeight", byWeight) :
                new ObjectParameter("ByWeight", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockMovementReportSelectedProducts", varFromDateParameter, varTodateParameter, varCustomerIDParameter, varconditionParameter, byWeightParameter);
        }

        public virtual ObjectResult<STStockMovementReview_Result> STStockMovementReview(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReview_Result>("STStockMovementReview", palletIDParameter);
        }

        public virtual ObjectResult<STStockMovementReviewByDate_Result> STStockMovementReviewByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> customerID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReviewByDate_Result>("STStockMovementReviewByDate", fromDateParameter, toDateParameter, customerIDParameter);
        }

        public virtual ObjectResult<STStockMovementReviewByEmployeeID_Result> STStockMovementReviewByEmployeeID(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementReviewByEmployeeID_Result>("STStockMovementReviewByEmployeeID", employeeIDParameter);
        }

        public virtual ObjectResult<STStockMovementView_Result> STStockMovementView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementView_Result>("STStockMovementView");
        }

        public virtual ObjectResult<STStockMovementViewDetails_Result> STStockMovementViewDetails(Nullable<int> stockMovementID)
        {
            var stockMovementIDParameter = stockMovementID.HasValue ?
                new ObjectParameter("StockMovementID", stockMovementID) :
                new ObjectParameter("StockMovementID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockMovementViewDetails_Result>("STStockMovementViewDetails", stockMovementIDParameter);
        }

        public virtual ObjectResult<STStockOneLocationReport_Result> STStockOneLocationReport(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOneLocationReport_Result>("STStockOneLocationReport", locationIDParameter);
        }

        public virtual ObjectResult<STStockOnHandAllCustomers_Result> STStockOnHandAllCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandAllCustomers_Result>("STStockOnHandAllCustomers");
        }

        public virtual ObjectResult<STStockOnHandAllCustomersDaily_Result> STStockOnHandAllCustomersDaily()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandAllCustomersDaily_Result>("STStockOnHandAllCustomersDaily");
        }

        public virtual ObjectResult<STStockOnHandAllCustomersW_Result> STStockOnHandAllCustomersW(Nullable<byte> warehouseID)
        {
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandAllCustomersW_Result>("STStockOnHandAllCustomersW", warehouseIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByAgeByCustomer_Result> STStockOnHandByAgeByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByAgeByCustomer_Result>("STStockOnHandByAgeByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByAgeSummary_Result> STStockOnHandByAgeSummary(Nullable<int> customerMainID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByAgeSummary_Result>("STStockOnHandByAgeSummary", customerMainIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByCustomer_Result> STStockOnHandByCustomer(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByCustomer_Result>("STStockOnHandByCustomer", varCustomerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByCustomerOnHold_Result> STStockOnHandByCustomerOnHold(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByCustomerOnHold_Result>("STStockOnHandByCustomerOnHold", varCustomerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByCustomerOnHoldQuaratined_Result> STStockOnHandByCustomerOnHoldQuaratined(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByCustomerOnHoldQuaratined_Result>("STStockOnHandByCustomerOnHoldQuaratined", customerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByDateAllCustomers_Result> STStockOnHandByDateAllCustomers(Nullable<System.DateTime> varFromDate)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByDateAllCustomers_Result>("STStockOnHandByDateAllCustomers", varFromDateParameter);
        }

        public virtual ObjectResult<STStockOnHandByLotFindReport_Result> STStockOnHandByLotFindReport(Nullable<int> customerID, string productNumber, string productName, string specialRequirement, string customerRef, Nullable<System.DateTime> productionDate, Nullable<System.DateTime> useByDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));

            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));

            var specialRequirementParameter = specialRequirement != null ?
                new ObjectParameter("SpecialRequirement", specialRequirement) :
                new ObjectParameter("SpecialRequirement", typeof(string));

            var customerRefParameter = customerRef != null ?
                new ObjectParameter("CustomerRef", customerRef) :
                new ObjectParameter("CustomerRef", typeof(string));

            var productionDateParameter = productionDate.HasValue ?
                new ObjectParameter("ProductionDate", productionDate) :
                new ObjectParameter("ProductionDate", typeof(System.DateTime));

            var useByDateParameter = useByDate.HasValue ?
                new ObjectParameter("UseByDate", useByDate) :
                new ObjectParameter("UseByDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByLotFindReport_Result>("STStockOnHandByLotFindReport", customerIDParameter, productNumberParameter, productNameParameter, specialRequirementParameter, customerRefParameter, productionDateParameter, useByDateParameter);
        }

        public virtual ObjectResult<STStockOnHandByLotListProducts_Result> STStockOnHandByLotListProducts(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByLotListProducts_Result>("STStockOnHandByLotListProducts", varCustomerIDParameter);
        }

        public virtual int STStockOnHandByLotReport(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockOnHandByLotReport", varConditionParameter);
        }

        public virtual int STStockOnHandByLotReportWeightInners(string varCondition)
        {
            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockOnHandByLotReportWeightInners", varConditionParameter);
        }

        public virtual ObjectResult<STStockOnHandByProDateByCustomer_Result> STStockOnHandByProDateByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByProDateByCustomer_Result>("STStockOnHandByProDateByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByProductAllCustomerByExpiry_Result> STStockOnHandByProductAllCustomerByExpiry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByProductAllCustomerByExpiry_Result>("STStockOnHandByProductAllCustomerByExpiry");
        }

        public virtual ObjectResult<STStockOnHandByRoom_Result> STStockOnHandByRoom(string varRoomID)
        {
            var varRoomIDParameter = varRoomID != null ?
                new ObjectParameter("varRoomID", varRoomID) :
                new ObjectParameter("varRoomID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByRoom_Result>("STStockOnHandByRoom", varRoomIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByRoom1Customer_Result> STStockOnHandByRoom1Customer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByRoom1Customer_Result>("STStockOnHandByRoom1Customer", customerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandByRoom1CustomerMain_Result> STStockOnHandByRoom1CustomerMain(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandByRoom1CustomerMain_Result>("STStockOnHandByRoom1CustomerMain", customerIDParameter);
        }

        public virtual int STStockOnHandDailyDetailsAddNew(Nullable<System.DateTime> reportDate, Nullable<short> dateID)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var dateIDParameter = dateID.HasValue ?
                new ObjectParameter("DateID", dateID) :
                new ObjectParameter("DateID", typeof(short));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockOnHandDailyDetailsAddNew", reportDateParameter, dateIDParameter);
        }

        public virtual ObjectResult<STStockOnHandOneCustomer_Result> STStockOnHandOneCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandOneCustomer_Result>("STStockOnHandOneCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandOneCustomerMain_Result> STStockOnHandOneCustomerMain(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandOneCustomerMain_Result>("STStockOnHandOneCustomerMain", customerIDParameter);
        }

        public virtual ObjectResult<STStockOnHandProductsFound_Result> STStockOnHandProductsFound(Nullable<byte> flag, string varConditions)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var varConditionsParameter = varConditions != null ?
                new ObjectParameter("varConditions", varConditions) :
                new ObjectParameter("varConditions", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockOnHandProductsFound_Result>("STStockOnHandProductsFound", flagParameter, varConditionsParameter);
        }

        public virtual int STStockOnHandWeeklyInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockOnHandWeeklyInsert");
        }

        public virtual int STStockReceivedReport(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockReceivedReport", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual int STStockReceivedReportOneCustomer(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockReceivedReportOneCustomer", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual int STStockReceivedReportWeightInner(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockReceivedReportWeightInner", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual int STStockReceivedReportWithPallet(Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate, string varCondition)
        {
            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            var varConditionParameter = varCondition != null ?
                new ObjectParameter("varCondition", varCondition) :
                new ObjectParameter("varCondition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockReceivedReportWithPallet", varFromDateParameter, varTodateParameter, varConditionParameter);
        }

        public virtual int STStockTakeByRequest(string condition)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockTakeByRequest", conditionParameter);
        }

        public virtual ObjectResult<STStockTakeByRequestManyDeep2_Result> STStockTakeByRequestManyDeep2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockTakeByRequestManyDeep2_Result>("STStockTakeByRequestManyDeep2");
        }

        public virtual int STStockTakeByRequestRODate(string condition, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var conditionParameter = condition != null ?
                new ObjectParameter("Condition", condition) :
                new ObjectParameter("Condition", typeof(string));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockTakeByRequestRODate", conditionParameter, fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<STStockTakeDailyCheck_Result> STStockTakeDailyCheck(Nullable<System.DateTime> reportDate)
        {
            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockTakeDailyCheck_Result>("STStockTakeDailyCheck", reportDateParameter);
        }

        public virtual ObjectResult<STStockTakeDailyCheckJoinedPallets_Result> STStockTakeDailyCheckJoinedPallets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockTakeDailyCheckJoinedPallets_Result>("STStockTakeDailyCheckJoinedPallets");
        }

        public virtual ObjectResult<STStockTakeDailyCheckSplitPalletReport_Result> STStockTakeDailyCheckSplitPalletReport(Nullable<int> customerMainID, string roomID)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var roomIDParameter = roomID != null ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockTakeDailyCheckSplitPalletReport_Result>("STStockTakeDailyCheckSplitPalletReport", customerMainIDParameter, roomIDParameter);
        }

        public virtual int STStockTakeDailyCheckSplitPallets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockTakeDailyCheckSplitPallets");
        }

        public virtual int STStockTakeX()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STStockTakeX");
        }

        public virtual ObjectResult<STStockTakeZero_Result> STStockTakeZero(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockTakeZero_Result>("STStockTakeZero", customerIDParameter);
        }

        public virtual ObjectResult<STStockTakeZeroByRoom_Result> STStockTakeZeroByRoom(Nullable<bool> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STStockTakeZeroByRoom_Result>("STStockTakeZeroByRoom", flagParameter);
        }

        public virtual ObjectResult<STSundayWorkingCustomers_Result> STSundayWorkingCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STSundayWorkingCustomers_Result>("STSundayWorkingCustomers");
        }

        public virtual int STTasksDelete(Nullable<int> taskID)
        {
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTasksDelete", taskIDParameter);
        }

        public virtual int STTEST_CallWebService(string sUrl)
        {
            var sUrlParameter = sUrl != null ?
                new ObjectParameter("sUrl", sUrl) :
                new ObjectParameter("sUrl", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTEST_CallWebService", sUrlParameter);
        }

        public virtual int STTEST_CallWebService2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTEST_CallWebService2");
        }

        public virtual int STtmpBillingReportUpdate(Nullable<int> customerID, Nullable<int> employeeID, Nullable<System.DateTime> reportDate, Nullable<int> newCloseP)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            var newClosePParameter = newCloseP.HasValue ?
                new ObjectParameter("newCloseP", newCloseP) :
                new ObjectParameter("newCloseP", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STtmpBillingReportUpdate", customerIDParameter, employeeIDParameter, reportDateParameter, newClosePParameter);
        }

        public virtual int STtmpProductRemainUpdate(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STtmpProductRemainUpdate", varCustomerIDParameter);
        }

        public virtual int STtmpProductRemainUpdateAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STtmpProductRemainUpdateAll");
        }

        public virtual int STtmpRoomsDelete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STtmpRoomsDelete");
        }

        public virtual int STTrainingDelete(Nullable<int> trainingID)
        {
            var trainingIDParameter = trainingID.HasValue ?
                new ObjectParameter("TrainingID", trainingID) :
                new ObjectParameter("TrainingID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTrainingDelete", trainingIDParameter);
        }

        public virtual ObjectResult<STTrainingFDTDReport_Result> STTrainingFDTDReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTrainingFDTDReport_Result>("STTrainingFDTDReport", fromDateParameter, todateParameter);
        }

        public virtual int STTrainingInsert(Nullable<System.DateTime> trainingDate, string createdBy, string trainingLocation, string trainingDescription, Nullable<int> trainingCost, string currencyUnit, string trainingDuration, Nullable<int> employeeID, string costCoverBy, string documentFolder, Nullable<int> trainingDefinitionID)
        {
            var trainingDateParameter = trainingDate.HasValue ?
                new ObjectParameter("TrainingDate", trainingDate) :
                new ObjectParameter("TrainingDate", typeof(System.DateTime));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var trainingLocationParameter = trainingLocation != null ?
                new ObjectParameter("TrainingLocation", trainingLocation) :
                new ObjectParameter("TrainingLocation", typeof(string));

            var trainingDescriptionParameter = trainingDescription != null ?
                new ObjectParameter("TrainingDescription", trainingDescription) :
                new ObjectParameter("TrainingDescription", typeof(string));

            var trainingCostParameter = trainingCost.HasValue ?
                new ObjectParameter("TrainingCost", trainingCost) :
                new ObjectParameter("TrainingCost", typeof(int));

            var currencyUnitParameter = currencyUnit != null ?
                new ObjectParameter("CurrencyUnit", currencyUnit) :
                new ObjectParameter("CurrencyUnit", typeof(string));

            var trainingDurationParameter = trainingDuration != null ?
                new ObjectParameter("TrainingDuration", trainingDuration) :
                new ObjectParameter("TrainingDuration", typeof(string));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var costCoverByParameter = costCoverBy != null ?
                new ObjectParameter("CostCoverBy", costCoverBy) :
                new ObjectParameter("CostCoverBy", typeof(string));

            var documentFolderParameter = documentFolder != null ?
                new ObjectParameter("DocumentFolder", documentFolder) :
                new ObjectParameter("DocumentFolder", typeof(string));

            var trainingDefinitionIDParameter = trainingDefinitionID.HasValue ?
                new ObjectParameter("TrainingDefinitionID", trainingDefinitionID) :
                new ObjectParameter("TrainingDefinitionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTrainingInsert", trainingDateParameter, createdByParameter, trainingLocationParameter, trainingDescriptionParameter, trainingCostParameter, currencyUnitParameter, trainingDurationParameter, employeeIDParameter, costCoverByParameter, documentFolderParameter, trainingDefinitionIDParameter);
        }

        public virtual ObjectResult<STTrainingRequirementFuture_Result> STTrainingRequirementFuture()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTrainingRequirementFuture_Result>("STTrainingRequirementFuture");
        }

        public virtual ObjectResult<STTrainingRequirementFutureReport_Result> STTrainingRequirementFutureReport(Nullable<int> trainingDefinitionID)
        {
            var trainingDefinitionIDParameter = trainingDefinitionID.HasValue ?
                new ObjectParameter("TrainingDefinitionID", trainingDefinitionID) :
                new ObjectParameter("TrainingDefinitionID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTrainingRequirementFutureReport_Result>("STTrainingRequirementFutureReport", trainingDefinitionIDParameter);
        }

        public virtual ObjectResult<STTransaction_Result> STTransaction(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTransaction_Result>("STTransaction", orderNumberParameter);
        }

        public virtual int STTransactionDelete(Nullable<int> varOrderDetailID, Nullable<int> varTransactionID, Nullable<bool> varTransactionType, string userID)
        {
            var varOrderDetailIDParameter = varOrderDetailID.HasValue ?
                new ObjectParameter("varOrderDetailID", varOrderDetailID) :
                new ObjectParameter("varOrderDetailID", typeof(int));

            var varTransactionIDParameter = varTransactionID.HasValue ?
                new ObjectParameter("varTransactionID", varTransactionID) :
                new ObjectParameter("varTransactionID", typeof(int));

            var varTransactionTypeParameter = varTransactionType.HasValue ?
                new ObjectParameter("varTransactionType", varTransactionType) :
                new ObjectParameter("varTransactionType", typeof(bool));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTransactionDelete", varOrderDetailIDParameter, varTransactionIDParameter, varTransactionTypeParameter, userIDParameter);
        }

        public virtual int STTransactionDeleteAll(Nullable<int> varOrderID, Nullable<bool> varTransactionType, string userID)
        {
            var varOrderIDParameter = varOrderID.HasValue ?
                new ObjectParameter("varOrderID", varOrderID) :
                new ObjectParameter("varOrderID", typeof(int));

            var varTransactionTypeParameter = varTransactionType.HasValue ?
                new ObjectParameter("varTransactionType", varTransactionType) :
                new ObjectParameter("varTransactionType", typeof(bool));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTransactionDeleteAll", varOrderIDParameter, varTransactionTypeParameter, userIDParameter);
        }

        public virtual int STTransactionInsert(Nullable<int> varOrderDetailID, string varOrderNumber, string varUserID, string varCustomerNumber)
        {
            var varOrderDetailIDParameter = varOrderDetailID.HasValue ?
                new ObjectParameter("varOrderDetailID", varOrderDetailID) :
                new ObjectParameter("varOrderDetailID", typeof(int));

            var varOrderNumberParameter = varOrderNumber != null ?
                new ObjectParameter("varOrderNumber", varOrderNumber) :
                new ObjectParameter("varOrderNumber", typeof(string));

            var varUserIDParameter = varUserID != null ?
                new ObjectParameter("varUserID", varUserID) :
                new ObjectParameter("varUserID", typeof(string));

            var varCustomerNumberParameter = varCustomerNumber != null ?
                new ObjectParameter("varCustomerNumber", varCustomerNumber) :
                new ObjectParameter("varCustomerNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTransactionInsert", varOrderDetailIDParameter, varOrderNumberParameter, varUserIDParameter, varCustomerNumberParameter);
        }

        public virtual int STTransactionInsertAll(Nullable<int> varOrderID, string varOrderNumber, string varUserID, string varCustomerNumber)
        {
            var varOrderIDParameter = varOrderID.HasValue ?
                new ObjectParameter("varOrderID", varOrderID) :
                new ObjectParameter("varOrderID", typeof(int));

            var varOrderNumberParameter = varOrderNumber != null ?
                new ObjectParameter("varOrderNumber", varOrderNumber) :
                new ObjectParameter("varOrderNumber", typeof(string));

            var varUserIDParameter = varUserID != null ?
                new ObjectParameter("varUserID", varUserID) :
                new ObjectParameter("varUserID", typeof(string));

            var varCustomerNumberParameter = varCustomerNumber != null ?
                new ObjectParameter("varCustomerNumber", varCustomerNumber) :
                new ObjectParameter("varCustomerNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTransactionInsertAll", varOrderIDParameter, varOrderNumberParameter, varUserIDParameter, varCustomerNumberParameter);
        }

        public virtual int STTripCustomerClientUpdate(Nullable<int> tripID, Nullable<int> customerClientID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var customerClientIDParameter = customerClientID.HasValue ?
                new ObjectParameter("CustomerClientID", customerClientID) :
                new ObjectParameter("CustomerClientID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripCustomerClientUpdate", tripIDParameter, customerClientIDParameter);
        }

        public virtual int STTripDateChange(Nullable<int> tripID, Nullable<System.DateTime> newTripDate)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var newTripDateParameter = newTripDate.HasValue ?
                new ObjectParameter("NewTripDate", newTripDate) :
                new ObjectParameter("NewTripDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripDateChange", tripIDParameter, newTripDateParameter);
        }

        public virtual int STTripDeleteUpdate(Nullable<int> tripID, Nullable<byte> flag)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripDeleteUpdate", tripIDParameter, flagParameter);
        }

        public virtual ObjectResult<STTripDispatchingPlan_Result> STTripDispatchingPlan(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTripDispatchingPlan_Result>("STTripDispatchingPlan", tripIDParameter);
        }

        public virtual ObjectResult<STTripDO_Result> STTripDO(Nullable<int> customerMainID, Nullable<System.DateTime> tripDate)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var tripDateParameter = tripDate.HasValue ?
                new ObjectParameter("TripDate", tripDate) :
                new ObjectParameter("TripDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTripDO_Result>("STTripDO", customerMainIDParameter, tripDateParameter);
        }

        public virtual int STTripDOConfirmAll(Nullable<int> tripID, string userName)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripDOConfirmAll", tripIDParameter, userNameParameter);
        }

        public virtual int STTripDOUpdateAll(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripDOUpdateAll", tripIDParameter);
        }

        public virtual int STTripInsertAll(Nullable<int> tripID, Nullable<int> customerMainID, Nullable<System.DateTime> tripDate, string userName)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var tripDateParameter = tripDate.HasValue ?
                new ObjectParameter("TripDate", tripDate) :
                new ObjectParameter("TripDate", typeof(System.DateTime));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripInsertAll", tripIDParameter, customerMainIDParameter, tripDateParameter, userNameParameter);
        }

        public virtual int STTripInsert(Nullable<int> customerID, string createdBy, string strOrderID, Nullable<int> routeID, ObjectParameter returnTripID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var strOrderIDParameter = strOrderID != null ?
                new ObjectParameter("strOrderID", strOrderID) :
                new ObjectParameter("strOrderID", typeof(string));

            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("RouteID", routeID) :
                new ObjectParameter("RouteID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripInsert", customerIDParameter, createdByParameter, strOrderIDParameter, routeIDParameter, returnTripID);
        }
        public virtual int STTripInsertRO(Nullable<int> customerID, string createdBy, string strOrderID, Nullable<int> routeID, ObjectParameter returnTripID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var strOrderIDParameter = strOrderID != null ?
                new ObjectParameter("strOrderID", strOrderID) :
                new ObjectParameter("strOrderID", typeof(string));

            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("RouteID", routeID) :
                new ObjectParameter("RouteID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripInsertRO", customerIDParameter, createdByParameter, strOrderIDParameter, routeIDParameter, returnTripID);
        }

        public virtual ObjectResult<STTripPickingList_Result> STTripPickingList(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTripPickingList_Result>("STTripPickingList", tripIDParameter);
        }

        public virtual int STTripSplit(Nullable<int> tripID, string createdBy, ObjectParameter tripIDNew)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STTripSplit", tripIDParameter, createdByParameter, tripIDNew);
        }

        public virtual ObjectResult<STTripViewByDate_Result> STTripViewByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userName, Nullable<int> customerID, Nullable<byte> flag)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STTripViewByDate_Result>("STTripViewByDate", fromDateParameter, toDateParameter, userNameParameter, customerIDParameter, flagParameter);
        }

        public virtual int STUpdatePalletOriginalQuantity(Nullable<int> varPalletID, Nullable<int> varOriginalQuantity)
        {
            var varPalletIDParameter = varPalletID.HasValue ?
                new ObjectParameter("varPalletID", varPalletID) :
                new ObjectParameter("varPalletID", typeof(int));

            var varOriginalQuantityParameter = varOriginalQuantity.HasValue ?
                new ObjectParameter("varOriginalQuantity", varOriginalQuantity) :
                new ObjectParameter("varOriginalQuantity", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STUpdatePalletOriginalQuantity", varPalletIDParameter, varOriginalQuantityParameter);
        }

        public virtual ObjectResult<STUserControllersLogin_Result> STUserControllersLogin(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STUserControllersLogin_Result>("STUserControllersLogin", userNameParameter, passwordParameter);
        }

        public virtual ObjectResult<STViewCustomers_Result> STViewCustomers(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STViewCustomers_Result>("STViewCustomers", customerIDParameter);
        }

        public virtual ObjectResult<STViewEmployeeByConditions_Result> STViewEmployeeByConditions(Nullable<bool> active, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string education, string position, Nullable<bool> status, Nullable<byte> sortFlag)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var educationParameter = education != null ?
                new ObjectParameter("Education", education) :
                new ObjectParameter("Education", typeof(string));

            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));

            var sortFlagParameter = sortFlag.HasValue ?
                new ObjectParameter("SortFlag", sortFlag) :
                new ObjectParameter("SortFlag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STViewEmployeeByConditions_Result>("STViewEmployeeByConditions", activeParameter, fromDateParameter, toDateParameter, educationParameter, positionParameter, statusParameter, sortFlagParameter);
        }

        public virtual ObjectResult<STViewLogRecords_Result> STViewLogRecords(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STViewLogRecords_Result>("STViewLogRecords", usernameParameter);
        }

        public virtual ObjectResult<STVSCustomerListByMainID_Result> STVSCustomerListByMainID(Nullable<int> customerMainID, Nullable<int> customerDiscontinued)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var customerDiscontinuedParameter = customerDiscontinued.HasValue ?
                new ObjectParameter("CustomerDiscontinued", customerDiscontinued) :
                new ObjectParameter("CustomerDiscontinued", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSCustomerListByMainID_Result>("STVSCustomerListByMainID", customerMainIDParameter, customerDiscontinuedParameter);
        }

        public virtual ObjectResult<STVSCustomerProductGroupsList_Result> STVSCustomerProductGroupsList(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSCustomerProductGroupsList_Result>("STVSCustomerProductGroupsList", customerIDParameter);
        }

        public virtual ObjectResult<STVSCustomersListForLookup_Result> STVSCustomersListForLookup(Nullable<int> storeID, Nullable<int> customerDiscontinued)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            var customerDiscontinuedParameter = customerDiscontinued.HasValue ?
                new ObjectParameter("CustomerDiscontinued", customerDiscontinued) :
                new ObjectParameter("CustomerDiscontinued", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSCustomersListForLookup_Result>("STVSCustomersListForLookup", storeIDParameter, customerDiscontinuedParameter);
        }

        public virtual ObjectResult<STVSDispatchingOrdersListForPalletInfoDO_Result> STVSDispatchingOrdersListForPalletInfoDO(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSDispatchingOrdersListForPalletInfoDO_Result>("STVSDispatchingOrdersListForPalletInfoDO", productIDParameter);
        }

        public virtual ObjectResult<STVSEmployeesListForLookup_Result> STVSEmployeesListForLookup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSEmployeesListForLookup_Result>("STVSEmployeesListForLookup");
        }

        public virtual ObjectResult<STVSEmployeeWorkingsLIstByOrderNumber_Result> STVSEmployeeWorkingsLIstByOrderNumber(string orderNumber)
        {
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSEmployeeWorkingsLIstByOrderNumber_Result>("STVSEmployeeWorkingsLIstByOrderNumber", orderNumberParameter);
        }

        public virtual ObjectResult<STVSLocationsList_Result> STVSLocationsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSLocationsList_Result>("STVSLocationsList");
        }

        public virtual ObjectResult<STVSLocationsListForLookup_Result> STVSLocationsListForLookup(Nullable<int> hight, Nullable<int> deep)
        {
            var hightParameter = hight.HasValue ?
                new ObjectParameter("Hight", hight) :
                new ObjectParameter("Hight", typeof(int));

            var deepParameter = deep.HasValue ?
                new ObjectParameter("Deep", deep) :
                new ObjectParameter("Deep", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSLocationsListForLookup_Result>("STVSLocationsListForLookup", hightParameter, deepParameter);
        }

        public virtual ObjectResult<STVSOrderCategoriesList_Result> STVSOrderCategoriesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSOrderCategoriesList_Result>("STVSOrderCategoriesList");
        }

        public virtual ObjectResult<STVSPalletAllocation_Result> STVSPalletAllocation(Nullable<int> receivingOrderID, Nullable<int> productID, string homeRoom1, string homeRoom2, string type, Nullable<int> storeID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var homeRoom1Parameter = homeRoom1 != null ?
                new ObjectParameter("HomeRoom1", homeRoom1) :
                new ObjectParameter("HomeRoom1", typeof(string));

            var homeRoom2Parameter = homeRoom2 != null ?
                new ObjectParameter("HomeRoom2", homeRoom2) :
                new ObjectParameter("HomeRoom2", typeof(string));

            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSPalletAllocation_Result>("STVSPalletAllocation", receivingOrderIDParameter, productIDParameter, homeRoom1Parameter, homeRoom2Parameter, typeParameter, storeIDParameter);
        }

        public virtual ObjectResult<STVSPalletsListByCustomer_Result> STVSPalletsListByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSPalletsListByCustomer_Result>("STVSPalletsListByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STVSPalletSUMByReceivingOrderDetailID_Result> STVSPalletSUMByReceivingOrderDetailID(Nullable<int> receivingOrderDetailID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSPalletSUMByReceivingOrderDetailID_Result>("STVSPalletSUMByReceivingOrderDetailID", receivingOrderDetailIDParameter);
        }

        public virtual ObjectResult<STVSProductsListForLookup_Result> STVSProductsListForLookup(Nullable<int> customerID, Nullable<int> discontinue)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var discontinueParameter = discontinue.HasValue ?
                new ObjectParameter("Discontinue", discontinue) :
                new ObjectParameter("Discontinue", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSProductsListForLookup_Result>("STVSProductsListForLookup", customerIDParameter, discontinueParameter);
        }

        public virtual ObjectResult<STVSProductsListForTableView_Result> STVSProductsListForTableView(Nullable<int> customerID, Nullable<int> discontinue)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var discontinueParameter = discontinue.HasValue ?
                new ObjectParameter("Discontinue", discontinue) :
                new ObjectParameter("Discontinue", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSProductsListForTableView_Result>("STVSProductsListForTableView", customerIDParameter, discontinueParameter);
        }

        public virtual ObjectResult<STVSReceivingDispatchingOrdersPalletInfo_Result> STVSReceivingDispatchingOrdersPalletInfo(Nullable<int> orderID, Nullable<bool> type)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));

            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingDispatchingOrdersPalletInfo_Result>("STVSReceivingDispatchingOrdersPalletInfo", orderIDParameter, typeParameter);
        }

        public virtual int STVSReceivingOrderDetailChangeProductID(Nullable<int> productID, Nullable<int> receivingOrderDetailID, string currentUser)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STVSReceivingOrderDetailChangeProductID", productIDParameter, receivingOrderDetailIDParameter, currentUserParameter);
        }

        public virtual ObjectResult<STVSReceivingOrderDetailListByID_Result> STVSReceivingOrderDetailListByID(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrderDetailListByID_Result>("STVSReceivingOrderDetailListByID", receivingOrderIDParameter);
        }

        public virtual ObjectResult<STVSReceivingOrderDetailsListByOrderID_Result> STVSReceivingOrderDetailsListByOrderID(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrderDetailsListByOrderID_Result>("STVSReceivingOrderDetailsListByOrderID", receivingOrderIDParameter);
        }

        public virtual ObjectResult<STVSReceivingOrderDetailsStockOnHandByRoom1Customer_Result> STVSReceivingOrderDetailsStockOnHandByRoom1Customer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrderDetailsStockOnHandByRoom1Customer_Result>("STVSReceivingOrderDetailsStockOnHandByRoom1Customer", customerIDParameter);
        }

        public virtual ObjectResult<STVSReceivingOrdersListByLocationID_Result> STVSReceivingOrdersListByLocationID(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrdersListByLocationID_Result>("STVSReceivingOrdersListByLocationID", locationIDParameter);
        }

        public virtual ObjectResult<STVSReceivingOrdersListForPalletInfo_Result> STVSReceivingOrdersListForPalletInfo(Nullable<int> productID, Nullable<int> receivingOrderID, Nullable<int> type)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrdersListForPalletInfo_Result>("STVSReceivingOrdersListForPalletInfo", productIDParameter, receivingOrderIDParameter, typeParameter);
        }

        public virtual ObjectResult<STVSReceivingOrdersListForPalletInfoByCustomer_Result> STVSReceivingOrdersListForPalletInfoByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrdersListForPalletInfoByCustomer_Result>("STVSReceivingOrdersListForPalletInfoByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<STVSReceivingOrdersListForPalletInfoRO_Result> STVSReceivingOrdersListForPalletInfoRO(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSReceivingOrdersListForPalletInfoRO_Result>("STVSReceivingOrdersListForPalletInfoRO", productIDParameter);
        }

        public virtual ObjectResult<STVSServicesDefinitionListForLookup_Result> STVSServicesDefinitionListForLookup(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSServicesDefinitionListForLookup_Result>("STVSServicesDefinitionListForLookup", customerIDParameter);
        }

        public virtual ObjectResult<STVSStockMovementsListByPalletID_Result> STVSStockMovementsListByPalletID(Nullable<int> palletID)
        {
            var palletIDParameter = palletID.HasValue ?
                new ObjectParameter("PalletID", palletID) :
                new ObjectParameter("PalletID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVSStockMovementsListByPalletID_Result>("STVSStockMovementsListByPalletID", palletIDParameter);
        }

        public virtual ObjectResult<STVStmpProductRemainsListByCustomerID_Result> STVStmpProductRemainsListByCustomerID(Nullable<int> customerID, Nullable<bool> isMain)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var isMainParameter = isMain.HasValue ?
                new ObjectParameter("IsMain", isMain) :
                new ObjectParameter("IsMain", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STVStmpProductRemainsListByCustomerID_Result>("STVStmpProductRemainsListByCustomerID", customerIDParameter, isMainParameter);
        }

        public virtual ObjectResult<STWarehouseChecking_Result> STWarehouseChecking(string currentUser)
        {
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STWarehouseChecking_Result>("STWarehouseChecking", currentUserParameter);
        }

        public virtual int STWavePickingInsert(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string createdBy)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STWavePickingInsert", customerIDParameter, fromDateParameter, toDateParameter, createdByParameter);
        }

        public virtual ObjectResult<STWorkDefinitionByCustomer_Result> STWorkDefinitionByCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STWorkDefinitionByCustomer_Result>("STWorkDefinitionByCustomer", customerIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadAllStores_Result> ST_WMS_LoadAllStores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadAllStores_Result>("ST_WMS_LoadAllStores");
        }

        public virtual ObjectResult<ST_WMS_LoadRecordProducts_Result> ST_WMS_LoadRecordProducts(Nullable<int> typeLoad, Nullable<int> index, Nullable<int> productID)
        {
            var typeLoadParameter = typeLoad.HasValue ?
                new ObjectParameter("TypeLoad", typeLoad) :
                new ObjectParameter("TypeLoad", typeof(int));

            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadRecordProducts_Result>("ST_WMS_LoadRecordProducts", typeLoadParameter, indexParameter, productIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadAllPalletsByReceivingOrderID_Result> ST_WMS_LoadAllPalletsByReceivingOrderID(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadAllPalletsByReceivingOrderID_Result>("ST_WMS_LoadAllPalletsByReceivingOrderID", receivingOrderIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadAllEmployeesData_Result> ST_WMS_LoadAllEmployeesData(Nullable<int> employeesID)
        {
            var employeesIDParameter = employeesID.HasValue ?
                new ObjectParameter("EmployeesID", employeesID) :
                new ObjectParameter("EmployeesID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadAllEmployeesData_Result>("ST_WMS_LoadAllEmployeesData", employeesIDParameter);
        }

        public virtual int ST_WMS_ExecSQLString(string sQL)
        {
            var sQLParameter = sQL != null ?
                new ObjectParameter("SQL", sQL) :
                new ObjectParameter("SQL", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_WMS_ExecSQLString", sQLParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadListProductByCustomer_Result> ST_WMS_LoadListProductByCustomer(Nullable<int> customerID, Nullable<int> discontinue)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var discontinueParameter = discontinue.HasValue ?
                new ObjectParameter("Discontinue", discontinue) :
                new ObjectParameter("Discontinue", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadListProductByCustomer_Result>("ST_WMS_LoadListProductByCustomer", customerIDParameter, discontinueParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadRecordProductData_Result> ST_WMS_LoadRecordProductData(Nullable<int> typeLoad, Nullable<int> index, Nullable<int> productID)
        {
            var typeLoadParameter = typeLoad.HasValue ?
                new ObjectParameter("TypeLoad", typeLoad) :
                new ObjectParameter("TypeLoad", typeof(int));

            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));

            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadRecordProductData_Result>("ST_WMS_LoadRecordProductData", typeLoadParameter, indexParameter, productIDParameter);
        }

        public virtual int ST_WMS_tmpUpdateRODO(Nullable<int> productID, string userId)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_WMS_tmpUpdateRODO", productIDParameter, userIdParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadReportToManagementLevel_Result> ST_WMS_LoadReportToManagementLevel(Nullable<int> managementLevel)
        {
            var managementLevelParameter = managementLevel.HasValue ?
                new ObjectParameter("ManagementLevel", managementLevel) :
                new ObjectParameter("ManagementLevel", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadReportToManagementLevel_Result>("ST_WMS_LoadReportToManagementLevel", managementLevelParameter);
        }

        public virtual ObjectResult<ST_WMS_tmpProductRemains_Result> ST_WMS_tmpProductRemains(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_tmpProductRemains_Result>("ST_WMS_tmpProductRemains", customerIDParameter);
        }

        public virtual ObjectResult<ST_WMS_EmployeeAllocations_Result> ST_WMS_EmployeeAllocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_EmployeeAllocations_Result>("ST_WMS_EmployeeAllocations");
        }

        public virtual ObjectResult<ST_WWS_CustomerEvents_Result> ST_WWS_CustomerEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WWS_CustomerEvents_Result>("ST_WWS_CustomerEvents");
        }

        public virtual ObjectResult<ST_WMS_LoadBillingContractData_Result> ST_WMS_LoadBillingContractData(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadBillingContractData_Result>("ST_WMS_LoadBillingContractData", customerIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadContractDetailData_Result> ST_WMS_LoadContractDetailData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadContractDetailData_Result>("ST_WMS_LoadContractDetailData");
        }

        public virtual ObjectResult<ST_WMS_LoadContractEmployeeServicesData_Result> ST_WMS_LoadContractEmployeeServicesData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadContractEmployeeServicesData_Result>("ST_WMS_LoadContractEmployeeServicesData");
        }

        public virtual ObjectResult<ST_MSS_LoadContractViewData_Result> ST_MSS_LoadContractViewData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_MSS_LoadContractViewData_Result>("ST_MSS_LoadContractViewData");
        }

        public virtual ObjectResult<ST_WM_LoadStockMovementFromLocationID_Result> ST_WM_LoadStockMovementFromLocationID(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WM_LoadStockMovementFromLocationID_Result>("ST_WM_LoadStockMovementFromLocationID", locationIDParameter);
        }

        public virtual ObjectResult<ST_WMS_ProductsListForChangProduct_Result> ST_WMS_ProductsListForChangProduct(Nullable<int> customerID, Nullable<int> productIDOld, Nullable<decimal> weightPerPackage)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var productIDOldParameter = productIDOld.HasValue ?
                new ObjectParameter("ProductIDOld", productIDOld) :
                new ObjectParameter("ProductIDOld", typeof(int));

            var weightPerPackageParameter = weightPerPackage.HasValue ?
                new ObjectParameter("WeightPerPackage", weightPerPackage) :
                new ObjectParameter("WeightPerPackage", typeof(decimal));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_ProductsListForChangProduct_Result>("ST_WMS_ProductsListForChangProduct", customerIDParameter, productIDOldParameter, weightPerPackageParameter);
        }

        public virtual int ST_WMS_CreateTable_tmpEDIImportMetro(string sqlCreateTable)
        {
            var sqlCreateTableParameter = sqlCreateTable != null ?
                new ObjectParameter("sqlCreateTable", sqlCreateTable) :
                new ObjectParameter("sqlCreateTable", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_WMS_CreateTable_tmpEDIImportMetro", sqlCreateTableParameter);
        }

        public virtual int ST_WMS_ExportToDO(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_WMS_ExportToDO", receivingOrderIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadDPProductData_Result> ST_WMS_LoadDPProductData(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadDPProductData_Result>("ST_WMS_LoadDPProductData", productIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadEDI_Orders_All_Result> ST_WMS_LoadEDI_Orders_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadEDI_Orders_All_Result>("ST_WMS_LoadEDI_Orders_All");
        }

        public virtual ObjectResult<ST_WMS_LoadEDI_Orders_Me_Result> ST_WMS_LoadEDI_Orders_Me(string varCurrentUser)
        {
            var varCurrentUserParameter = varCurrentUser != null ?
                new ObjectParameter("varCurrentUser", varCurrentUser) :
                new ObjectParameter("varCurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadEDI_Orders_Me_Result>("ST_WMS_LoadEDI_Orders_Me", varCurrentUserParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadEDI_Orders_Me_0_Result> ST_WMS_LoadEDI_Orders_Me_0(string varCurrentUser)
        {
            var varCurrentUserParameter = varCurrentUser != null ?
                new ObjectParameter("varCurrentUser", varCurrentUser) :
                new ObjectParameter("varCurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadEDI_Orders_Me_0_Result>("ST_WMS_LoadEDI_Orders_Me_0", varCurrentUserParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadStockMovementFromLocationID_Result> ST_WMS_LoadStockMovementFromLocationID(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadStockMovementFromLocationID_Result>("ST_WMS_LoadStockMovementFromLocationID", locationIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadStockMovementToLocationID_Result> ST_WMS_LoadStockMovementToLocationID(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadStockMovementToLocationID_Result>("ST_WMS_LoadStockMovementToLocationID", locationIDParameter);
        }

        public virtual ObjectResult<ST_WMS_STComboLocationIDFree_Result> ST_WMS_STComboLocationIDFree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_STComboLocationIDFree_Result>("ST_WMS_STComboLocationIDFree");
        }

        public virtual ObjectResult<ST_WMS_STEDI_comboCustomerMainID_Result> ST_WMS_STEDI_comboCustomerMainID(Nullable<bool> isMain)
        {
            var isMainParameter = isMain.HasValue ?
                new ObjectParameter("IsMain", isMain) :
                new ObjectParameter("IsMain", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_STEDI_comboCustomerMainID_Result>("ST_WMS_STEDI_comboCustomerMainID", isMainParameter);
        }

        public virtual ObjectResult<ST_WMS_STEDI_comboCustomerMainID_1_Result> ST_WMS_STEDI_comboCustomerMainID_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_STEDI_comboCustomerMainID_1_Result>("ST_WMS_STEDI_comboCustomerMainID_1");
        }

        public virtual ObjectResult<ST_WMS_ExportROToDO_Result> ST_WMS_ExportROToDO(Nullable<int> receivingOrderID)
        {
            var receivingOrderIDParameter = receivingOrderID.HasValue ?
                new ObjectParameter("ReceivingOrderID", receivingOrderID) :
                new ObjectParameter("ReceivingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_ExportROToDO_Result>("ST_WMS_ExportROToDO", receivingOrderIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadStockOnHandAverageByCustomer_Result> ST_WMS_LoadStockOnHandAverageByCustomer(Nullable<int> customerID, Nullable<System.DateTime> varFromDate, Nullable<System.DateTime> varTodate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var varFromDateParameter = varFromDate.HasValue ?
                new ObjectParameter("varFromDate", varFromDate) :
                new ObjectParameter("varFromDate", typeof(System.DateTime));

            var varTodateParameter = varTodate.HasValue ?
                new ObjectParameter("varTodate", varTodate) :
                new ObjectParameter("varTodate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadStockOnHandAverageByCustomer_Result>("ST_WMS_LoadStockOnHandAverageByCustomer", customerIDParameter, varFromDateParameter, varTodateParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadBussinessTrips_Result> ST_WMS_LoadBussinessTrips(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadBussinessTrips_Result>("ST_WMS_LoadBussinessTrips", loginNameParameter);
        }

        public virtual ObjectResult<WebChartStockOnHandByAge_Result> WebChartStockOnHandByAge(Nullable<int> customerMainID, Nullable<byte> flag)
        {
            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebChartStockOnHandByAge_Result>("WebChartStockOnHandByAge", customerMainIDParameter, flagParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadWorkDetails_Result> ST_WMS_LoadWorkDetails(Nullable<int> workID)
        {
            var workIDParameter = workID.HasValue ?
                new ObjectParameter("WorkID", workID) :
                new ObjectParameter("WorkID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWorkDetails_Result>("ST_WMS_LoadWorkDetails", workIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadWorks_Result> ST_WMS_LoadWorks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWorks_Result>("ST_WMS_LoadWorks");
        }

        public virtual ObjectResult<ST_WMS_StockMovementMassAll_Result> ST_WMS_StockMovementMassAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_StockMovementMassAll_Result>("ST_WMS_StockMovementMassAll");
        }

        public virtual ObjectResult<ST_WMS_LoadWorkDefinitionList_Result> ST_WMS_LoadWorkDefinitionList(Nullable<bool> discontinue)
        {
            var discontinueParameter = discontinue.HasValue ?
                new ObjectParameter("Discontinue", discontinue) :
                new ObjectParameter("Discontinue", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWorkDefinitionList_Result>("ST_WMS_LoadWorkDefinitionList", discontinueParameter);
        }

        public virtual ObjectResult<ST_WMS_StockMovementMassFromDateToDate_Result> ST_WMS_StockMovementMassFromDateToDate(string fromDate, string toDate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));

            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_StockMovementMassFromDateToDate_Result>("ST_WMS_StockMovementMassFromDateToDate", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadOtherServiceDetails_Result> ST_WMS_LoadOtherServiceDetails(Nullable<int> otherServiceID)
        {
            var otherServiceIDParameter = otherServiceID.HasValue ?
                new ObjectParameter("OtherServiceID", otherServiceID) :
                new ObjectParameter("OtherServiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadOtherServiceDetails_Result>("ST_WMS_LoadOtherServiceDetails", otherServiceIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadOtherServices_Result> ST_WMS_LoadOtherServices(Nullable<int> storeID)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadOtherServices_Result>("ST_WMS_LoadOtherServices", storeIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadQuarantineByDate_Result> ST_WMS_LoadQuarantineByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadQuarantineByDate_Result>("ST_WMS_LoadQuarantineByDate");
        }
        public virtual ObjectResult<ST_WMS_LoadOtherServiceReport_Result> ST_WMS_LoadOtherServiceReport(Nullable<int> otherService)
        {
            var otherServiceParameter = otherService.HasValue ?
                new ObjectParameter("OtherService", otherService) :
                new ObjectParameter("OtherService", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadOtherServiceReport_Result>("ST_WMS_LoadOtherServiceReport", otherServiceParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadWorksNew_Result> ST_WMS_LoadWorksNew(Nullable<int> flag, Nullable<int> mHLWorkDefinitionID, Nullable<int> mHLWorkID, Nullable<int> employeeID, Nullable<int> customerMainID, Nullable<int> payRollMonthID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string currentUser)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));

            var mHLWorkDefinitionIDParameter = mHLWorkDefinitionID.HasValue ?
                new ObjectParameter("MHLWorkDefinitionID", mHLWorkDefinitionID) :
                new ObjectParameter("MHLWorkDefinitionID", typeof(int));

            var mHLWorkIDParameter = mHLWorkID.HasValue ?
                new ObjectParameter("MHLWorkID", mHLWorkID) :
                new ObjectParameter("MHLWorkID", typeof(int));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var customerMainIDParameter = customerMainID.HasValue ?
                new ObjectParameter("CustomerMainID", customerMainID) :
                new ObjectParameter("CustomerMainID", typeof(int));

            var payRollMonthIDParameter = payRollMonthID.HasValue ?
                new ObjectParameter("PayRollMonthID", payRollMonthID) :
                new ObjectParameter("PayRollMonthID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWorksNew_Result>("ST_WMS_LoadWorksNew", flagParameter, mHLWorkDefinitionIDParameter, mHLWorkIDParameter, employeeIDParameter, customerMainIDParameter, payRollMonthIDParameter, fromDateParameter, toDateParameter, currentUserParameter);
        }
        public virtual ObjectResult<ST_WMS_InternalAudit_Result> ST_WMS_InternalAudit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_InternalAudit_Result>("ST_WMS_InternalAudit");
        }
        public virtual ObjectResult<ST_WMS_LoadDispatchingCartons_Result> ST_WMS_LoadDispatchingCartons(Nullable<int> dispatchingProductID)
        {
            var dispatchingProductIDParameter = dispatchingProductID.HasValue ?
                new ObjectParameter("DispatchingProductID", dispatchingProductID) :
                new ObjectParameter("DispatchingProductID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadDispatchingCartons_Result>("ST_WMS_LoadDispatchingCartons", dispatchingProductIDParameter);
        }
        public virtual ObjectResult<WebBillingSummaryCrosstap_Result> WebBillingSummaryCrosstap(Nullable<int> customerID, Nullable<bool> flag)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebBillingSummaryCrosstap_Result>("WebBillingSummaryCrosstap", customerIDParameter, flagParameter);
        }

        public virtual ObjectResult<WebBillingSummaryDetailCrosstap_Result> WebBillingSummaryDetailCrosstap(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebBillingSummaryDetailCrosstap_Result>("WebBillingSummaryDetailCrosstap", fromDateParameter, todateParameter);
        }

        public virtual ObjectResult<WebBillingSummaryDetails_Result> WebBillingSummaryDetails(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> storeID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WebBillingSummaryDetails_Result>("WebBillingSummaryDetails", fromDateParameter, todateParameter, storeIDParameter);
        }

        public virtual ObjectResult<ST_WMS_StockOnHandByRoomAverageReport_Result> ST_WMS_StockOnHandByRoomAverageReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_StockOnHandByRoomAverageReport_Result>("ST_WMS_StockOnHandByRoomAverageReport", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadOtherServicesByOtherServiceID_Result> ST_WMS_LoadOtherServicesByOtherServiceID(Nullable<int> otherServiceID)
        {
            var otherServiceIDParameter = otherServiceID.HasValue ?
                new ObjectParameter("OtherServiceID", otherServiceID) :
                new ObjectParameter("OtherServiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadOtherServicesByOtherServiceID_Result>("ST_WMS_LoadOtherServicesByOtherServiceID", otherServiceIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadWarningOffice_Result> ST_WMS_LoadWarningOffice(Nullable<int> storeID)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWarningOffice_Result>("ST_WMS_LoadWarningOffice", storeIDParameter);
        }

        public virtual ObjectResult<ST_WMS_WarningFDTDReport_Result> ST_WMS_WarningFDTDReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_WarningFDTDReport_Result>("ST_WMS_WarningFDTDReport", fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<ST_WMS_WarningReport_Result> ST_WMS_WarningReport(Nullable<int> warningID)
        {
            var warningIDParameter = warningID.HasValue ?
                new ObjectParameter("WarningID", warningID) :
                new ObjectParameter("WarningID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_WarningReport_Result>("ST_WMS_WarningReport", warningIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadEvaluationDetail_Result> ST_WMS_LoadEvaluationDetail(Nullable<int> employeeID, Nullable<int> payRollMonthlyID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var payRollMonthlyIDParameter = payRollMonthlyID.HasValue ?
                new ObjectParameter("PayRollMonthlyID", payRollMonthlyID) :
                new ObjectParameter("PayRollMonthlyID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadEvaluationDetail_Result>("ST_WMS_LoadEvaluationDetail", employeeIDParameter, payRollMonthlyIDParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadUserAccountByEmployeeID_Result> ST_WMS_LoadUserAccountByEmployeeID(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadUserAccountByEmployeeID_Result>("ST_WMS_LoadUserAccountByEmployeeID", employeeIDParameter);
        }
        public virtual int STAndroid_Login_Register(string newUserName, string newPassword, string newPasswordConfirm, Nullable<int> warehouseID, Nullable<bool> isAllowOutside, string userName, ObjectParameter returnStatus, Nullable<int> varStoreID, string deviceNumber, Nullable<bool> isAllowEDI, Nullable<int> employeeID)
        {
            var newUserNameParameter = newUserName != null ?
                new ObjectParameter("newUserName", newUserName) :
                new ObjectParameter("newUserName", typeof(string));

            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("newPassword", newPassword) :
                new ObjectParameter("newPassword", typeof(string));

            var newPasswordConfirmParameter = newPasswordConfirm != null ?
                new ObjectParameter("newPasswordConfirm", newPasswordConfirm) :
                new ObjectParameter("newPasswordConfirm", typeof(string));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(int));

            var isAllowOutsideParameter = isAllowOutside.HasValue ?
                new ObjectParameter("IsAllowOutside", isAllowOutside) :
                new ObjectParameter("IsAllowOutside", typeof(bool));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var varStoreIDParameter = varStoreID.HasValue ?
                new ObjectParameter("varStoreID", varStoreID) :
                new ObjectParameter("varStoreID", typeof(int));

            var deviceNumberParameter = deviceNumber != null ?
                new ObjectParameter("DeviceNumber", deviceNumber) :
                new ObjectParameter("DeviceNumber", typeof(string));

            var isAllowEDIParameter = isAllowEDI.HasValue ?
                new ObjectParameter("IsAllowEDI", isAllowEDI) :
                new ObjectParameter("IsAllowEDI", typeof(bool));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STAndroid_Login_Register", newUserNameParameter, newPasswordParameter, newPasswordConfirmParameter, warehouseIDParameter, isAllowOutsideParameter, userNameParameter, returnStatus, varStoreIDParameter, deviceNumberParameter, isAllowEDIParameter, employeeIDParameter);
        }

        public virtual int STUserAccountUpdate(ObjectParameter resultReturn, string userName, Nullable<bool> isAllowEDI, Nullable<bool> userActive, Nullable<int> storeID, Nullable<byte> warehouseID, string deviceNumber, Nullable<bool> isAllowOutside, Nullable<bool> isAllowChangeStore, string vietnamName, Nullable<int> employeeID, string newPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var isAllowEDIParameter = isAllowEDI.HasValue ?
                new ObjectParameter("IsAllowEDI", isAllowEDI) :
                new ObjectParameter("IsAllowEDI", typeof(bool));

            var userActiveParameter = userActive.HasValue ?
                new ObjectParameter("UserActive", userActive) :
                new ObjectParameter("UserActive", typeof(bool));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(byte));

            var deviceNumberParameter = deviceNumber != null ?
                new ObjectParameter("DeviceNumber", deviceNumber) :
                new ObjectParameter("DeviceNumber", typeof(string));

            var isAllowOutsideParameter = isAllowOutside.HasValue ?
                new ObjectParameter("IsAllowOutside", isAllowOutside) :
                new ObjectParameter("IsAllowOutside", typeof(bool));

            var isAllowChangeStoreParameter = isAllowChangeStore.HasValue ?
                new ObjectParameter("IsAllowChangeStore", isAllowChangeStore) :
                new ObjectParameter("IsAllowChangeStore", typeof(bool));

            var vietnamNameParameter = vietnamName != null ?
                new ObjectParameter("VietnamName", vietnamName) :
                new ObjectParameter("VietnamName", typeof(string));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STUserAccountUpdate", resultReturn, userNameParameter, isAllowEDIParameter, userActiveParameter, storeIDParameter, warehouseIDParameter, deviceNumberParameter, isAllowOutsideParameter, isAllowChangeStoreParameter, vietnamNameParameter, employeeIDParameter, newPasswordParameter);
        }
        public virtual int STUserAccountChangePassword(ObjectParameter resultReturn, string userName, string password, string newPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));

            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STUserAccountChangePassword", resultReturn, userNameParameter, passwordParameter, newPasswordParameter);
        }

        public virtual ObjectResult<STEmployeeFamilyMembers_Result> STEmployeeFamilyMembers(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeFamilyMembers_Result>("STEmployeeFamilyMembers", employeeIDParameter);
        }
        public virtual ObjectResult<ST_WMS_LoadInquiryDetailByInquiryID_Result> ST_WMS_LoadInquiryDetailByInquiryID(Nullable<int> inquiryID)
        {
            var inquiryIDParameter = inquiryID.HasValue ?
                new ObjectParameter("InquiryID", inquiryID) :
                new ObjectParameter("InquiryID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadInquiryDetailByInquiryID_Result>("ST_WMS_LoadInquiryDetailByInquiryID", inquiryIDParameter);
        }
        public virtual ObjectResult<ST_WMS_LoadWavePickingByCustomer_Result> ST_WMS_LoadWavePickingByCustomer(Nullable<int> wavePickingID)
        {
            var wavePickingIDParameter = wavePickingID.HasValue ?
                new ObjectParameter("WavePickingID", wavePickingID) :
                new ObjectParameter("WavePickingID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadWavePickingByCustomer_Result>("ST_WMS_LoadWavePickingByCustomer", wavePickingIDParameter);
        }

        public virtual int STWavePickingInsert(Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string createdBy, string strOrderID, string orderType, ObjectParameter returnWavePickingID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            var strOrderIDParameter = strOrderID != null ?
                new ObjectParameter("strOrderID", strOrderID) :
                new ObjectParameter("strOrderID", typeof(string));

            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STWavePickingInsert", customerIDParameter, fromDateParameter, toDateParameter, createdByParameter, strOrderIDParameter, orderTypeParameter, returnWavePickingID);
        }
        public virtual ObjectResult<ST_WMS_LoadInquiryServicesByInquiryDetailsID_Result> ST_WMS_LoadInquiryServicesByInquiryDetailsID(Nullable<int> inquiryDetailsID)
        {
            var inquiryDetailsIDParameter = inquiryDetailsID.HasValue ?
                new ObjectParameter("InquiryDetailsID", inquiryDetailsID) :
                new ObjectParameter("InquiryDetailsID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadInquiryServicesByInquiryDetailsID_Result>("ST_WMS_LoadInquiryServicesByInquiryDetailsID", inquiryDetailsIDParameter);
        }

        public virtual ObjectResult<STDispatchingProductNewAllListProductByPallet_Result> STDispatchingProductNewAllListProductByPallet(Nullable<int> varCustomerID)
        {
            var varCustomerIDParameter = varCustomerID.HasValue ?
                new ObjectParameter("varCustomerID", varCustomerID) :
                new ObjectParameter("varCustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STDispatchingProductNewAllListProductByPallet_Result>("STDispatchingProductNewAllListProductByPallet", varCustomerIDParameter);
        }

        public virtual int ST_WMS_CustomerQuotationInsert(Nullable<int> customerQuotationID, ObjectParameter newQuotationID, string createBy)
        {
            var customerQuotationIDParameter = customerQuotationID.HasValue ?
                new ObjectParameter("CustomerQuotationID", customerQuotationID) :
                new ObjectParameter("CustomerQuotationID", typeof(int));

            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ST_WMS_CustomerQuotationInsert", customerQuotationIDParameter, newQuotationID, createByParameter);
        }

        public virtual ObjectResult<STComboProductTrans_Result> STComboProductTrans(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STComboProductTrans_Result>("STComboProductTrans", customerIDParameter);
        }

        public virtual ObjectResult<string> STUserAccountAuthorization(string loginName, string applicationName, string userDepartmentDefinitionName, ObjectParameter roleName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));

            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));

            var userDepartmentDefinitionNameParameter = userDepartmentDefinitionName != null ?
                new ObjectParameter("UserDepartmentDefinitionName", userDepartmentDefinitionName) :
                new ObjectParameter("UserDepartmentDefinitionName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("STUserAccountAuthorization", loginNameParameter, applicationNameParameter, userDepartmentDefinitionNameParameter, roleName);
        }

        public virtual int STReceivingOrderDetailPalletBreak(Nullable<int> receivingOrderDetailID, string palletIDString, string currentUser, ObjectParameter newReceivingOrderDetailID)
        {
            var receivingOrderDetailIDParameter = receivingOrderDetailID.HasValue ?
                new ObjectParameter("ReceivingOrderDetailID", receivingOrderDetailID) :
                new ObjectParameter("ReceivingOrderDetailID", typeof(int));

            var palletIDStringParameter = palletIDString != null ?
                new ObjectParameter("PalletIDString", palletIDString) :
                new ObjectParameter("PalletIDString", typeof(string));

            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STReceivingOrderDetailPalletBreak", receivingOrderDetailIDParameter, palletIDStringParameter, currentUserParameter, newReceivingOrderDetailID);
        }
        public virtual int STDeliveryOrderInsert(Nullable<int> dispatchingOrderID, string createdBy)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("STDeliveryOrderInsert", dispatchingOrderIDParameter, createdByParameter);
        }
        public virtual ObjectResult<ST_WMS_LoadingReportByDispatchingID_Result> ST_WMS_LoadingReportByDispatchingID(Nullable<int> dispatchingOrderID)
        {
            var dispatchingOrderIDParameter = dispatchingOrderID.HasValue ?
                new ObjectParameter("DispatchingOrderID", dispatchingOrderID) :
                new ObjectParameter("DispatchingOrderID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadingReportByDispatchingID_Result>("ST_WMS_LoadingReportByDispatchingID", dispatchingOrderIDParameter);
        }
        public virtual ObjectResult<ST_WMS_DispatchingCartonByLocationID_Result> ST_WMS_DispatchingCartonByLocationID(Nullable<int> dispatchingLocationID)
        {
            var dispatchingLocationIDParameter = dispatchingLocationID.HasValue ?
                new ObjectParameter("DispatchingLocationID", dispatchingLocationID) :
                new ObjectParameter("DispatchingLocationID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_DispatchingCartonByLocationID_Result>("ST_WMS_DispatchingCartonByLocationID", dispatchingLocationIDParameter);
        }
        public virtual ObjectResult<STEmployeeKPITargetAll_Result> STEmployeeKPITargetAll(Nullable<int> referenceID, string employeeKPITargetCategory)
        {
            var referenceIDParameter = referenceID.HasValue ?
                new ObjectParameter("ReferenceID", referenceID) :
                new ObjectParameter("ReferenceID", typeof(int));

            var employeeKPITargetCategoryParameter = employeeKPITargetCategory != null ?
                new ObjectParameter("EmployeeKPITargetCategory", employeeKPITargetCategory) :
                new ObjectParameter("EmployeeKPITargetCategory", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STEmployeeKPITargetAll_Result>("STEmployeeKPITargetAll", referenceIDParameter, employeeKPITargetCategoryParameter);
        }

        public virtual ObjectResult<ST_WMS_LoadOutsourcedJobs_Result> ST_WMS_LoadOutsourcedJobs(Nullable<int> customerID, Nullable<int> payrollMonthID, Nullable<byte> flag, Nullable<int> employeeID, Nullable<System.DateTime> reportDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            var payrollMonthIDParameter = payrollMonthID.HasValue ?
                new ObjectParameter("PayrollMonthID", payrollMonthID) :
                new ObjectParameter("PayrollMonthID", typeof(int));

            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));

            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));

            var reportDateParameter = reportDate.HasValue ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadOutsourcedJobs_Result>("ST_WMS_LoadOutsourcedJobs", customerIDParameter, payrollMonthIDParameter, flagParameter, employeeIDParameter, reportDateParameter);
        }
        public virtual ObjectResult<STCustomerAddressRoutes_Result> STCustomerAddressRoutes(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerAddressRoutes_Result>("STCustomerAddressRoutes", customerIDParameter);
        }
        public virtual ObjectResult<STCustomerForecastCurrentMonth_Result> STCustomerForecastCurrentMonth(Nullable<int> operatingCostMonthID, Nullable<int> storeID)
        {
            var operatingCostMonthIDParameter = operatingCostMonthID.HasValue ?
                new ObjectParameter("OperatingCostMonthID", operatingCostMonthID) :
                new ObjectParameter("OperatingCostMonthID", typeof(int));

            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerForecastCurrentMonth_Result>("STCustomerForecastCurrentMonth", operatingCostMonthIDParameter, storeIDParameter);
        }

        public virtual ObjectResult<STCustomerForecastHistoryData_Result> STCustomerForecastHistoryData(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STCustomerForecastHistoryData_Result>("STCustomerForecastHistoryData", customerIDParameter);
        }
        public virtual ObjectResult<ST_WMS_LoadEDIDetailsByID_Result> ST_WMS_LoadEDIDetailsByID(Nullable<int> eDI_ID)
        {
            var eDI_IDParameter = eDI_ID.HasValue ?
                new ObjectParameter("EDI_ID", eDI_ID) :
                new ObjectParameter("EDI_ID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ST_WMS_LoadEDIDetailsByID_Result>("ST_WMS_LoadEDIDetailsByID", eDI_IDParameter);
        }
        public virtual ObjectResult<STBillingInvoice_E_Details_Result> STBillingInvoice_E_Details(Nullable<int> billingInvoiceID)
        {
            var billingInvoiceIDParameter = billingInvoiceID.HasValue ?
                new ObjectParameter("BillingInvoiceID", billingInvoiceID) :
                new ObjectParameter("BillingInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingInvoice_E_Details_Result>("STBillingInvoice_E_Details", billingInvoiceIDParameter);
        }

        public virtual ObjectResult<STBillingInvoice_E_Header_Result> STBillingInvoice_E_Header(Nullable<int> billingInvoiceID)
        {
            var billingInvoiceIDParameter = billingInvoiceID.HasValue ?
                new ObjectParameter("BillingInvoiceID", billingInvoiceID) :
                new ObjectParameter("BillingInvoiceID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<STBillingInvoice_E_Header_Result>("STBillingInvoice_E_Header", billingInvoiceIDParameter);
        }
        public virtual ObjectResult<SPLoadLocationBooking_Result> SPLoadLocationBooking(Nullable<int> storeID, Nullable<System.Guid> customerBookingID, Nullable<int> customerBookingDetailID)
        {
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));

            var customerBookingIDParameter = customerBookingID.HasValue ?
                new ObjectParameter("CustomerBookingID", customerBookingID) :
                new ObjectParameter("CustomerBookingID", typeof(System.Guid));

            var customerBookingDetailIDParameter = customerBookingDetailID.HasValue ?
                new ObjectParameter("CustomerBookingDetailID", customerBookingDetailID) :
                new ObjectParameter("CustomerBookingDetailID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPLoadLocationBooking_Result>("SPLoadLocationBooking", storeIDParameter, customerBookingIDParameter, customerBookingDetailIDParameter);
        }
    }
}
